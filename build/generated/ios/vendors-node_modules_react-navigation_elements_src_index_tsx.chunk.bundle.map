{"version":3,"file":"vendors-node_modules_react-navigation_elements_src_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/@react-navigation/elements/src/assets/back-icon-mask.png","webpack:///./node_modules/@react-navigation/elements/src/assets/back-icon.png","webpack:///./node_modules/@react-navigation/elements/src/Background.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/Header.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderBackButton.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderBackContext.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderBackground.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderHeightContext.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderShownContext.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/HeaderTitle.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/getDefaultHeaderHeight.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/getHeaderTitle.tsx","webpack:///./node_modules/@react-navigation/elements/src/Header/useHeaderHeight.tsx","webpack:///./node_modules/@react-navigation/elements/src/MaskedView.ios.tsx","webpack:///./node_modules/@react-navigation/elements/src/MaskedViewNative.tsx","webpack:///./node_modules/@react-navigation/elements/src/MissingIcon.tsx","webpack:///./node_modules/@react-navigation/elements/src/PlatformPressable.tsx","webpack:///./node_modules/@react-navigation/elements/src/ResourceSavingView.tsx","webpack:///./node_modules/@react-navigation/elements/src/SafeAreaProviderCompat.tsx","webpack:///./node_modules/@react-navigation/elements/src/Screen.tsx","webpack:///./node_modules/@react-navigation/elements/src/getNamedContext.tsx","webpack:///./node_modules/@react-navigation/elements/src/index.tsx","webpack:///./node_modules/react-native-safe-area-context/src/InitialWindow.native.ts","webpack:///./node_modules/react-native-safe-area-context/src/NativeSafeAreaProvider.tsx","webpack:///./node_modules/react-native-safe-area-context/src/SafeAreaContext.tsx","webpack:///./node_modules/react-native-safe-area-context/src/SafeAreaView.tsx","webpack:///./node_modules/react-native-safe-area-context/src/index.tsx","webpack:///./node_modules/react-native-safe-area-context/src/specs/NativeSafeAreaContext.ts","webpack:///./node_modules/react-native-safe-area-context/src/specs/NativeSafeAreaProvider.ts","webpack:///./node_modules/react-native-safe-area-context/src/specs/NativeSafeAreaView.ts","webpack:///./node_modules/react-native/Libraries/Image/AssetRegistry.js"],"sourcesContent":["var AssetRegistry = require('react-native/Libraries/Image/AssetRegistry');\nmodule.exports = AssetRegistry.registerAsset({\n  __packager_asset: true,\n  scales: [1],\n  name: \"back-icon-mask\",\n  type: \"png\",\n  hash: \"bf17fd999fa971098b6161af8bebeaa8\",\n  httpServerLocation: \"assets/node_modules/@react-navigation/elements/src/assets\",\n  \n  height: 85,\n  width: 50,\n});","var AssetRegistry = require('react-native/Libraries/Image/AssetRegistry');\nmodule.exports = AssetRegistry.registerAsset({\n  __packager_asset: true,\n  scales: [1,1.5,2,3,4],\n  name: \"back-icon\",\n  type: \"png\",\n  hash: \"2623a5cbd9a8c52cf9f809b4908c8597,1cf29e911f2b322af8ee45c2847fc720,76ab2f94e6290355c3d8c8f708416e82,646a771468c21911ca866dc3f7a7dded,4ecb41d8442e1436a0bdf2589b3d1e47\",\n  httpServerLocation: \"assets/node_modules/@react-navigation/elements/src/assets\",\n  \n  height: 96,\n  width: 96,\n});","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { View, ViewProps } from 'react-native';\n\ntype Props = ViewProps & {\n  children: React.ReactNode;\n};\n\nexport default function Background({ style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <View\n      {...rest}\n      style={[{ flex: 1, backgroundColor: colors.background }, style]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport type { HeaderOptions, Layout } from '../types';\nimport getDefaultHeaderHeight from './getDefaultHeaderHeight';\nimport HeaderBackground from './HeaderBackground';\nimport HeaderShownContext from './HeaderShownContext';\nimport HeaderTitle from './HeaderTitle';\n\ntype Props = HeaderOptions & {\n  /**\n   * Whether the header is in a modal\n   */\n  modal?: boolean;\n  /**\n   * Layout of the screen.\n   */\n  layout?: Layout;\n  /**\n   * Title text for the header.\n   */\n  title: string;\n};\n\nconst warnIfHeaderStylesDefined = (styles: Record<string, any>) => {\n  Object.keys(styles).forEach((styleProp) => {\n    const value = styles[styleProp];\n\n    if (styleProp === 'position' && value === 'absolute') {\n      console.warn(\n        \"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the 'headerTransparent' option.\"\n      );\n    } else if (value !== undefined) {\n      console.warn(\n        `${styleProp} was given a value of ${value}, this has no effect on headerStyle.`\n      );\n    }\n  });\n};\n\nexport default function Header(props: Props) {\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  const {\n    layout = frame,\n    modal = false,\n    title,\n    headerTitle: customTitle,\n    headerTitleAlign = Platform.select({\n      ios: 'center',\n      default: 'left',\n    }),\n    headerLeft,\n    headerLeftLabelVisible,\n    headerTransparent,\n    headerTintColor,\n    headerBackground,\n    headerRight,\n    headerTitleAllowFontScaling: titleAllowFontScaling,\n    headerTitleStyle: titleStyle,\n    headerLeftContainerStyle: leftContainerStyle,\n    headerRightContainerStyle: rightContainerStyle,\n    headerTitleContainerStyle: titleContainerStyle,\n    headerBackgroundContainerStyle: backgroundContainerStyle,\n    headerStyle: customHeaderStyle,\n    headerShadowVisible,\n    headerPressColor,\n    headerPressOpacity,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n  } = props;\n\n  const defaultHeight = getDefaultHeaderHeight(\n    layout,\n    modal,\n    headerStatusBarHeight\n  );\n\n  const {\n    height = defaultHeight,\n    minHeight,\n    maxHeight,\n    backgroundColor,\n    borderBottomColor,\n    borderBottomEndRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n    borderBottomStartRadius,\n    borderBottomWidth,\n    borderColor,\n    borderEndColor,\n    borderEndWidth,\n    borderLeftColor,\n    borderLeftWidth,\n    borderRadius,\n    borderRightColor,\n    borderRightWidth,\n    borderStartColor,\n    borderStartWidth,\n    borderStyle,\n    borderTopColor,\n    borderTopEndRadius,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderTopStartRadius,\n    borderTopWidth,\n    borderWidth,\n    // @ts-expect-error: web support for shadow\n    boxShadow,\n    elevation,\n    shadowColor,\n    shadowOffset,\n    shadowOpacity,\n    shadowRadius,\n    opacity,\n    transform,\n    ...unsafeStyles\n  } = StyleSheet.flatten(customHeaderStyle || {}) as ViewStyle;\n\n  if (process.env.NODE_ENV !== 'production') {\n    warnIfHeaderStylesDefined(unsafeStyles);\n  }\n\n  const safeStyles: ViewStyle = {\n    backgroundColor,\n    borderBottomColor,\n    borderBottomEndRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n    borderBottomStartRadius,\n    borderBottomWidth,\n    borderColor,\n    borderEndColor,\n    borderEndWidth,\n    borderLeftColor,\n    borderLeftWidth,\n    borderRadius,\n    borderRightColor,\n    borderRightWidth,\n    borderStartColor,\n    borderStartWidth,\n    borderStyle,\n    borderTopColor,\n    borderTopEndRadius,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderTopStartRadius,\n    borderTopWidth,\n    borderWidth,\n    // @ts-expect-error: boxShadow is only for Web\n    boxShadow,\n    elevation,\n    shadowColor,\n    shadowOffset,\n    shadowOpacity,\n    shadowRadius,\n    opacity,\n    transform,\n  };\n\n  // Setting a property to undefined triggers default style\n  // So we need to filter them out\n  // Users can use `null` instead\n  for (const styleProp in safeStyles) {\n    // @ts-expect-error: typescript wrongly complains that styleProp cannot be used to index safeStyles\n    if (safeStyles[styleProp] === undefined) {\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete safeStyles[styleProp];\n    }\n  }\n\n  const backgroundStyle = [\n    safeStyles,\n    headerShadowVisible === false && {\n      elevation: 0,\n      shadowOpacity: 0,\n      borderBottomWidth: 0,\n    },\n  ];\n\n  const leftButton = headerLeft\n    ? headerLeft({\n        tintColor: headerTintColor,\n        pressColor: headerPressColor,\n        pressOpacity: headerPressOpacity,\n        labelVisible: headerLeftLabelVisible,\n      })\n    : null;\n\n  const rightButton = headerRight\n    ? headerRight({\n        tintColor: headerTintColor,\n        pressColor: headerPressColor,\n        pressOpacity: headerPressOpacity,\n      })\n    : null;\n\n  const headerTitle =\n    typeof customTitle !== 'function'\n      ? (props: React.ComponentProps<typeof HeaderTitle>) => (\n          <HeaderTitle {...props} />\n        )\n      : customTitle;\n\n  return (\n    <React.Fragment>\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[\n          StyleSheet.absoluteFill,\n          { zIndex: 0 },\n          backgroundContainerStyle,\n        ]}\n      >\n        {headerBackground ? (\n          headerBackground({ style: backgroundStyle })\n        ) : headerTransparent ? null : (\n          <HeaderBackground style={backgroundStyle} />\n        )}\n      </Animated.View>\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[{ height, minHeight, maxHeight, opacity, transform }]}\n      >\n        <View pointerEvents=\"none\" style={{ height: headerStatusBarHeight }} />\n        <View pointerEvents=\"box-none\" style={styles.content}>\n          <Animated.View\n            pointerEvents=\"box-none\"\n            style={[\n              styles.left,\n              headerTitleAlign === 'center' && styles.expand,\n              { marginStart: insets.left },\n              leftContainerStyle,\n            ]}\n          >\n            {leftButton}\n          </Animated.View>\n          <Animated.View\n            pointerEvents=\"box-none\"\n            style={[\n              styles.title,\n              {\n                // Avoid the title from going offscreen or overlapping buttons\n                maxWidth:\n                  headerTitleAlign === 'center'\n                    ? layout.width -\n                      ((leftButton\n                        ? headerLeftLabelVisible !== false\n                          ? 80\n                          : 32\n                        : 16) +\n                        Math.max(insets.left, insets.right)) *\n                        2\n                    : layout.width -\n                      ((leftButton ? 72 : 16) +\n                        (rightButton ? 72 : 16) +\n                        insets.left -\n                        insets.right),\n              },\n              titleContainerStyle,\n            ]}\n          >\n            {headerTitle({\n              children: title,\n              allowFontScaling: titleAllowFontScaling,\n              tintColor: headerTintColor,\n              style: titleStyle,\n            })}\n          </Animated.View>\n          <Animated.View\n            pointerEvents=\"box-none\"\n            style={[\n              styles.right,\n              styles.expand,\n              { marginEnd: insets.right },\n              rightContainerStyle,\n            ]}\n          >\n            {rightButton}\n          </Animated.View>\n        </View>\n      </Animated.View>\n    </React.Fragment>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n  title: {\n    marginHorizontal: 16,\n    justifyContent: 'center',\n  },\n  left: {\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  right: {\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  expand: {\n    flexGrow: 1,\n    flexBasis: 0,\n  },\n});\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport MaskedView from '../MaskedView';\nimport PlatformPressable from '../PlatformPressable';\nimport type { HeaderBackButtonProps } from '../types';\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible,\n  onLabelLayout,\n  onPress,\n  pressColor,\n  pressOpacity,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  testID,\n  style,\n}: HeaderBackButtonProps) {\n  const { colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <PlatformPressable\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      testID={testID}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      android_ripple={{ borderless: true }}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth, // Avoid collapsing when title is long\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.getConstants().isRTL ? -1 : 1 }],\n  },\n});\n","import getNamedContext from '../getNamedContext';\n\nconst HeaderBackContext = getNamedContext<{ title: string } | undefined>(\n  'HeaderBackContext',\n  undefined\n);\n\nexport default HeaderBackContext;\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\ntype Props = Omit<ViewProps, 'style'> & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children?: React.ReactNode;\n};\n\nexport default function HeaderBackground({ style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        {\n          backgroundColor: colors.card,\n          borderBottomColor: colors.border,\n          shadowColor: colors.border,\n        },\n        style,\n      ]}\n      {...rest}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth,\n        },\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n    }),\n  },\n});\n","import getNamedContext from '../getNamedContext';\n\nconst HeaderHeightContext = getNamedContext<number | undefined>(\n  'HeaderHeightContext',\n  undefined\n);\n\nexport default HeaderHeightContext;\n","import getNamedContext from '../getNamedContext';\n\nconst HeaderShownContext = getNamedContext('HeaderShownContext', false);\n\nexport default HeaderShownContext;\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextProps,\n  TextStyle,\n} from 'react-native';\n\ntype Props = Omit<TextProps, 'style'> & {\n  tintColor?: string;\n  children?: string;\n  style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n};\n\nexport default function HeaderTitle({ tintColor, style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.Text\n      accessibilityRole=\"header\"\n      aria-level=\"1\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.title,\n        { color: tintColor === undefined ? colors.text : tintColor },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n});\n","import { Platform } from 'react-native';\n\nimport type { Layout } from '../types';\n\nexport default function getDefaultHeaderHeight(\n  layout: Layout,\n  modalPresentation: boolean,\n  statusBarHeight: number\n): number {\n  let headerHeight;\n\n  const isLandscape = layout.width > layout.height;\n\n  if (Platform.OS === 'ios') {\n    if (Platform.isPad || Platform.isTVOS) {\n      if (modalPresentation) {\n        headerHeight = 56;\n      } else {\n        headerHeight = 50;\n      }\n    } else {\n      if (isLandscape) {\n        headerHeight = 32;\n      } else {\n        if (modalPresentation) {\n          headerHeight = 56;\n        } else {\n          headerHeight = 44;\n        }\n      }\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n}\n","import type { HeaderOptions } from '../types';\n\nexport default function getHeaderTitle(\n  options: { title?: string; headerTitle?: HeaderOptions['headerTitle'] },\n  fallback: string\n): string {\n  return typeof options.headerTitle === 'string'\n    ? options.headerTitle\n    : options.title !== undefined\n    ? options.title\n    : fallback;\n}\n","import * as React from 'react';\n\nimport HeaderHeightContext from './HeaderHeightContext';\n\nexport default function useHeaderHeight() {\n  const height = React.useContext(HeaderHeightContext);\n\n  if (height === undefined) {\n    throw new Error(\n      \"Couldn't find the header height. Are you inside a screen in a navigator with a header?\"\n    );\n  }\n\n  return height;\n}\n","export { default } from './MaskedViewNative';\n","/**\n * The native MaskedView that we explicitly re-export for supported platforms: Android, iOS.\n */\nimport * as React from 'react';\nimport { UIManager } from 'react-native';\n\ntype MaskedViewType =\n  typeof import('@react-native-masked-view/masked-view').default;\n\ntype Props = React.ComponentProps<MaskedViewType> & {\n  children: React.ReactElement;\n};\n\nlet RNCMaskedView: MaskedViewType | undefined;\n\ntry {\n  // Add try/catch to support usage even if it's not installed, since it's optional.\n  // Newer versions of Metro will handle it properly.\n  RNCMaskedView = require('@react-native-masked-view/masked-view').default;\n} catch (e) {\n  // Ignore\n}\n\nconst isMaskedViewAvailable =\n  UIManager.getViewManagerConfig('RNCMaskedView') != null;\n\nexport default function MaskedView({ children, ...rest }: Props) {\n  if (isMaskedViewAvailable && RNCMaskedView) {\n    return <RNCMaskedView {...rest}>{children}</RNCMaskedView>;\n  }\n\n  return children;\n}\n","import * as React from 'react';\nimport { StyleProp, StyleSheet, Text, TextStyle } from 'react-native';\n\ntype Props = {\n  color?: string;\n  size?: number;\n  style?: StyleProp<TextStyle>;\n};\n\nexport default function MissingIcon({ color, size, style }: Props) {\n  return <Text style={[styles.icon, { color, fontSize: size }, style]}>⏷</Text>;\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n","import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  PressableProps,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nexport type Props = Omit<PressableProps, 'style'> & {\n  pressColor?: string;\n  pressOpacity?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children: React.ReactNode;\n};\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\n/**\n * PlatformPressable provides an abstraction on top of Pressable to handle platform differences.\n */\nexport default function PlatformPressable({\n  onPressIn,\n  onPressOut,\n  android_ripple,\n  pressColor,\n  pressOpacity = 0.3,\n  style,\n  ...rest\n}: Props) {\n  const { dark } = useTheme();\n  const [opacity] = React.useState(() => new Animated.Value(1));\n\n  const animateTo = (toValue: number, duration: number) => {\n    if (ANDROID_SUPPORTS_RIPPLE) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    animateTo(pressOpacity, 0);\n    onPressIn?.(e);\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    animateTo(1, 200);\n    onPressOut?.(e);\n  };\n\n  return (\n    <AnimatedPressable\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      android_ripple={\n        ANDROID_SUPPORTS_RIPPLE\n          ? {\n              color:\n                pressColor !== undefined\n                  ? pressColor\n                  : dark\n                  ? 'rgba(255, 255, 255, .32)'\n                  : 'rgba(0, 0, 0, .32)',\n              ...android_ripple,\n            }\n          : undefined\n      }\n      style={[{ opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1 }, style]}\n      {...rest}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Platform, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\ntype Props = {\n  visible: boolean;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default function ResourceSavingScene({\n  visible,\n  children,\n  style,\n  ...rest\n}: Props) {\n  if (Platform.OS === 'web') {\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!visible}\n        style={[\n          { display: visible ? 'flex' : 'none' },\n          styles.container,\n          style,\n        ]}\n        pointerEvents={visible ? 'auto' : 'none'}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[styles.container, style]}\n      // box-none doesn't seem to work properly on Android\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <View\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS & macOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' || Platform.OS === 'macos' ? !visible : true\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n        style={visible ? styles.attached : styles.detached}\n      >\n        {children}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n","import * as React from 'react';\nimport {\n  Dimensions,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  initialWindowMetrics,\n  SafeAreaInsetsContext,\n  SafeAreaProvider,\n} from 'react-native-safe-area-context';\n\ntype Props = {\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst { width = 0, height = 0 } = Dimensions.get('window');\n\n// To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\nconst initialMetrics =\n  Platform.OS === 'web' || initialWindowMetrics == null\n    ? {\n        frame: { x: 0, y: 0, width, height },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }\n    : initialWindowMetrics;\n\nexport default function SafeAreaProviderCompat({ children, style }: Props) {\n  return (\n    <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return <View style={[styles.container, style]}>{children}</View>;\n        }\n\n        return (\n          <SafeAreaProvider initialMetrics={initialMetrics} style={style}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaInsetsContext.Consumer>\n  );\n}\n\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","import {\n  NavigationContext,\n  NavigationProp,\n  NavigationRouteContext,\n  ParamListBase,\n  RouteProp,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\n\ntype Props = {\n  focused: boolean;\n  modal?: boolean;\n  navigation: NavigationProp<ParamListBase>;\n  route: RouteProp<ParamListBase>;\n  header: React.ReactNode;\n  headerShown?: boolean;\n  headerStatusBarHeight?: number;\n  headerTransparent?: boolean;\n  style?: StyleProp<ViewStyle>;\n  children: React.ReactNode;\n};\n\nexport default function Screen(props: Props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style,\n  } = props;\n\n  const [headerHeight, setHeaderHeight] = React.useState(() =>\n    getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight)\n  );\n\n  return (\n    <Background\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.container, style]}\n    >\n      <View style={styles.content}>\n        <HeaderShownContext.Provider\n          value={isParentHeaderShown || headerShown !== false}\n        >\n          <HeaderHeightContext.Provider\n            value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n          >\n            {children}\n          </HeaderHeightContext.Provider>\n        </HeaderShownContext.Provider>\n      </View>\n      {headerShown ? (\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <View\n              onLayout={(e) => {\n                const { height } = e.nativeEvent.layout;\n\n                setHeaderHeight(height);\n              }}\n              style={headerTransparent ? styles.absolute : null}\n            >\n              {header}\n            </View>\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      ) : null}\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n","import * as React from 'react';\n\nconst contexts = '__react_navigation__elements_contexts';\n\ndeclare global {\n  var __react_navigation__elements_contexts: Map<string, React.Context<any>>;\n}\n\n// We use a global variable to keep our contexts so that we can reuse same contexts across packages\nglobal[contexts] = global[contexts] ?? new Map<string, React.Context<any>>();\n\nexport default function getNamedContext<T>(\n  name: string,\n  initialValue: T\n): React.Context<T> {\n  let context = global[contexts].get(name);\n\n  if (context) {\n    return context;\n  }\n\n  context = React.createContext<T>(initialValue);\n  context.displayName = name;\n\n  global[contexts].set(name, context);\n\n  return context;\n}\n","export { default as Background } from './Background';\nexport { default as getDefaultHeaderHeight } from './Header/getDefaultHeaderHeight';\nexport { default as getHeaderTitle } from './Header/getHeaderTitle';\nexport { default as Header } from './Header/Header';\nexport { default as HeaderBackButton } from './Header/HeaderBackButton';\nexport { default as HeaderBackContext } from './Header/HeaderBackContext';\nexport { default as HeaderBackground } from './Header/HeaderBackground';\nexport { default as HeaderHeightContext } from './Header/HeaderHeightContext';\nexport { default as HeaderShownContext } from './Header/HeaderShownContext';\nexport { default as HeaderTitle } from './Header/HeaderTitle';\nexport { default as useHeaderHeight } from './Header/useHeaderHeight';\nexport { default as MissingIcon } from './MissingIcon';\nexport { default as PlatformPressable } from './PlatformPressable';\nexport { default as ResourceSavingView } from './ResourceSavingView';\nexport { default as SafeAreaProviderCompat } from './SafeAreaProviderCompat';\nexport { default as Screen } from './Screen';\n\nexport const Assets = [\n  // eslint-disable-next-line import/no-commonjs\n  require('./assets/back-icon.png'),\n  // eslint-disable-next-line import/no-commonjs\n  require('./assets/back-icon-mask.png'),\n];\n\nexport * from './types';\n","import type { Metrics } from './SafeArea.types';\nimport NativeSafeAreaContext from './specs/NativeSafeAreaContext';\n\nexport const initialWindowMetrics = (NativeSafeAreaContext?.getConstants()\n  ?.initialWindowMetrics ?? null) as Metrics | null;\n\n/**\n * @deprecated\n */\nexport const initialWindowSafeAreaInsets = initialWindowMetrics?.insets;\n","import NativeSafeAreaProvider from './specs/NativeSafeAreaProvider';\n\nexport { NativeSafeAreaProvider };\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, ViewProps } from 'react-native';\nimport { NativeSafeAreaProvider } from './NativeSafeAreaProvider';\nimport type {\n  EdgeInsets,\n  InsetChangedEvent,\n  Metrics,\n  Rect,\n} from './SafeArea.types';\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nexport const SafeAreaInsetsContext = React.createContext<EdgeInsets | null>(\n  null,\n);\nif (isDev) {\n  SafeAreaInsetsContext.displayName = 'SafeAreaInsetsContext';\n}\n\nexport const SafeAreaFrameContext = React.createContext<Rect | null>(null);\nif (isDev) {\n  SafeAreaFrameContext.displayName = 'SafeAreaFrameContext';\n}\n\nexport interface SafeAreaProviderProps extends ViewProps {\n  children?: React.ReactNode;\n  initialMetrics?: Metrics | null;\n  /**\n   * @deprecated\n   */\n  initialSafeAreaInsets?: EdgeInsets | null;\n}\n\nexport function SafeAreaProvider({\n  children,\n  initialMetrics,\n  initialSafeAreaInsets,\n  style,\n  ...others\n}: SafeAreaProviderProps) {\n  const parentInsets = useParentSafeAreaInsets();\n  const parentFrame = useParentSafeAreaFrame();\n  const [insets, setInsets] = React.useState<EdgeInsets | null>(\n    initialMetrics?.insets ?? initialSafeAreaInsets ?? parentInsets ?? null,\n  );\n  const [frame, setFrame] = React.useState<Rect>(\n    initialMetrics?.frame ??\n      parentFrame ?? {\n        // Backwards compat so we render anyway if we don't have frame.\n        x: 0,\n        y: 0,\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n      },\n  );\n  const onInsetsChange = React.useCallback(\n    (event: InsetChangedEvent) => {\n      const {\n        nativeEvent: { frame: nextFrame, insets: nextInsets },\n      } = event;\n\n      if (\n        // Backwards compat with old native code that won't send frame.\n        nextFrame &&\n        (nextFrame.height !== frame.height ||\n          nextFrame.width !== frame.width ||\n          nextFrame.x !== frame.x ||\n          nextFrame.y !== frame.y)\n      ) {\n        setFrame(nextFrame);\n      }\n\n      if (\n        !insets ||\n        nextInsets.bottom !== insets.bottom ||\n        nextInsets.left !== insets.left ||\n        nextInsets.right !== insets.right ||\n        nextInsets.top !== insets.top\n      ) {\n        setInsets(nextInsets);\n      }\n    },\n    [frame, insets],\n  );\n\n  return (\n    <NativeSafeAreaProvider\n      style={[styles.fill, style]}\n      onInsetsChange={onInsetsChange}\n      {...others}\n    >\n      {insets != null ? (\n        <SafeAreaFrameContext.Provider value={frame}>\n          <SafeAreaInsetsContext.Provider value={insets}>\n            {children}\n          </SafeAreaInsetsContext.Provider>\n        </SafeAreaFrameContext.Provider>\n      ) : null}\n    </NativeSafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nfunction useParentSafeAreaInsets(): EdgeInsets | null {\n  return React.useContext(SafeAreaInsetsContext);\n}\n\nfunction useParentSafeAreaFrame(): Rect | null {\n  return React.useContext(SafeAreaFrameContext);\n}\n\nconst NO_INSETS_ERROR =\n  'No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.';\n\nexport function useSafeAreaInsets(): EdgeInsets {\n  const safeArea = React.useContext(SafeAreaInsetsContext);\n  if (safeArea == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return safeArea;\n}\n\nexport function useSafeAreaFrame(): Rect {\n  const frame = React.useContext(SafeAreaFrameContext);\n  if (frame == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return frame;\n}\n\nexport type WithSafeAreaInsetsProps = {\n  insets: EdgeInsets;\n};\n\nexport function withSafeAreaInsets<T>(\n  WrappedComponent: React.ComponentType<T & WithSafeAreaInsetsProps>,\n): React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<T> & React.RefAttributes<unknown>\n> {\n  return React.forwardRef((props: T, ref: React.Ref<unknown>) => (\n    <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n        if (insets == null) {\n          throw new Error(NO_INSETS_ERROR);\n        }\n        return <WrappedComponent {...props} insets={insets} ref={ref} />;\n      }}\n    </SafeAreaInsetsContext.Consumer>\n  ));\n}\n\n/**\n * @deprecated\n */\nexport function useSafeArea(): EdgeInsets {\n  return useSafeAreaInsets();\n}\n\n/**\n * @deprecated\n */\nexport const SafeAreaConsumer = SafeAreaInsetsContext.Consumer;\n\n/**\n * @deprecated\n */\nexport const SafeAreaContext = SafeAreaInsetsContext;\n","import * as React from 'react';\nimport type { NativeSafeAreaViewProps } from './SafeArea.types';\nimport NativeSafeAreaView from './specs/NativeSafeAreaView';\n\ntype NativeSafeAreaViewInstance = InstanceType<typeof NativeSafeAreaView>;\n\nexport type SafeAreaViewProps = NativeSafeAreaViewProps;\n\nexport const SafeAreaView: React.ForwardRefExoticComponent<\n  SafeAreaViewProps & React.RefAttributes<NativeSafeAreaViewInstance>\n> = React.forwardRef<NativeSafeAreaViewInstance, SafeAreaViewProps>(\n  ({ edges, ...props }, ref) => {\n    return (\n      <NativeSafeAreaView\n        {...props}\n        // Codegen doesn't support default values for array types so\n        // set it here.\n        edges={edges ?? ['bottom', 'left', 'right', 'top']}\n        ref={ref}\n      />\n    );\n  },\n);\n","export * from './SafeAreaContext';\nexport * from './SafeAreaView';\nexport * from './InitialWindow';\nexport * from './SafeArea.types';\n","import type { Double } from 'react-native/Libraries/Types/CodegenTypes';\n// @ts-expect-error: missing type definition for module\nimport type { TurboModule } from 'react-native/Libraries/TurboModule/RCTExport';\n// @ts-expect-error: missing type definition for module\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  getConstants: () => {\n    initialWindowMetrics?: {\n      insets: {\n        top: Double;\n        right: Double;\n        bottom: Double;\n        left: Double;\n      };\n      frame: {\n        x: Double;\n        y: Double;\n        width: Double;\n        height: Double;\n      };\n    };\n  };\n}\n\nexport default TurboModuleRegistry.get<Spec>('RNCSafeAreaContext');\n","import type {\n  DirectEventHandler,\n  Double,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps, HostComponent } from 'react-native';\n\nexport type Event = Readonly<{\n  insets: Readonly<{\n    top: Double;\n    right: Double;\n    bottom: Double;\n    left: Double;\n  }>;\n  frame: Readonly<{\n    x: Double;\n    y: Double;\n    width: Double;\n    height: Double;\n  }>;\n}>;\n\nexport interface NativeProps extends ViewProps {\n  onInsetsChange?: DirectEventHandler<Event, 'paperInsetsChange'>;\n}\n\nexport default codegenNativeComponent<NativeProps>(\n  'RNCSafeAreaProvider',\n) as HostComponent<NativeProps>;\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { WithDefault } from 'react-native/Libraries/Types/CodegenTypes';\nimport type { ViewProps, HostComponent } from 'react-native';\n\nexport interface NativeProps extends ViewProps {\n  mode?: WithDefault<'padding' | 'margin', 'padding'>;\n  // Should be `'top' | 'right' | 'bottom' | 'left'` but that generates invalid code.\n  edges?: readonly string[];\n}\n\nexport default codegenNativeComponent<NativeProps>('RNCSafeAreaView', {\n  interfaceOnly: true,\n}) as HostComponent<NativeProps>;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nmodule.exports = require('@react-native/assets/registry');\n"],"names":["AssetRegistry","module","exports","registerAsset","__packager_asset","scales","name","type","hash","httpServerLocation","height","width","style","rest","colors","useTheme","View","flex","backgroundColor","background","props","insets","useSafeAreaInsets","frame","useSafeAreaFrame","isParentHeaderShown","React","useContext","HeaderShownContext","layout","modal","title","customTitle","headerTitle","headerTitleAlign","Platform","select","ios","default","headerLeft","headerLeftLabelVisible","headerTransparent","headerTintColor","headerBackground","headerRight","titleAllowFontScaling","headerTitleAllowFontScaling","titleStyle","headerTitleStyle","leftContainerStyle","headerLeftContainerStyle","rightContainerStyle","headerRightContainerStyle","titleContainerStyle","headerTitleContainerStyle","backgroundContainerStyle","headerBackgroundContainerStyle","customHeaderStyle","headerStyle","headerShadowVisible","headerPressColor","headerPressOpacity","headerStatusBarHeight","top","defaultHeight","getDefaultHeaderHeight","StyleSheet","flatten","minHeight","maxHeight","borderBottomColor","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderBottomWidth","borderColor","borderEndColor","borderEndWidth","borderLeftColor","borderLeftWidth","borderRadius","borderRightColor","borderRightWidth","borderStartColor","borderStartWidth","borderStyle","borderTopColor","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","borderTopWidth","borderWidth","boxShadow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","opacity","transform","process","safeStyles","styleProp","undefined","backgroundStyle","leftButton","tintColor","pressColor","pressOpacity","labelVisible","rightButton","Fragment","Animated","pointerEvents","absoluteFill","zIndex","styles","content","left","expand","marginStart","maxWidth","Math","max","right","children","allowFontScaling","marginEnd","create","flexDirection","alignItems","marginHorizontal","justifyContent","flexGrow","flexBasis","disabled","backImage","label","labelStyle","onLabelLayout","onPress","screenLayout","customTintColor","titleLayout","truncatedLabel","accessibilityLabel","testID","useState","initialLabelWidth","setInitialLabelWidth","primary","text","handleLabelLayout","e","nativeEvent","x","accessible","accessibilityRole","requestAnimationFrame","android_ripple","borderless","container","hitSlop","bottom","Image","icon","Boolean","iconWithLabel","source","require","fadeDuration","leftLabelText","labelElement","labelWrapper","minWidth","Text","onLayout","color","numberOfLines","OS","maskElement","iconMaskContainer","iconMask","iconMaskFillerRect","renderLabel","hairlineWidth","marginVertical","fontSize","letterSpacing","marginLeft","marginRight","resizeMode","scaleX","I18nManager","getConstants","isRTL","margin","alignSelf","getNamedContext","card","border","android","fontWeight","fontFamily","modalPresentation","statusBarHeight","headerHeight","isLandscape","isPad","isTVOS","options","fallback","HeaderHeightContext","Error","isMaskedViewAvailable","RNCMaskedView","UIManager","getViewManagerConfig","size","onPressIn","onPressOut","dark","Value","animateTo","toValue","duration","ANDROID_SUPPORTS_RIPPLE","timing","easing","Easing","inOut","quad","useNativeDriver","start","AnimatedPressable","createAnimatedComponent","Pressable","Version","visible","hidden","display","collapsable","removeClippedSubviews","attached","detached","overflow","Dimensions","get","initialMetrics","initialWindowMetrics","y","SafeAreaProviderCompat","SafeAreaInsetsContext","Consumer","SafeAreaProvider","dimensions","parentHeaderHeight","focused","header","headerShown","navigation","route","setHeaderHeight","accessibilityElementsHidden","importantForAccessibility","Provider","value","NavigationContext","NavigationRouteContext","absolute","position","initialValue","context","global","contexts","createContext","displayName","set","Map","Assets","NativeSafeAreaContext","initialWindowSafeAreaInsets","initialSafeAreaInsets","others","parentInsets","parentFrame","SafeAreaFrameContext","setInsets","setFrame","onInsetsChange","useCallback","event","nextFrame","nextInsets","NativeSafeAreaProvider","fill","NO_INSETS_ERROR","WrappedComponent","forwardRef","ref","safeArea","SafeAreaConsumer","SafeAreaContext","SafeAreaView","edges","codegenNativeComponent","interfaceOnly"],"sourceRoot":""}