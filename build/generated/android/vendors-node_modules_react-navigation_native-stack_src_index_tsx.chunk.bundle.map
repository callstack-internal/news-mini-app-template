{"version":3,"file":"vendors-node_modules_react-navigation_native-stack_src_index_tsx.chunk.bundle","mappings":";;;;;;;;gfAGA,0NAKA;;;;;;;;;;gcCRA,qJAWA,mHAOA,uLAAuD,61CAEvD,QAASA,qBAAoB,MAOC,IAN5BC,GAAE,MAAFA,EAAE,CACFC,gBAAgB,MAAhBA,gBAAgB,CAChBC,QAAQ,MAARA,QAAQ,CACRC,eAAe,MAAfA,eAAe,CACfC,aAAa,MAAbA,aAAa,CACVC,IAAI,uDAEP,0BACE,GAAAC,4BAAoB,EAMlBC,mBAAW,CAAE,CACbP,EAAE,CAAFA,EAAE,CACFC,gBAAgB,CAAhBA,gBAAgB,CAChBC,QAAQ,CAARA,QAAQ,CACRC,eAAe,CAAfA,eAAe,CACfC,aAAa,CAAbA,aACF,CAAC,CAAC,CAbII,KAAK,uBAALA,KAAK,CAAEC,WAAW,uBAAXA,WAAW,CAAEC,UAAU,uBAAVA,UAAU,CAAEC,iBAAiB,uBAAjBA,iBAAiB,CAezDC,KAAK,CAACC,SAAS,CACb,iBAEEH,WAAU,cAAVA,UAAU,CAAEI,WAAW,cAAvBJ,UAAU,CAAEI,WAAW,CAAG,UAAU,CAAE,SAACC,CAAM,CAAK,CAChD,GAAMC,UAAS,CAAGN,UAAU,CAACM,SAAS,EAAE,CAIxCC,qBAAqB,CAAC,UAAM,CAC1B,GACET,KAAK,CAACU,KAAK,CAAG,CAAC,EACfF,SAAS,EACT,CAAED,CAAC,CAAgCI,gBAAgB,CACnD,CAGAT,UAAU,CAACU,QAAQ,kBACdC,oBAAY,CAACC,QAAQ,EAAE,EAC1BC,MAAM,CAAEf,KAAK,CAACgB,GAAG,GACjB,CACJ,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,GACJ,CAACd,UAAU,CAAEF,KAAK,CAACU,KAAK,CAAEV,KAAK,CAACgB,GAAG,CAAC,CACrC,CAED,MACE,oBAAC,iBAAiB,WAChB,oBAAC,wBAAe,kBACVnB,IAAI,EACR,KAAK,CAAEG,KAAM,CACb,UAAU,CAAEE,UAAW,CACvB,WAAW,CAAED,WAAY,GACzB,EACgB,CAExB,CAAC,aAEc,GAAAgB,8BAAsB,EAKnC1B,oBAAoB,CAAC,CAAC;;;;;;;;;;wbClFxB,mHAA+B,0/BAEhB,QAAS2B,6BAA4B,CAClDlB,KAA0C,CAC1C,wBACA,oBAAgDI,KAAK,CAACe,QAAQ,CAC5D,IAAI,CACL,iEAFMC,gBAAgB,qBAAEC,mBAAmB,qBAI5C,GAAMC,mBAAkB,CAAGF,gBAAgB,qBACvCpB,KAAK,CAACuB,MAAM,CAACC,IAAI,CAAC,SAACC,KAAK,QAAKA,MAAK,CAACT,GAAG,GAAKI,gBAAgB,GAAC,eAA5D,mBAA8DM,IAAI,CAClE,IAAI,CAERtB,KAAK,CAACC,SAAS,CAAC,UAAM,CACpB,GAAIiB,kBAAkB,CAAE,CACtB,GAAMK,QAAO,CACX,eAAeL,kBAAkB,8LAC4F,iJACmB,CAElJM,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC,CACxB,CACF,CAAC,CAAE,CAACL,kBAAkB,CAAC,CAAC,CAExB,MAAO,CAAED,mBAAmB,CAAnBA,mBAAoB,CAAC,CAChC;;;;;;;;;;6GC7BA,qJACA,mHAA+B,0/BAIhB,QAASH,6BAA4B,CAClDjB,WAAqC,CACrC,kDACA,0BAA4B,GAAA6B,+BAAuB,GAAE,CAA7CC,eAAe,uBAAfA,eAAe,CACvB,GAAMC,kBAAiB,CAAGC,MAAM,CAACC,IAAI,CAACH,eAAe,CAAC,CAAC,CAAC,CAAC,CACzD,GAAMI,oBAAmB,CAAGlC,WAAW,CAAC+B,iBAAiB,CAAC,CAC1D,GAAMI,+CAA8C,CAClDD,mBAAmB,qCAAnBA,mBAAmB,CAAEE,OAAO,eAA5B,sBAA8BC,2BAA2B,CAC3D,GAAMC,mBAAkB,CAAGJ,mBAAmB,sCAAnBA,mBAAmB,CAAEV,KAAK,eAA1B,uBAA4BC,IAAI,CAE3DtB,KAAK,CAACC,SAAS,CAAC,UAAM,CACpB,GACE2B,iBAAiB,EAAI,IAAI,EACzBI,8CAA8C,CAC9C,CACA,GAAMT,QAAO,CACX,cAAcY,kBAAkB,4KAC8BA,kBAAkB,qCAAmC,CACrHX,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC,CACxB,CACF,CAAC,CAAE,CACDK,iBAAiB,CACjBI,8CAA8C,CAC9CG,kBAAkB,CACnB,CAAC,CACJ;;;;;;;;;;gcC9BA,mHACA,sHAEA,0LAA2E,6yCAQ3E,GAAIC,UAAS,CAAGC,iBAAsD,CAEtE,GAAIC,IAAqC,CAAE,CACzC,GAAMG,eAAc,CAAG,QAAjBA,eAAc,CAAIC,KAAqB,CAAK,CAChD,GAAQC,kBAAiB,CAAcD,KAAK,CAApCC,iBAAiB,CAAKlD,IAAI,uCAAKiD,KAAK,YAE5C,GAAIE,qBAAQ,CAACC,EAAE,GAAK,KAAK,EAAIF,iBAAiB,GAAK,MAAM,CAAE,CAEzD,MACE,oBAAC,qBAAY,WACX,oBAAC,iBAAI,kBAAKlD,IAAI,EAAI,EACL,CAEnB,CAEA,MAAO,oBAAC,iBAAI,kBAAKA,IAAI,EAAI,CAC3B,CAAC,CAED2C,SAAS,CAAGK,cAAc,CAC5B,CAAC,aAEcL,SAAS,CAAC;;;;;;;;;;oQC/BzB,4OAEO,QAASU,aAAY,CAC1BC,YAAoC,CACZ,2BAExB,GAAMC,oBAAmB,wBAAGC,mCAA0B,CAACC,UAAU,eAArC,sBAAuCZ,OAAO,CAC1E,GAAI,MAAOU,oBAAmB,GAAK,UAAU,CAAE,CAC7C,MAAOD,aAAY,CAACI,GAAG,CAACH,mBAAmB,CAAC,CAC9C,CACA,MAAOD,aAAY,CACrB;;;;;;;;;;waCZA,+HACA,qJACA,mHACA,sHAOA,oIAYA,kJAA+C,qvCAShC,QAASK,aAAY,MA6Bb,0DA5BrBC,aAAY,MAAZA,YAAY,CACZC,qBAAqB,MAArBA,qBAAqB,CACrBpB,2BAA2B,MAA3BA,2BAA2B,CAC3BqB,eAAe,MAAfA,eAAe,CACfC,oBAAoB,MAApBA,oBAAoB,4BACpBC,sBAAsB,CAAtBA,sBAAsB,gCAAG,IAAI,uBAC7BC,iBAAiB,MAAjBA,iBAAiB,CACjBC,mBAAmB,MAAnBA,mBAAmB,CACnBC,gBAAgB,MAAhBA,gBAAgB,CAChBC,gBAAgB,MAAhBA,gBAAgB,CAChBC,6BAA6B,MAA7BA,6BAA6B,CAC7BC,qBAAqB,MAArBA,qBAAqB,CACrBC,gBAAgB,MAAhBA,gBAAgB,CAChBC,UAAU,MAAVA,UAAU,CACVC,WAAW,MAAXA,WAAW,CACXC,WAAW,MAAXA,WAAW,CACXC,WAAW,MAAXA,WAAW,CACXC,gBAAgB,MAAhBA,gBAAgB,CAChBC,eAAe,MAAfA,eAAe,CACfC,WAAW,MAAXA,WAAW,CACXC,gBAAgB,MAAhBA,gBAAgB,CAChBC,gBAAgB,MAAhBA,gBAAgB,CAChBC,iBAAiB,MAAjBA,iBAAiB,CACjBC,sBAAsB,MAAtBA,sBAAsB,CACtBC,qBAAqB,MAArBA,qBAAqB,CACrBvD,KAAK,MAALA,KAAK,CACLwD,KAAK,MAALA,KAAK,CACLC,SAAS,MAATA,SAAS,CAET,cAAmB,GAAAC,gBAAQ,GAAE,CAArBC,MAAM,WAANA,MAAM,CACd,GAAMC,UAAS,CACbX,eAAe,OAAfA,eAAe,CAAK1B,qBAAQ,CAACC,EAAE,GAAK,KAAK,CAAGmC,MAAM,CAACE,OAAO,CAAGF,MAAM,CAACG,IAAK,CAE3E,GAAMC,8BAA6B,CACjCC,uBAAU,CAACC,OAAO,CAAC9B,oBAAoB,CAAC,EAAI,CAAC,CAAC,CAChD,GAAM+B,+BAA8B,CAClCF,uBAAU,CAACC,OAAO,CAACvB,qBAAqB,CAAC,EAAI,CAAC,CAAC,CACjD,GAAMyB,0BAAyB,CAAGH,uBAAU,CAACC,OAAO,CAACb,gBAAgB,CAAC,EAAI,CAAC,CAAC,CAC5E,GAAMgB,qBAAoB,CAAGJ,uBAAU,CAACC,OAAO,CAAClB,WAAW,CAAC,EAAI,CAAC,CAAC,CAClE,GAAMsB,0BAAyB,CAAGL,uBAAU,CAACC,OAAO,CAAC1B,gBAAgB,CAAC,EAAI,CAAC,CAAC,CAE5E,kBACE,GAAAd,2BAAY,EAAC,CACXsC,6BAA6B,CAAClC,UAAU,CACxCqC,8BAA8B,CAACrC,UAAU,CACzCsC,yBAAyB,CAACtC,UAAU,CACrC,CAAC,6DALGyC,mBAAmB,mBAAEC,oBAAoB,mBAAEC,eAAe,mBAOjE,GAAMC,UAAS,CAAG,GAAAC,wBAAc,EAAC,CAAElB,KAAK,CAALA,KAAK,CAAEN,WAAW,CAAXA,WAAY,CAAC,CAAElD,KAAK,CAACC,IAAI,CAAC,CACpE,GAAM0E,WAAU,+BACdR,yBAAyB,CAACS,KAAK,8BAAI3B,eAAe,cAAIU,MAAM,CAACG,IAAI,CACnE,GAAMe,cAAa,CAAGV,yBAAyB,CAACW,QAAQ,CACxD,GAAMC,gBAAe,CAAGZ,yBAAyB,CAACa,UAAU,CAE5D,GAAMC,0BAAoC,CAAG,CAAEL,KAAK,CAAED,UAAW,CAAC,CAElE,GAAIR,yBAAyB,CAACtC,UAAU,EAAI,IAAI,CAAE,CAChDoD,yBAAyB,CAACpD,UAAU,CAAGsC,yBAAyB,CAACtC,UAAU,CAC7E,CAEA,GAAIgD,aAAa,EAAI,IAAI,CAAE,CACzBI,yBAAyB,CAACH,QAAQ,CAAGD,aAAa,CACpD,CAEA,GAAIE,eAAe,EAAI,IAAI,CAAE,CAC3BE,yBAAyB,CAACD,UAAU,CAAGD,eAAe,CACxD,CAEA,GAAMG,kBAAiB,CAAGtC,UAAU,cAAVA,UAAU,CAAG,CACrCgB,SAAS,CAATA,SAAS,CACTH,SAAS,CAATA,SAAS,CACT0B,KAAK,CAAEjD,eACT,CAAC,CAAC,CACF,GAAMkD,mBAAkB,CAAGvC,WAAW,cAAXA,WAAW,CAAG,CACvCe,SAAS,CAATA,SAAS,CACTH,SAAS,CAATA,SACF,CAAC,CAAC,CACF,GAAM4B,mBAAkB,CACtB,MAAOnC,YAAW,GAAK,UAAU,CAC7BA,WAAW,CAAC,CACVU,SAAS,CAATA,SAAS,CACT3F,QAAQ,CAAEwG,SACZ,CAAC,CAAC,CACF,IAAI,CAEV,GAAMa,wBAAuB,CAC3B,MAAOC,2DAAsC,GAAK,SAAS,CACvDA,0DAAsC,CAEtChE,qBAAQ,CAACC,EAAE,GAAK,KAAK,EAAIgE,6BAAS,EAAI,IAAI,CAEhD,GAAMC,mBAAkB,CACtBH,uBAAuB,EAAIhC,sBAAsB,EAAI,IAAI,CAE3D,GAAIA,sBAAsB,EAAI,IAAI,EAAI,CAACgC,uBAAuB,CAAE,CAC9D,KAAM,IAAII,MAAK,kJAEd,CACH,CAOA,GAAMC,uBAAsB,CAAGtD,iBAAiB,CAC5C6C,iBAAiB,EAAI,IAAI,CACzB3D,qBAAQ,CAACC,EAAE,GAAK,SAAS,EAAI6D,kBAAkB,EAAI,IAAI,CAE3D,GAAMO,YAAW,CACfjD,gBAAgB,EAAI,IAAI,EACxBU,iBAAiB,EAEhB,CAACoC,kBAAkB,EAAIjD,gBAAgB,GACtCjB,qBAAQ,CAACC,EAAE,GAAK,KAAK,EACrB6B,iBAAiB,GAAK,KAAM,CAEhC,MACE,qDACGV,gBAAgB,EAAI,IAAI,CACvB,oBAAC,iBAAI,EACH,KAAK,CAAE,CACLkD,MAAM,CAACC,UAAU,CACjBzC,iBAAiB,CAAGwC,MAAM,CAACD,WAAW,CAAG,IAAI,CAC7C,CAAEG,MAAM,CAAE/D,YAAa,CAAC,CACxB,UAEDW,gBAAgB,EAAE,EACd,CACL,IAAI,CACR,qBAAC,2CAAuB,EACtB,sBAAsB,CAAEgD,sBAAuB,CAC/C,eAAe,wBACbvB,oBAAoB,CAAC4B,eAAe,8BACnCrD,gBAAgB,EAAI,IAAI,EAAIU,iBAAiB,CAC1C,aAAa,CACbM,MAAM,CAACsC,IACZ,CACD,SAAS,CAAE7D,sBAAsB,CAAGF,eAAe,CAAG,GAAI,CAC1D,mBAAmB,CAAEoC,mBAAoB,CACzC,iBAAiB,CAAEP,6BAA6B,CAACe,QAAS,CAC1D,UAAU,CAAE9B,gBAAiB,CAC7B,KAAK,CAAEY,SAAU,CACjB,SAAS,CAAEsC,wBAAW,CAACC,YAAY,EAAE,CAACC,KAAK,CAAG,KAAK,CAAG,KAAM,CAC5D,qBAAqB,CAAEvF,2BAA2B,GAAK,KAAM,CAC7D,MAAM,CAAEiC,WAAW,GAAK,KAAM,CAC9B,cAAc,CAAET,iBAAiB,GAAK,KAAM,CAC5C,UAAU,CACRC,mBAAmB,GAAK,KAAK,EAC7BK,gBAAgB,EAAI,IAAI,EACxBU,iBACD,CACD,UAAU,CAAEb,gBAAiB,CAC7B,yBAAyB,CAAE6B,yBAAyB,CAAC2B,eAAgB,CACrE,eAAe,CAAE9B,8BAA8B,CAACU,KAAM,CACtD,oBAAoB,CAAEL,oBAAqB,CAC3C,kBAAkB,CAAEL,8BAA8B,CAACY,QAAS,CAC5D,oBAAoB,CAAEZ,8BAA8B,CAACc,UAAW,CAChE,oBAAoB,CAAEvC,6BAA6B,GAAK,KAAM,CAC9D,KAAK,CAAEgC,SAAU,CACjB,UAAU,CAAEE,UAAW,CACvB,eAAe,CAAEH,eAAgB,CACjC,aAAa,CAAEK,aAAc,CAC7B,eAAe,CAAEE,eAAgB,CACjC,eAAe,CAAExB,qBAAsB,CACvC,WAAW,CAETqC,WAAW,GAAK,IACjB,WAEArE,qBAAQ,CAACC,EAAE,GAAK,KAAK,CACpB,qDACG0D,iBAAiB,EAAI,IAAI,CACxB,oBAAC,6CAAyB,WACvBA,iBAAiB,EACQ,CAC1B,IAAI,CACPG,kBAAkB,EAAI,IAAI,CACzB,oBAAC,+CAA2B,WACzBA,kBAAkB,EACS,CAC5B,IAAI,GACP,CAEH,qDACGH,iBAAiB,EAAI,IAAI,EAAI,MAAOhC,YAAW,GAAK,UAAU,CAC7D,oBAAC,6CAAyB,WACxB,qBAAC,iBAAI,EAAC,KAAK,CAAE2C,MAAM,CAACQ,GAAI,WACrBnB,iBAAiB,CACjB/B,gBAAgB,GAAK,QAAQ,CAC5B,MAAOD,YAAW,GAAK,UAAU,CAC/BmC,kBAAkB,CAElB,oBAAC,qBAAW,EACV,SAAS,CAAEzB,SAAU,CACrB,KAAK,CAAEqB,yBAA0B,UAEhCR,SAAS,EAEb,CACC,IAAI,GACH,EACmB,CAC1B,IAAI,CACPtB,gBAAgB,GAAK,QAAQ,CAC5B,oBAAC,+CAA2B,WACzB,MAAOD,YAAW,GAAK,UAAU,CAChCmC,kBAAkB,CAElB,oBAAC,qBAAW,EACV,SAAS,CAAEzB,SAAU,CACrB,KAAK,CAAEqB,yBAA0B,UAEhCR,SAAS,EAEb,EAC2B,CAC5B,IAAI,GAEX,CACAxC,qBAAqB,GAAKqE,SAAS,CAClC,oBAAC,oDAAgC,EAAC,MAAM,CAAErE,qBAAsB,EAAG,CACjE,IAAI,CACPmD,kBAAkB,EAAI,IAAI,CACzB,oBAAC,8CAA0B,WACxBA,kBAAkB,EACQ,CAC3B,IAAI,CACPK,kBAAkB,CACjB,oBAAC,kDAA8B,WAC7B,oBAAC,6BAAS,kBAAKnC,sBAAsB,EAAI,EACV,CAC/B,IAAI,GACgB,GACzB,CAEP,CAEA,GAAMuC,OAAM,CAAG7B,uBAAU,CAACuC,MAAM,CAAC,CAC/BF,GAAG,CAAE,CACHG,aAAa,CAAE,KAAK,CACpBC,UAAU,CAAE,QACd,CAAC,CACDb,WAAW,CAAE,CACXc,QAAQ,CAAE,UAAU,CACpBC,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CACV,CAAC,CACDhB,UAAU,CAAE,CACViB,QAAQ,CAAE,QACZ,CACF,CAAC,CAAC;;;;;;;;;;2aC7RF,+HAQA,qJAUA,mHACA,sHACA,yJAKA,oIAKA,gHAQA,qMACA,uNACA,6KACA,gKAA0C,0wCAE1C,GAAMC,UAAS,CAAGzF,qBAAQ,CAACC,EAAE,GAAK,SAAS,CAE3C,GAAMyF,iBAAgB,CAAG,QAAnBA,iBAAgB,MAchB,IAbJrG,QAAO,MAAPA,OAAO,CACPZ,KAAK,MAALA,KAAK,CACLkH,YAAY,MAAZA,YAAY,CACZlF,YAAY,MAAZA,YAAY,CACZuB,qBAAqB,MAArBA,qBAAqB,CACrBtF,QAAQ,MAARA,QAAQ,CASR,cAAmB,GAAAyF,gBAAQ,GAAE,CAArBC,MAAM,WAANA,MAAM,CACd,GAAQwD,OAAM,CAAuCvG,OAAO,CAApDuG,MAAM,sBAAuCvG,OAAO,CAA5CkC,WAAW,CAAXA,WAAW,+BAAG,IAAI,sBAAEsE,YAAY,CAAKxG,OAAO,CAAxBwG,YAAY,CAEhD,GAAMC,gBAAe,CAAGL,SAAS,CAC7B,KAAK,CACLE,YAAY,GAAK,MAAM,EAAIpE,WAAW,GAAK,IAAI,EAAIqE,MAAM,GAAKb,SAAS,CAE3E,GAAMgB,uBAAsB,CAAG3I,KAAK,CAAC4I,MAAM,CAACzE,WAAW,CAAC,CAExDnE,KAAK,CAACC,SAAS,CAAC,UAAM,CACpB,GAAA4I,iBAAQ,EACN,CAACR,SAAS,EACRE,YAAY,GAAK,MAAM,EACvBI,sBAAsB,CAACG,OAAO,GAAK3E,WAAW,8IAC6F9C,KAAK,CAACC,IAAI,MACxJ,CAEDqH,sBAAsB,CAACG,OAAO,CAAG3E,WAAW,CAC9C,CAAC,CAAE,CAACA,WAAW,CAAEoE,YAAY,CAAElH,KAAK,CAACC,IAAI,CAAC,CAAC,CAE3C,GAAMyH,QAAO,CACX,oBAAC,uBAAc,EACb,KAAK,CAAE,CACL7B,MAAM,CAAC8B,SAAS,CAChBT,YAAY,GAAK,kBAAkB,EACjCA,YAAY,GAAK,2BAA2B,EAAI,CAC9ClB,eAAe,CAAErC,MAAM,CAACmC,UAC1B,CAAC,CACHsB,YAAY,CACZ,CACF,iBAAiB,CAAEF,YAAY,GAAK,MAAM,CAAG,MAAM,CAAGA,YAAa,UAElEjJ,QAAQ,EAEZ,CAED,GAAIoJ,eAAe,CAAE,CACnB,MACE,oBAAC,+BAAW,EAAC,KAAK,CAAExB,MAAM,CAAC8B,SAAU,UACnC,qBAAC,0BAAM,EAAC,OAAO,MAAC,KAAK,CAAE3D,uBAAU,CAAC4D,YAAa,WAC7C,oBAAC,qBAAY,kBACPhH,OAAO,EACX,KAAK,CAAEZ,KAAM,CACb,YAAY,CAAEgC,YAAa,CAC3B,qBAAqB,CAAEuB,qBAAsB,CAC7C,SAAS,QACT,CACDmE,OAAO,GACD,EACG,CAElB,CAEA,MAAOA,QAAO,CAChB,CAAC,CAeD,GAAMG,UAAS,CAAG,QAAZA,UAAS,OAWO,8BAVpBC,WAAU,OAAVA,UAAU,CACVC,kBAAkB,OAAlBA,kBAAkB,CAClBC,cAAc,OAAdA,cAAc,CACd/I,KAAK,OAALA,KAAK,CACLgJ,eAAe,OAAfA,eAAe,CACfC,QAAQ,OAARA,QAAQ,CACRC,WAAW,OAAXA,WAAW,CACXC,WAAW,OAAXA,WAAW,CACXC,yBAAyB,OAAzBA,yBAAyB,CACzBC,wBAAwB,OAAxBA,wBAAwB,CAExB,GAAQtI,MAAK,CAAkC8H,UAAU,CAAjD9H,KAAK,CAAEvB,UAAU,CAAsBqJ,UAAU,CAA1CrJ,UAAU,CAAEmC,OAAO,CAAakH,UAAU,CAA9BlH,OAAO,CAAE2H,MAAM,CAAKT,UAAU,CAArBS,MAAM,CAC1C,GACEC,kBAAiB,CAiBf5H,OAAO,CAjBT4H,iBAAiB,uBAiBf5H,OAAO,CAhBT6H,uBAAuB,CAAvBA,uBAAuB,gCAAG,MAAM,uBAChCC,cAAc,CAeZ9H,OAAO,CAfT8H,cAAc,CACdvB,MAAM,CAcJvG,OAAO,CAdTuG,MAAM,CACNtG,2BAA2B,CAazBD,OAAO,CAbTC,2BAA2B,CAC3BiC,WAAW,CAYTlC,OAAO,CAZTkC,WAAW,CACXO,iBAAiB,CAWfzC,OAAO,CAXTyC,iBAAiB,CACjBsF,qBAAqB,CAUnB/H,OAAO,CAVT+H,qBAAqB,CACrBC,kBAAkB,CAShBhI,OAAO,CATTgI,kBAAkB,CAClBC,mBAAmB,CAQjBjI,OAAO,CARTiI,mBAAmB,CACnBC,WAAW,CAOTlI,OAAO,CAPTkI,WAAW,CACXC,kBAAkB,CAMhBnI,OAAO,CANTmI,kBAAkB,CAClBC,eAAe,CAKbpI,OAAO,CALToI,eAAe,CACfC,cAAc,CAIZrI,OAAO,CAJTqI,cAAc,CACdC,oBAAoB,CAGlBtI,OAAO,CAHTsI,oBAAoB,CACpBC,cAAc,CAEZvI,OAAO,CAFTuI,cAAc,CACdC,YAAY,CACVxI,OAAO,CADTwI,YAAY,CAGd,GACEC,UAAS,CAKPzI,OAAO,CALTyI,SAAS,CACTC,wBAAwB,CAItB1I,OAAO,CAJT0I,wBAAwB,CACxBC,wBAAwB,CAGtB3I,OAAO,CAHT2I,wBAAwB,uBAGtB3I,OAAO,CAFTsG,YAAY,CAAZA,YAAY,gCAAG,MAAM,6CAEnBtG,OAAO,CADT4I,gBAAgB,CAAhBA,gBAAgB,gCAAGtC,YAAY,GAAK,MAAM,CAAG,YAAY,CAAG,UAAU,uBAGxE,GAAIsC,gBAAgB,GAAK,UAAU,EAAIjI,qBAAQ,CAACC,EAAE,GAAK,KAAK,CAAE,CAM5D,GAAI+H,wBAAwB,GAAKjD,SAAS,CAAE,CAC1CiD,wBAAwB,CAAG,IAAI,CACjC,CACA,GAAID,wBAAwB,GAAKhD,SAAS,CAAE,CAC1CgD,wBAAwB,CAAG,IAAI,CACjC,CACA,GAAID,SAAS,GAAK/C,SAAS,CAAE,CAC3B+C,SAAS,CAAG,mBAAmB,CACjC,CACF,CAIA,GAAMI,qBAAoB,CAAGzB,cAAc,cAAdA,cAAc,CAAEpH,OAAO,CAAC4I,gBAAgB,CACrE,GAAME,yBAAwB,CAC5BD,oBAAoB,EAAI,IAAI,CAAGA,oBAAoB,CAAGD,gBAAgB,CAExE,GAAIvK,KAAK,GAAK,CAAC,CAAE,CAGfiI,YAAY,CAAG,MAAM,CACvB,CAEA,GAAMyC,OAAM,CAAG,GAAAC,6CAAiB,GAAE,CAClC,GAAMC,MAAK,CAAG,GAAAC,4CAAgB,GAAE,CAGhC,GAAMC,QAAO,CAAG7C,YAAY,GAAK,OAAO,EAAIA,YAAY,GAAK,WAAW,CAGxE,GAAM8C,SAAQ,CACZzI,qBAAQ,CAACC,EAAE,GAAK,KAAK,EAAI,EAAED,qBAAQ,CAAC0I,KAAK,EAAI1I,qBAAQ,CAAC2I,MAAM,CAAC,CAC/D,GAAMC,YAAW,CAAGN,KAAK,CAACO,KAAK,CAAGP,KAAK,CAAC9D,MAAM,CAE9C,GAAMsE,oBAAmB,CAAG1L,KAAK,CAAC2L,UAAU,CAACC,4BAAkB,CAAC,CAChE,GAAMC,mBAAkB,CAAG7L,KAAK,CAAC2L,UAAU,CAACG,6BAAmB,CAAC,CAChE,GAAMC,iBAAgB,CAAG/L,KAAK,CAAC2L,UAAU,CAACK,2BAAiB,CAAC,CAE5D,GAAMC,SAAQ,CACZP,mBAAmB,EAClB9I,qBAAQ,CAACC,EAAE,GAAK,KAAK,EAAIuI,OAAQ,EACjCC,QAAQ,EAAIG,WAAY,CACrB,CAAC,CACDR,MAAM,CAAChD,GAAG,CAEhB,0BAA4B,GAAAtG,+BAAuB,GAAE,CAA7CC,eAAe,uBAAfA,eAAe,CAEvB,GAAMuK,oBAAmB,CAAG,GAAAC,gCAAsB,EAACjB,KAAK,CAAEE,OAAO,CAAEa,QAAQ,CAAC,CAE5E,oBACEjM,KAAK,CAACe,QAAQ,CAACmL,mBAAmB,CAAC,iEAD9BE,kBAAkB,qBAAEC,qBAAqB,qBAGhD,GAAMzH,sBAAqB,CAAGqH,QAAQ,GAAK,CAAC,CAC5C,GAAM5I,aAAY,CAAGmF,MAAM,CAAG4D,kBAAkB,CAAGF,mBAAmB,CACtE,GAAMI,WAAU,CAAGlD,kBAAkB,CACjC,CACEvE,KAAK,CAAE,GAAAkB,wBAAc,EACnBqD,kBAAkB,CAACnH,OAAO,CAC1BmH,kBAAkB,CAAC/H,KAAK,CAACC,IAAI,CAEjC,CAAC,CACDyK,gBAAgB,CAEpB,GAAMQ,kBAAiB,wBAAG5K,eAAe,CAACN,KAAK,CAACT,GAAG,CAAC,eAA1B,sBAA4B4L,aAAa,CAEnE,MACE,oBAAC,0BAAM,EAEL,OAAO,MACP,KAAK,CAAEnH,uBAAU,CAAC4D,YAAa,CAC/B,sBAAsB,CAAE0B,wBAAyB,CACjD,sBAAsB,CAAEC,wBAAyB,CACjD,cAAc,CACZvC,SAAS,CAGL,KAAK,CACL0B,cACL,CACD,mBAAmB,CAAEC,qBAAsB,CAC3C,kBAAkB,CAAEC,kBAAmB,CACvC,mBAAmB,CAAEC,mBAAoB,CACzC,gBAAgB,CAAEJ,uBAAwB,CAC1C,iBAAiB,CAAEvB,YAAY,GAAK,MAAM,CAAG,MAAM,CAAGA,YAAa,CACnE,cAAc,CAAEmC,SAAU,CAC1B,iBAAiB,CAAEP,WAAY,CAC/B,kBAAkB,CAAEC,kBAAmB,CACvC,eAAe,CAAEC,eAAgB,CACjC,cAAc,CAAEC,cAAe,CAC/B,cAAc,CAAEE,cAAe,CAC/B,oBAAoB,CAAED,oBAAqB,CAC3C,cAAc,CAAEQ,wBAAyB,CACzC,kBAAkB,CAAElB,iBAAkB,CACtC,eAAe,CAAEP,eAAgB,CACjC,QAAQ,CAAEC,QAAS,CACnB,WAAW,CAAEC,WAAY,CACzB,WAAW,CAAEC,WAAY,CACzB,aAAa,MACb,gCAAgC,CAAE,KAAM,CACxC,yBAAyB,CAAEC,yBAA0B,CAErD,oBAAoB,CAAE6C,iBAAkB,CACxC,wBAAwB,CAAE5C,wBAAyB,CAEnD,YAAY,CAAEc,YAAa,UAE3B,oBAAC,yBAAiB,CAAC,QAAQ,EAAC,KAAK,CAAE3K,UAAW,UAC5C,oBAAC,8BAAsB,CAAC,QAAQ,EAAC,KAAK,CAAEuB,KAAM,UAC5C,oBAAC,4BAAkB,CAAC,QAAQ,EAC1B,KAAK,CAAEqK,mBAAmB,EAAIvH,WAAW,GAAK,KAAM,UAEpD,qBAAC,6BAAmB,CAAC,QAAQ,EAC3B,KAAK,CACHA,WAAW,GAAK,KAAK,CAAGd,YAAY,CAAGwI,kBAAkB,OAAlBA,kBAAkB,CAAI,CAC9D,WASD,oBAAC,qBAAY,kBACP5J,OAAO,EACX,KAAK,CAAEZ,KAAM,CACb,2BAA2B,CACzBkL,iBAAiB,GAAK5E,SAAS,CAC3B,CAAC4E,iBAAiB,CAClBrK,2BACL,CACD,WAAW,CAAEsG,MAAM,GAAKb,SAAS,CAAG,KAAK,CAAGxD,WAAY,CACxD,YAAY,CAAEd,YAAa,CAC3B,eAAe,CACbpB,OAAO,CAACsB,eAAe,GAAKoE,SAAS,CACjC1F,OAAO,CAACsB,eAAe,CACvBoE,SACL,CACD,qBAAqB,CAAE/C,qBAAsB,CAC7C,SAAS,CAAE0H,UAAU,GAAK3E,SAAU,GACpC,CACF,qBAAC,iBAAI,EAAC,KAAK,CAAET,MAAM,CAACuF,KAAM,WACxB,oBAAC,gBAAgB,EACf,OAAO,CAAExK,OAAQ,CACjB,KAAK,CAAEZ,KAAM,CACb,YAAY,CAAEkH,YAAa,CAC3B,YAAY,CAAElF,YAAa,CAC3B,qBAAqB,CAAEuB,qBAAsB,UAE7C,oBAAC,2BAAiB,CAAC,QAAQ,EAAC,KAAK,CAAE0H,UAAW,UAC3C1C,MAAM,EAAE,EACkB,EACZ,CAClBpB,MAAM,GAAKb,SAAS,EAAIxD,WAAW,GAAK,KAAK,CAC5C,oBAAC,iBAAI,EACH,QAAQ,CAAE,kBAAChE,CAAC,CAAK,CACfkM,qBAAqB,CAAClM,CAAC,CAACuM,WAAW,CAACC,MAAM,CAACvF,MAAM,CAAC,CACpD,CAAE,CACF,KAAK,CAAE1C,iBAAiB,CAAGwC,MAAM,CAAC0F,QAAQ,CAAG,IAAK,UAEjDpE,MAAM,CAAC,CACNqE,IAAI,CAAEP,UAAU,CAChBrK,OAAO,CAAPA,OAAO,CACPZ,KAAK,CAALA,KAAK,CACLvB,UAAU,CAAVA,UACF,CAAC,CAAC,EACG,CACL,IAAI,GACH,GACsB,EACH,EACE,EACP,EAzGxBuB,KAAK,CAACT,GAAG,CA0GP,CAEb,CAAC,CAQD,QAASkM,qBAAoB,OAA4C,oBAAzClN,MAAK,OAALA,KAAK,CAAEE,UAAU,OAAVA,UAAU,CAAED,WAAW,OAAXA,WAAW,CAC5D,0BAAgC,GAAAkN,+BAAsB,EAACnN,KAAK,CAAC,CAArDqB,mBAAmB,uBAAnBA,mBAAmB,CAE3B,GAAAH,qCAA4B,EAACjB,WAAW,CAAC,CAEzC,MACE,oBAAC,+BAAW,EAAC,KAAK,CAAEqH,MAAM,CAAC8B,SAAU,UAClCpJ,KAAK,CAACuB,MAAM,CAACgC,GAAG,CAAC,SAAC9B,KAAK,CAAEf,KAAK,CAAK,kCAClC,GAAM6I,WAAU,CAAGtJ,WAAW,CAACwB,KAAK,CAACT,GAAG,CAAC,CACzC,GAAMoM,YAAW,gBAAGpN,KAAK,CAACuB,MAAM,CAACb,KAAK,CAAG,CAAC,CAAC,eAAvB,cAAyBM,GAAG,CAChD,GAAMqM,QAAO,iBAAGrN,KAAK,CAACuB,MAAM,CAACb,KAAK,CAAG,CAAC,CAAC,eAAvB,eAAyBM,GAAG,CAC5C,GAAMwI,mBAAkB,CAAG4D,WAAW,CAClCnN,WAAW,CAACmN,WAAW,CAAC,CACxBrF,SAAS,CACb,GAAM0B,eAAc,CAAG4D,OAAO,CAAGpN,WAAW,CAACoN,OAAO,CAAC,CAAGtF,SAAS,CAEjE,MACE,oBAAC,SAAS,EAER,KAAK,CAAErH,KAAM,CACb,UAAU,CAAE6I,UAAW,CACvB,kBAAkB,CAAEC,kBAAmB,CACvC,cAAc,CAAEC,cAAe,CAC/B,eAAe,CAAE,0BAAM,CACrBvJ,UAAU,CAACoN,IAAI,CAAC,CACdC,IAAI,CAAE,iBAAiB,CACvBC,IAAI,CAAE,CAAEC,OAAO,CAAE,IAAK,CAAC,CACvB1M,MAAM,CAAEU,KAAK,CAACT,GAChB,CAAC,CAAC,CACJ,CAAE,CACF,QAAQ,CAAE,mBAAM,CACdd,UAAU,CAACoN,IAAI,CAAC,CACdC,IAAI,CAAE,eAAe,CACrBC,IAAI,CAAE,CAAEC,OAAO,CAAE,KAAM,CAAC,CACxB1M,MAAM,CAAEU,KAAK,CAACT,GAChB,CAAC,CAAC,CACJ,CAAE,CACF,WAAW,CAAE,sBAAM,CACjBd,UAAU,CAACoN,IAAI,CAAC,CACdC,IAAI,CAAE,eAAe,CACrBC,IAAI,CAAE,CAAEC,OAAO,CAAE,IAAK,CAAC,CACvB1M,MAAM,CAAEU,KAAK,CAACT,GAChB,CAAC,CAAC,CACJ,CAAE,CACF,WAAW,CAAE,qBAAC0M,KAAK,CAAK,CACtBxN,UAAU,CAACU,QAAQ,kBACdC,oBAAY,CAAC8M,GAAG,CAACD,KAAK,CAACZ,WAAW,CAACc,YAAY,CAAC,EACnDC,MAAM,CAAEpM,KAAK,CAACT,GAAG,CACjBD,MAAM,CAAEf,KAAK,CAACgB,GAAG,GACjB,CAEFK,mBAAmB,CAACI,KAAK,CAACT,GAAG,CAAC,CAChC,CAAE,CACF,yBAAyB,CAAE,oCAAM,CAC/Bd,UAAU,CAACU,QAAQ,kBACdC,oBAAY,CAAC8M,GAAG,EAAE,EACrBE,MAAM,CAAEpM,KAAK,CAACT,GAAG,CACjBD,MAAM,CAAEf,KAAK,CAACgB,GAAG,GACjB,CACJ,CAAE,CACF,wBAAwB,CAAE,kCAAC0M,KAAK,CAAK,CACnCxN,UAAU,CAACU,QAAQ,kBACdC,oBAAY,CAAC8M,GAAG,CAACD,KAAK,CAACZ,WAAW,CAACc,YAAY,CAAC,EACnDC,MAAM,CAAEpM,KAAK,CAACT,GAAG,CACjBD,MAAM,CAAEf,KAAK,CAACgB,GAAG,GACjB,CACJ,CAAE,EAhDGS,KAAK,CAACT,GAAG,CAiDd,CAEN,CAAC,CAAC,EACU,CAElB,CAEe,QAAS8M,gBAAe,CAAChL,KAAY,CAAE,CACpD,MACE,oBAAC,gCAAsB,WACrB,oBAAC,oBAAoB,kBAAKA,KAAK,EAAI,EACZ,CAE7B,CAEA,GAAMwE,OAAM,CAAG7B,uBAAU,CAACuC,MAAM,CAAC,CAC/BoB,SAAS,CAAE,CACT2E,IAAI,CAAE,CACR,CAAC,CACDlB,KAAK,CAAE,CACLkB,IAAI,CAAE,CAAC,CACP9F,aAAa,CAAE,gBACjB,CAAC,CACD+E,QAAQ,CAAE,CACR7E,QAAQ,CAAE,UAAU,CACpBC,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPC,KAAK,CAAE,CACT,CACF,CAAC,CAAC;;;;;;;;;;mFCvcF,oHAA0D,stCAO1D,QAAS0F,UAAS,MAMf,IALDC,OAAM,MAANA,MAAM,CACNvO,QAAQ,MAARA,QAAQ,CAKR,GAAMwO,aAAY,CAAG,GAAAlF,aAAM,EAAa,CAAC,CAAC,CAAC,CAACE,OAAO,CACnD,GAAI+E,MAAM,EAAI,CAACC,YAAY,CAACC,OAAO,CAAE,CACnCD,YAAY,CAACC,OAAO,CAAG,GAAIC,QAAO,CAAC,SAACC,OAAO,CAAK,CAC9CH,YAAY,CAACG,OAAO,CAAGA,OAAO,CAChC,CAAC,CAAC,CACF,KAAMH,aAAY,CAACC,OAAO,CAC5B,CAAC,IAAM,IAAIF,MAAM,CAAE,CACjB,KAAMC,aAAY,CAACC,OAAO,CAC5B,CAAC,IAAM,IAAID,YAAY,CAACC,OAAO,CAAE,CAC/BD,YAAY,CAACG,OAAO,EAAG,CACvBH,YAAY,CAACC,OAAO,CAAGpG,SAAS,CAClC,CAEA,MAAO,oBAAC,eAAQ,WAAErI,QAAQ,EAAY,CACxC,CAQO,QAAS4O,OAAM,OAAkD,IAA/CL,OAAM,OAANA,MAAM,CAAEvO,QAAQ,OAARA,QAAQ,yBAAE6O,WAAW,CAAXA,WAAW,4BAAG,IAAI,mBAC3D,MACE,oBAAC,eAAQ,EAAC,QAAQ,CAAEA,WAAY,UAC9B,oBAAC,SAAS,EAAC,MAAM,CAAEN,MAAO,UAAEvO,QAAQ,EAAa,EACxC,CAEf;;;;;;;;;;uFC1CA,mHAA+B,ugCAShBU,KAAK,CAACoO,aAAa,CAChCzG,SAAS,CACV,CAAC;;;;;;;;;;k2CCXF,mHACA,sHAWA,sGACA,8GAEA,uLACA,2KAcA,kGAGiB,gtCAGjB,GAAM0G,oBAAmB,CACvBzL,qBAAQ,CAACC,EAAE,GAAK,KAAK,EACrBD,qBAAQ,CAACC,EAAE,GAAK,SAAS,EACzBD,qBAAQ,CAACC,EAAE,GAAK,SAAS,CAE3B,GAAIyL,eAAc,CAAGD,mBAAmB,CAExC,QAASE,cAAa,EAAmC,IAAlCC,oBAAmB,2DAAG,IAAI,CAC/CF,cAAc,CAAGD,mBAAmB,EAAIG,mBAAmB,CAC3D,GAAIF,cAAc,EAAI,CAACG,sBAAS,CAACC,oBAAoB,CAAC,WAAW,CAAC,CAAE,CAClElN,OAAO,CAACC,KAAK,0GAEZ,CACH,CACF,CAEA,GAAIkN,cAAa,CAAG,KAAK,CAEzB,QAASC,aAAY,EAAuC,IAAtCC,wBAAuB,2DAAG,IAAI,CAClD,GAAMC,MAAK,CAAGC,QAAQ,CAACC,gBAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAG7C,GAAI,EAAEH,KAAK,GAAK,CAAC,EAAIA,KAAK,EAAI,EAAE,CAAC,EAAID,uBAAuB,CAAE,CAC5DrN,OAAO,CAAC0N,IAAI,CACV,kIAAkI,CACnI,CACH,CAEAP,aAAa,CAAGE,uBAAuB,CACzC,CAGA,GAAMM,uBAAsB,CAAG,IAAI,CAEnC,QAASC,eAAc,EAAY,CACjC,MAAOd,eAAc,CACvB,CAIA,GAAIe,kBAAmD,CACvD,GAAIC,2BAAqE,CACzE,GAAIC,qCAA+E,CACnF,GAAIC,kBAAwD,CAC5D,GAAIC,8BAAgF,CACpF,GAAIC,+BAEF,CACF,GAAIC,qBAAsD,CAC1D,GAAIC,gBAAoD,CACxD,GAAIC,wBAAkD,CAEtD,GAAMC,qBAAoB,CAAG,CAC3B,GAAIC,aAAY,EAAG,CACjBV,iBAAiB,CACfA,iBAAiB,EAAI,GAAAW,mCAAsB,EAAC,WAAW,CAAC,CAC1D,MAAOX,kBAAiB,CAC1B,CAAC,CAED,GAAIY,sBAAqB,EAAG,CAC1BX,0BAA0B,CACxBA,0BAA0B,EAC1B,GAAAU,mCAAsB,EAAC,oBAAoB,CAAC,CAC9C,MAAOV,2BAA0B,CACnC,CAAC,CAED,GAAIY,gCAA+B,EAAG,CACpCX,oCAAoC,CAClCA,oCAAoC,GACnC3M,qBAAQ,CAACC,EAAE,GAAK,KAAK,CAClB,GAAAmN,mCAAsB,EAAC,8BAA8B,CAAC,CACtD,IAAI,CAACC,qBAAqB,CAAC,CACjC,MAAOV,qCAAoC,CAC7C,CAAC,CAED,GAAIC,kBAAiB,EAAG,CACtBA,iBAAiB,CACfA,iBAAiB,EAAI,GAAAQ,mCAAsB,EAAC,gBAAgB,CAAC,CAC/D,MAAOR,kBAAiB,CAC1B,CAAC,CAED,GAAIC,8BAA6B,EAAG,CAClCA,6BAA6B,CAC3BA,6BAA6B,EAC7B,GAAAO,mCAAsB,EAAC,4BAA4B,CAAC,CACtD,MAAOP,8BAA6B,CACtC,CAAC,CAED,GAAIC,+BAA8B,EAAG,CACnCA,8BAA8B,CAC5BA,8BAA8B,EAC9B,GAAAM,mCAAsB,EAAC,6BAA6B,CAAC,CACvD,MAAON,+BAA8B,CACvC,CAAC,CAED,GAAIE,gBAAe,EAAG,CACpBA,eAAe,CAAGA,eAAe,EAAI,GAAAI,mCAAsB,EAAC,cAAc,CAAC,CAC3E,MAAOJ,gBAAe,CACxB,CAAC,CAED,GAAIC,wBAAuB,EAAG,CAC5BA,uBAAuB,CACrBA,uBAAuB,EAAI,GAAAG,mCAAsB,EAAC,sBAAsB,CAAC,CAC3E,MAAOH,wBAAuB,CAChC,CACF,CAAC,CASD,QAASM,cAAa,MAA2C,IAAxCtC,OAAM,MAANA,MAAM,CAAEvO,QAAQ,MAARA,QAAQ,CAEvC,oBAAsCU,cAAK,CAACe,QAAQ,CAAC,KAAK,CAAC,iEAApDqP,WAAW,qBAAEC,cAAc,qBAElC,GAAIxC,MAAM,GAAKuC,WAAW,CAAE,CAG1BE,YAAY,CAAC,UAAM,CACjBD,cAAc,CAACxC,MAAM,CAAC,CACxB,CAAC,CAAC,CACJ,CAEA,MAAO,oBAAC,mBAAM,EAAC,MAAM,CAAEA,MAAM,CAAGuC,WAAW,CAAG,KAAM,UAAE9Q,QAAQ,EAAU,CAC1E,CAEA,QAASiR,YAAW,CAAC7N,KAAuB,CAAE,gBAC5C,GAAQpD,SAAQ,CAAcoD,KAAK,CAA3BpD,QAAQ,CAAKG,IAAI,uCAAKiD,KAAK,YACnC,GAAM8N,KAAI,CAAGxQ,cAAK,CAACyQ,QAAQ,CAACC,KAAK,CAACpR,QAAQ,CAAC,CAE3C,GAAMqR,mBAAkB,CAAG3Q,cAAK,CAACyQ,QAAQ,CAACtN,GAAG,CAAC7D,QAAQ,CAAE,SAACsR,KAAK,CAAEtQ,KAAK,CAAK,oFAExE,GAAQoC,MAAK,CAAUkO,KAAK,CAApBlO,KAAK,CAAE9B,GAAG,CAAKgQ,KAAK,CAAbhQ,GAAG,CAClB,GAAMuI,WAAU,oBAAGzG,KAAK,cAALA,KAAK,CAAEyG,UAAU,0BAAIzG,KAAK,kCAALA,KAAK,CAAE7C,WAAW,eAAlB,mBAAqBe,GAAG,CAAC,CACjE,GAAMiQ,cAAa,wBAAG1H,UAAU,mCAAVA,UAAU,CAAElH,OAAO,eAAnB,oBAAqBwI,YAAY,8BAAIkE,aAAa,CAExE,MACE,oBAAC,aAAa,EAAC,MAAM,CAAEkC,aAAa,EAAIL,IAAI,CAAGlQ,KAAK,CAAG,CAAE,UACtDsQ,KAAK,EACQ,CAEpB,CAAC,CAAC,CAEF,MACE,oBAAC,oBAAoB,CAAC,iBAAiB,kBAAKnR,IAAI,WAC7CkR,kBAAkB,GACoB,CAE7C,CAAC,GAcKG,YAAW,2WACPC,GAAG,CAAyC,IAAI,QAChD1D,OAAO,CAAG,GAAI2D,sBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,QAC/BC,QAAQ,CAAG,GAAIF,sBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,QAChCE,YAAY,CAAG,GAAIH,sBAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,QAM5CG,MAAM,CAAG,SAACL,GAAyC,CAAW,CAC5D,OAAKA,GAAG,CAAGA,GAAG,CACd,OAAKrO,KAAK,CAAC2O,cAAc,cAAzB,OAAK3O,KAAK,CAAC2O,cAAc,CAAGN,GAAG,CAAC,CAClC,CAAC,mFAPD,wBAAerO,KAAkB,CAAQ,eACvC,eAAI,CAACqO,GAAG,eAAR,UAAUO,cAAc,CAAC5O,KAAK,CAAC,CACjC,CAAC,sBAOD,iBAAS,iBACP,gBAII,IAAI,CAACA,KAAK,iCAHZ6O,OAAO,CAAPA,OAAO,8BAAGjD,cAAc,uDACxB7D,YAAY,CAAZA,YAAY,gCAAGkE,aAAa,uBACzBlP,IAAI,+DAGT,GAAI8R,OAAO,EAAIlD,mBAAmB,CAAE,gGAClCsB,oBAAoB,CAClBA,oBAAoB,EACpBqB,qBAAQ,CAACQ,uBAAuB,CAAC1B,oBAAoB,CAACC,YAAY,CAAC,CAErE,GAIE0B,OAAM,CAMJhS,IAAI,CANNgS,MAAM,CACNC,aAAa,CAKXjS,IAAI,CALNiS,aAAa,CACbpS,QAAQ,CAING,IAAI,CAJNH,QAAQ,CACRqS,aAAa,CAGXlS,IAAI,CAHNkS,aAAa,CACbC,uBAAuB,CAErBnS,IAAI,CAFNmS,uBAAuB,CACpBlP,KAAK,uCACNjD,IAAI,aAER,GAAIgS,MAAM,GAAK9J,SAAS,EAAI+J,aAAa,GAAK/J,SAAS,CAAE,CACvDnG,OAAO,CAAC0N,IAAI,CACV,+QAA+Q,CAChR,CACDwC,aAAa,CAAGD,MAAM,GAAK,CAAC,CAAG,CAAC,CAAG,CAAC,CACtC,CAEA,GAAMI,UAAS,CAAG,QAAZA,UAAS,CAAId,GAAe,CAAK,2CACrC,GAAIA,GAAG,yBAAHA,GAAG,CAAEe,UAAU,gCAAf,gBAAiBC,eAAe,SAAhC,sBAAkCC,KAAK,CAAE,CAC3CjB,GAAG,CAACe,UAAU,CAACC,eAAe,CAACC,KAAK,kBAC/BjB,GAAG,CAACe,UAAU,CAACC,eAAe,CAACC,KAAK,EACvCC,OAAO,CAAE,KAAK,EACf,CACD,MAAI,CAACb,MAAM,CAACL,GAAG,CAAC,CAClB,CACF,CAAC,CAED,MACE,oBAAC,aAAa,EAAC,MAAM,CAAEtG,YAAY,EAAIiH,aAAa,GAAK,CAAE,UACzD,oBAAC,oBAAoB,kBACfhP,KAAK,EACT,aAAa,CAAEgP,aAAc,CAC7B,uBAAuB,CAAE,CACvBQ,KAAK,wBAAEN,uBAAuB,cAAvBA,uBAAuB,CAAEM,KAAK,8BAAI,CAAC,CAAC,CAC3CC,GAAG,yBAAEP,uBAAuB,cAAvBA,uBAAuB,CAAEO,GAAG,+BAAI,CAAC,CAAC,CACvCnK,GAAG,yBAAE4J,uBAAuB,cAAvBA,uBAAuB,CAAE5J,GAAG,+BAAI,CAAC,CAAC,CACvCoK,MAAM,yBAAER,uBAAuB,cAAvBA,uBAAuB,CAAEQ,MAAM,+BAAI,CAAC,CAC9C,CAAE,CAGF,GAAG,CAAEP,SAAU,CACf,oBAAoB,CAClB,CAACF,aAAa,CACVhK,SAAS,CACTqJ,qBAAQ,CAAC1D,KAAK,CACZ,CACE,CACEZ,WAAW,CAAE,CACXwE,QAAQ,CAAE,IAAI,CAACA,QAAQ,CACvB7D,OAAO,CAAE,IAAI,CAACA,OAAO,CACrB8D,YAAY,CAAE,IAAI,CAACA,YACrB,CACF,CAAC,CACF,CACD,CAAEkB,eAAe,CAAE,IAAK,CAAC,CAEhC,UACA,CAACV,aAAa,CACbrS,QAAQ,CAER,oBAAC,kCAAyB,CAAC,QAAQ,EACjC,KAAK,CAAE,CACL4R,QAAQ,CAAE,IAAI,CAACA,QAAQ,CACvB7D,OAAO,CAAE,IAAI,CAACA,OAAO,CACrB8D,YAAY,CAAE,IAAI,CAACA,YACrB,CAAE,UACD7R,QAAQ,EAEZ,GACoB,EACT,CAEpB,CAAC,IAAM,CAEL,GACEmS,QAAM,CAMJhS,IAAI,CANNgS,MAAM,CACNC,cAAa,CAKXjS,IAAI,CALNiS,aAAa,CACbM,KAAK,CAIHvS,IAAI,CAJNuS,KAAK,CAELX,cAAc,CAEZ5R,IAAI,CAFN4R,cAAc,CACX3O,MAAK,uCACNjD,IAAI,aAER,GAAIgS,OAAM,GAAK9J,SAAS,EAAI+J,cAAa,GAAK/J,SAAS,CAAE,CACvD+J,cAAa,CAAGD,OAAM,GAAK,CAAC,CAAG,CAAC,CAAG,CAAC,CACtC,CACA,MACE,oBAAC,qBAAQ,CAAC,IAAI,gBACZ,KAAK,CAAE,CAACO,KAAK,CAAE,CAAEC,OAAO,CAAEP,cAAa,GAAK,CAAC,CAAG,MAAM,CAAG,MAAO,CAAC,CAAE,CACnE,GAAG,CAAE,IAAI,CAACN,MAAO,EACb1O,MAAK,EACT,CAEN,CACF,CAAC,yBA3HuB1C,cAAK,CAACsS,SAAS,EA8HzC,QAASC,gBAAe,CAAC7P,KAA2B,CAAE,CACpD,mBAA4DA,KAAK,CAAzD6O,OAAO,CAAPA,OAAO,yBAAGjD,cAAc,gBAAEkE,YAAY,CAAc9P,KAAK,CAA/B8P,YAAY,CAAK/S,IAAI,uCAAKiD,KAAK,aAEjE,GAAI6O,OAAO,EAAIlD,mBAAmB,CAAE,CAClC,GAAImE,YAAY,CAAE,CAChB,MAAO,oBAAC,oBAAoB,CAAC,+BAA+B,kBAAK/S,IAAI,EAAI,CAC3E,CACA,MAAO,oBAAC,oBAAoB,CAAC,qBAAqB,kBAAKA,IAAI,EAAI,CACjE,CACA,MAAO,oBAAC,iBAAI,kBAAKA,IAAI,EAAI,CAC3B,CAEA,GAAMyH,OAAM,CAAG7B,uBAAU,CAACuC,MAAM,CAAC,CAC/B6K,aAAa,CAAE,CACb1K,QAAQ,CAAE,UAAU,CACpBC,GAAG,CAAE,CAAC,CACNE,KAAK,CAAE,CAAC,CACRL,aAAa,CAAE,KAAK,CACpBC,UAAU,CAAE,QAAQ,CACpB4K,cAAc,CAAE,QAClB,CACF,CAAC,CAAC,CAEF,GAAMC,iCAAgC,CAAG,QAAnCA,iCAAgC,CAAIjQ,KAAiB,QACzD,oBAAC,oBAAoB,CAAC,8BAA8B,EAClD,IAAI,CAAC,MAAM,CACX,KAAK,CAAEwE,MAAM,CAACuL,aAAc,UAC5B,oBAAC,kBAAK,gBAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAE,CAAE,EAAK/P,KAAK,EAAI,EACL,EACvD,CAED,GAAMkQ,2BAA0B,CAAG,QAA7BA,2BAA0B,CAC9BlQ,KAAyC,QAEzC,oBAAC,oBAAoB,CAAC,8BAA8B,kBAC9CA,KAAK,EACT,IAAI,CAAC,OAAO,CACZ,KAAK,CAAEwE,MAAM,CAACuL,aAAc,GAC5B,EACH,CAED,GAAMI,0BAAyB,CAAG,QAA5BA,0BAAyB,CAC7BnQ,KAAyC,QAEzC,oBAAC,oBAAoB,CAAC,8BAA8B,kBAC9CA,KAAK,EACT,IAAI,CAAC,MAAM,CACX,KAAK,CAAEwE,MAAM,CAACuL,aAAc,GAC5B,EACH,CAED,GAAMK,4BAA2B,CAAG,QAA9BA,4BAA2B,CAC/BpQ,KAAyC,QAEzC,oBAAC,oBAAoB,CAAC,8BAA8B,kBAC9CA,KAAK,EACT,IAAI,CAAC,QAAQ,CACb,KAAK,CAAEwE,MAAM,CAACuL,aAAc,GAC5B,EACH,CAED,GAAMM,+BAA8B,CAAG,QAAjCA,+BAA8B,CAClCrQ,KAA8C,QAE9C,oBAAC,oBAAoB,CAAC,8BAA8B,kBAC9CA,KAAK,EACT,IAAI,CAAC,WAAW,CAChB,KAAK,CAAEwE,MAAM,CAACuL,aAAc,GAC5B,EACH,CAkBD,GAAMO,cAAa,CAAGhT,cAAK,CAACoO,aAAa,CAAC0C,WAAW,CAAC,CAAC,GAEjDmC,OAAM,uQAGV,iBAAS,CACP,GAAMC,cAAa,CAAG,IAAI,CAACC,OAAO,EAAIrC,WAAW,CACjD,MAAO,oBAAC,aAAa,kBAAK,IAAI,CAACpO,KAAK,EAAI,CAC1C,CAAC,oBANkB1C,cAAK,CAACsS,SAAS,EAA9BW,MAAM,CACHG,WAAW,CAAGJ,aAAa,CAQpCK,MAAM,CAACC,OAAO,CAAG,CAGfL,MAAM,CAANA,MAAM,CACNV,eAAe,CAAfA,eAAe,CACfS,aAAa,CAAbA,aAAa,CACbzC,WAAW,CAAXA,WAAW,CACXO,WAAW,CAAXA,WAAW,CAEX,GAAIf,aAAY,EAAG,CACjB,MAAOD,qBAAoB,CAACC,YAAY,CAC1C,CAAC,CAED,GAAIE,sBAAqB,EAAG,CAC1B,MAAOH,qBAAoB,CAACG,qBAAqB,CACnD,CAAC,CAED,GAAIC,gCAA+B,EAAG,CACpC,MAAOJ,qBAAoB,CAACI,+BAA+B,CAC7D,CAAC,CAED,GAAIqD,wBAAuB,EAAG,CAC5B,MAAOzD,qBAAoB,CAACL,6BAA6B,CAC3D,CAAC,CACD,GAAI+D,yBAAwB,EAAG,CAC7B,MAAO1D,qBAAoB,CAACJ,8BAA8B,CAC5D,CAAC,CACD,GAAI7I,UAAS,EAAG,CACd,GAAI,CAACD,6CAAsC,CAAE,CAC3CpF,OAAO,CAAC0N,IAAI,CACV,+DAA+D,CAChE,CACD,MAAO7M,kBAAI,CACb,CAEA,MAAOyN,qBAAoB,CAACF,eAAe,CAC7C,CAAC,CACD,GAAI6D,kBAAiB,EAAG,CACtB,GAAI7Q,qBAAQ,CAACC,EAAE,GAAK,KAAK,CAAE,CACzBrB,OAAO,CAAC0N,IAAI,CAAC,2DAA2D,CAAC,CACzE,MAAO7M,kBAAI,CACb,CAEA,MAAOyN,qBAAoB,CAACD,uBAAuB,CACrD,CAAC,CAGD8C,gCAAgC,CAAhCA,gCAAgC,CAChCC,0BAA0B,CAA1BA,0BAA0B,CAC1BC,yBAAyB,CAAzBA,yBAAyB,CACzBC,2BAA2B,CAA3BA,2BAA2B,CAC3BC,8BAA8B,CAA9BA,8BAA8B,CAE9BxE,aAAa,CAAbA,aAAa,CACbK,YAAY,CAAZA,YAAY,CACZQ,cAAc,CAAdA,cAAc,CACdD,sBAAsB,CAAtBA,sBAAsB,CACtBuE,qBAAqB,CAArBA,8BAAqB,CAErB9M,sCAAsC,CAAtCA,6CAAsC,CACtC+M,sBAAsB,CAAtBA,6BACF,CAAC;;;;;;;;;;2QCteD,mHAEA,uLAAoE,0/BAErD,QAASD,sBAAqB,EAAG,CAC9C,GAAMxC,SAAQ,CAAGlR,KAAK,CAAC2L,UAAU,CAACiI,kCAAyB,CAAC,CAE5D,GAAI1C,QAAQ,GAAKvJ,SAAS,CAAE,CAC1B,KAAM,IAAIZ,MAAK,CACb,wFAAwF,CACzF,CACH,CAEA,MAAOmK,SAAQ,CACjB;;;;;;;;;;yKCdA,sHAEO,GAAMtK,uCAAsC,CAAG,CACpD,KAAK,CACL,SAAS,CACV,CAACiN,QAAQ,CAACjR,qBAAQ,CAACC,EAAE,CAAC,CAAC,sFAEjB,QAAS8Q,uBAAsB,EAAG,CAEvCG,wBAAW,CAACC,OAAO,EAAE,CACrB,MAAO,KAAI,CACb;;;;;;;;;;ACXA,YAAY,aAAoB;;AAEhC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","sources":["webpack:///./node_modules/@react-navigation/native-stack/src/index.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/navigators/createNativeStackNavigator.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/utils/useDismissedRouteError.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/utils/useInvalidPreventRemoveError.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/DebugContainer.native.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/FontProcessor.native.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/HeaderConfig.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/NativeStackView.native.tsx","webpack:///./node_modules/react-freeze/src/index.tsx","webpack:///./node_modules/react-native-screens/src/TransitionProgressContext.tsx","webpack:///./node_modules/react-native-screens/src/index.native.tsx","webpack:///./node_modules/react-native-screens/src/useTransitionProgress.tsx","webpack:///./node_modules/react-native-screens/src/utils.ts","webpack:///./node_modules/warn-once/index.js"],"sourcesContent":["/**\n * Navigators\n */\nexport { default as createNativeStackNavigator } from './navigators/createNativeStackNavigator';\n\n/**\n * Views\n */\nexport { default as NativeStackView } from './views/NativeStackView';\n\n/**\n * Types\n */\nexport type {\n  NativeStackHeaderProps,\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigationProp,\n  NativeStackScreenProps,\n} from './types';\n","import {\n  createNavigatorFactory,\n  EventArg,\n  ParamListBase,\n  StackActionHelpers,\n  StackActions,\n  StackNavigationState,\n  StackRouter,\n  StackRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigatorProps,\n} from '../types';\nimport NativeStackView from '../views/NativeStackView';\n\nfunction NativeStackNavigator({\n  id,\n  initialRouteName,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: NativeStackNavigatorProps) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      NativeStackNavigationOptions,\n      NativeStackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      screenListeners,\n      screenOptions,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation?.addListener?.('tabPress', (e: any) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <NativeStackView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState<ParamListBase>,\n  NativeStackNavigationOptions,\n  NativeStackNavigationEventMap,\n  typeof NativeStackNavigator\n>(NativeStackNavigator);\n","import type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nexport default function useInvalidPreventRemoveError(\n  state: StackNavigationState<ParamListBase>\n) {\n  const [nextDismissedKey, setNextDismissedKey] = React.useState<string | null>(\n    null\n  );\n\n  const dismissedRouteName = nextDismissedKey\n    ? state.routes.find((route) => route.key === nextDismissedKey)?.name\n    : null;\n\n  React.useEffect(() => {\n    if (dismissedRouteName) {\n      const message =\n        `The screen '${dismissedRouteName}' was removed natively but didn't get removed from JS state. ` +\n        `This can happen if the action was prevented in a 'beforeRemove' listener, which is not fully supported in native-stack.\\n\\n` +\n        `Consider using a 'usePreventRemove' hook with 'headerBackButtonMenuEnabled: false' to prevent users from natively going back multiple screens.`;\n\n      console.error(message);\n    }\n  }, [dismissedRouteName]);\n\n  return { setNextDismissedKey };\n}\n","import { usePreventRemoveContext } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type { NativeStackDescriptorMap } from '../types';\n\nexport default function useInvalidPreventRemoveError(\n  descriptors: NativeStackDescriptorMap\n) {\n  const { preventedRoutes } = usePreventRemoveContext();\n  const preventedRouteKey = Object.keys(preventedRoutes)[0];\n  const preventedDescriptor = descriptors[preventedRouteKey];\n  const isHeaderBackButtonMenuEnabledOnPreventedScreen =\n    preventedDescriptor?.options?.headerBackButtonMenuEnabled;\n  const preventedRouteName = preventedDescriptor?.route?.name;\n\n  React.useEffect(() => {\n    if (\n      preventedRouteKey != null &&\n      isHeaderBackButtonMenuEnabledOnPreventedScreen\n    ) {\n      const message =\n        `The screen ${preventedRouteName} uses 'usePreventRemove' hook alongside 'headerBackButtonMenuEnabled: true', which is not supported. \\n\\n` +\n        `Consider removing 'headerBackButtonMenuEnabled: true' from ${preventedRouteName} screen to get rid of this error.`;\n      console.error(message);\n    }\n  }, [\n    preventedRouteKey,\n    isHeaderBackButtonMenuEnabledOnPreventedScreen,\n    preventedRouteName,\n  ]);\n}\n","import * as React from 'react';\nimport { Platform, View, ViewProps } from 'react-native';\n// @ts-ignore Getting private component\nimport AppContainer from 'react-native/Libraries/ReactNative/AppContainer';\nimport type { StackPresentationTypes } from 'react-native-screens';\n\ntype ContainerProps = ViewProps & {\n  stackPresentation: StackPresentationTypes;\n  children: React.ReactNode;\n};\n\nlet Container = View as unknown as React.ComponentType<ContainerProps>;\n\nif (process.env.NODE_ENV !== 'production') {\n  const DebugContainer = (props: ContainerProps) => {\n    const { stackPresentation, ...rest } = props;\n\n    if (Platform.OS === 'ios' && stackPresentation !== 'push') {\n      // This is necessary for LogBox\n      return (\n        <AppContainer>\n          <View {...rest} />\n        </AppContainer>\n      );\n    }\n\n    return <View {...rest} />;\n  };\n\n  Container = DebugContainer;\n}\n\nexport default Container;\n","// @ts-ignore: No declaration available\nimport ReactNativeStyleAttributes from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\n\nexport function processFonts(\n  fontFamilies: (string | undefined)[]\n): (string | undefined)[] {\n  // @ts-ignore: React Native types are incorrect here and don't consider fontFamily a style value\n  const fontFamilyProcessor = ReactNativeStyleAttributes.fontFamily?.process;\n  if (typeof fontFamilyProcessor === 'function') {\n    return fontFamilies.map(fontFamilyProcessor);\n  }\n  return fontFamilies;\n}\n","import { getHeaderTitle, HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  headerTopInsetEnabled: boolean;\n  headerHeight: number;\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerHeight,\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerBackground,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  headerTopInsetEnabled,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = getHeaderTitle({ title, headerTitle }, route.name);\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    canGoBack,\n    label: headerBackTitle,\n  });\n  const headerRightElement = headerRight?.({\n    tintColor,\n    canGoBack,\n  });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({\n          tintColor,\n          children: titleText,\n        })\n      : null;\n\n  const supportsHeaderSearchBar =\n    typeof isSearchBarAvailableForCurrentPlatform === 'boolean'\n      ? isSearchBarAvailableForCurrentPlatform\n      : // Fallback for older versions of react-native-screens\n        Platform.OS === 'ios' && SearchBar != null;\n\n  const hasHeaderSearchBar =\n    supportsHeaderSearchBar && headerSearchBarOptions != null;\n\n  if (headerSearchBarOptions != null && !supportsHeaderSearchBar) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  const translucent =\n    headerBackground != null ||\n    headerTransparent ||\n    // When using a SearchBar or large title, the header needs to be translucent for it to work on iOS\n    ((hasHeaderSearchBar || headerLargeTitle) &&\n      Platform.OS === 'ios' &&\n      headerTransparent !== false);\n\n  return (\n    <>\n      {headerBackground != null ? (\n        <View\n          style={[\n            styles.background,\n            headerTransparent ? styles.translucent : null,\n            { height: headerHeight },\n          ]}\n        >\n          {headerBackground()}\n        </View>\n      ) : null}\n      <ScreenStackHeaderConfig\n        backButtonInCustomView={backButtonInCustomView}\n        backgroundColor={\n          headerStyleFlattened.backgroundColor ??\n          (headerBackground != null || headerTransparent\n            ? 'transparent'\n            : colors.card)\n        }\n        backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n        backTitleFontFamily={backTitleFontFamily}\n        backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n        blurEffect={headerBlurEffect}\n        color={tintColor}\n        direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n        disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n        hidden={headerShown === false}\n        hideBackButton={headerBackVisible === false}\n        hideShadow={\n          headerShadowVisible === false ||\n          headerBackground != null ||\n          headerTransparent\n        }\n        largeTitle={headerLargeTitle}\n        largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n        largeTitleColor={headerLargeTitleStyleFlattened.color}\n        largeTitleFontFamily={largeTitleFontFamily}\n        largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n        largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n        largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n        title={titleText}\n        titleColor={titleColor}\n        titleFontFamily={titleFontFamily}\n        titleFontSize={titleFontSize}\n        titleFontWeight={titleFontWeight}\n        topInsetEnabled={headerTopInsetEnabled}\n        translucent={\n          // This defaults to `true`, so we can't pass `undefined`\n          translucent === true\n        }\n      >\n        {Platform.OS === 'ios' ? (\n          <>\n            {headerLeftElement != null ? (\n              <ScreenStackHeaderLeftView>\n                {headerLeftElement}\n              </ScreenStackHeaderLeftView>\n            ) : null}\n            {headerTitleElement != null ? (\n              <ScreenStackHeaderCenterView>\n                {headerTitleElement}\n              </ScreenStackHeaderCenterView>\n            ) : null}\n          </>\n        ) : (\n          <>\n            {headerLeftElement != null || typeof headerTitle === 'function' ? (\n              <ScreenStackHeaderLeftView>\n                <View style={styles.row}>\n                  {headerLeftElement}\n                  {headerTitleAlign !== 'center' ? (\n                    typeof headerTitle === 'function' ? (\n                      headerTitleElement\n                    ) : (\n                      <HeaderTitle\n                        tintColor={tintColor}\n                        style={headerTitleStyleSupported}\n                      >\n                        {titleText}\n                      </HeaderTitle>\n                    )\n                  ) : null}\n                </View>\n              </ScreenStackHeaderLeftView>\n            ) : null}\n            {headerTitleAlign === 'center' ? (\n              <ScreenStackHeaderCenterView>\n                {typeof headerTitle === 'function' ? (\n                  headerTitleElement\n                ) : (\n                  <HeaderTitle\n                    tintColor={tintColor}\n                    style={headerTitleStyleSupported}\n                  >\n                    {titleText}\n                  </HeaderTitle>\n                )}\n              </ScreenStackHeaderCenterView>\n            ) : null}\n          </>\n        )}\n        {headerBackImageSource !== undefined ? (\n          <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n        ) : null}\n        {headerRightElement != null ? (\n          <ScreenStackHeaderRightView>\n            {headerRightElement}\n          </ScreenStackHeaderRightView>\n        ) : null}\n        {hasHeaderSearchBar ? (\n          <ScreenStackHeaderSearchBarView>\n            <SearchBar {...headerSearchBarOptions} />\n          </ScreenStackHeaderSearchBarView>\n        ) : null}\n      </ScreenStackHeaderConfig>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  translucent: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n  },\n  background: {\n    overflow: 'hidden',\n  },\n});\n","import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  usePreventRemoveContext,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport type { ScreenProps } from 'react-native-screens';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport useDismissedRouteError from '../utils/useDismissedRouteError';\nimport useInvalidPreventRemoveError from '../utils/useInvalidPreventRemoveError';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  headerHeight,\n  headerTopInsetEnabled,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  headerHeight: number;\n  headerTopInsetEnabled: boolean;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled style={StyleSheet.absoluteFill}>\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerHeight={headerHeight}\n            headerTopInsetEnabled={headerTopInsetEnabled}\n            canGoBack\n          />\n          {content}\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  nextDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: ScreenProps['onDismissed'];\n  onHeaderBackButtonClicked: ScreenProps['onHeaderBackButtonClicked'];\n  onNativeDismissCancelled: ScreenProps['onDismissed'];\n};\n\nconst SceneView = ({\n  descriptor,\n  previousDescriptor,\n  nextDescriptor,\n  index,\n  onWillDisappear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n  onHeaderBackButtonClicked,\n  onNativeDismissCancelled,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    animationDuration,\n    animationTypeForReplace = 'push',\n    gestureEnabled,\n    header,\n    headerBackButtonMenuEnabled,\n    headerShown,\n    headerTransparent,\n    autoHideHomeIndicator,\n    navigationBarColor,\n    navigationBarHidden,\n    orientation,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    statusBarColor,\n    freezeOnBlur,\n  } = options;\n\n  let {\n    animation,\n    customAnimationOnGesture,\n    fullScreenGestureEnabled,\n    presentation = 'card',\n    gestureDirection = presentation === 'card' ? 'horizontal' : 'vertical',\n  } = options;\n\n  if (gestureDirection === 'vertical' && Platform.OS === 'ios') {\n    // for `vertical` direction to work, we need to set `fullScreenGestureEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnGesture` needs to be set to `true` so the `animation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenGestureEnabled === undefined) {\n      fullScreenGestureEnabled = true;\n    }\n    if (customAnimationOnGesture === undefined) {\n      customAnimationOnGesture = true;\n    }\n    if (animation === undefined) {\n      animation = 'slide_from_bottom';\n    }\n  }\n\n  // workaround for rn-screens where gestureDirection has to be set on both\n  // current and previous screen - software-mansion/react-native-screens/pull/1509\n  const nextGestureDirection = nextDescriptor?.options.gestureDirection;\n  const gestureDirectionOverride =\n    nextGestureDirection != null ? nextGestureDirection : gestureDirection;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isModal = presentation === 'modal' || presentation === 'formSheet';\n\n  // Modals are fullscreen in landscape only on iPhone\n  const isIPhone =\n    Platform.OS === 'ios' && !(Platform.isPad || Platform.isTVOS);\n  const isLandscape = frame.width > frame.height;\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  const topInset =\n    isParentHeaderShown ||\n    (Platform.OS === 'ios' && isModal) ||\n    (isIPhone && isLandscape)\n      ? 0\n      : insets.top;\n\n  const { preventedRoutes } = usePreventRemoveContext();\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(frame, isModal, topInset);\n\n  const [customHeaderHeight, setCustomHeaderHeight] =\n    React.useState(defaultHeaderHeight);\n\n  const headerTopInsetEnabled = topInset !== 0;\n  const headerHeight = header ? customHeaderHeight : defaultHeaderHeight;\n  const headerBack = previousDescriptor\n    ? {\n        title: getHeaderTitle(\n          previousDescriptor.options,\n          previousDescriptor.route.name\n        ),\n      }\n    : parentHeaderBack;\n\n  const isRemovePrevented = preventedRoutes[route.key]?.preventRemove;\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      style={StyleSheet.absoluteFill}\n      customAnimationOnSwipe={customAnimationOnGesture}\n      fullScreenSwipeEnabled={fullScreenGestureEnabled}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      homeIndicatorHidden={autoHideHomeIndicator}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarColor={statusBarColor}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={gestureDirectionOverride}\n      transitionDuration={animationDuration}\n      onWillDisappear={onWillDisappear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n      isNativeStack\n      nativeBackButtonDismissalEnabled={false} // on Android\n      onHeaderBackButtonClicked={onHeaderBackButtonClicked}\n      // @ts-ignore props not exported from rn-screens\n      preventNativeDismiss={isRemovePrevented} // on iOS\n      onNativeDismissCancelled={onNativeDismissCancelled}\n      // this prop is available since rn-screens 3.16\n      freezeOnBlur={freezeOnBlur}\n    >\n      <NavigationContext.Provider value={navigation}>\n        <NavigationRouteContext.Provider value={route}>\n          <HeaderShownContext.Provider\n            value={isParentHeaderShown || headerShown !== false}\n          >\n            <HeaderHeightContext.Provider\n              value={\n                headerShown !== false ? headerHeight : parentHeaderHeight ?? 0\n              }\n            >\n              {/**\n               * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\n               * We don't render it conditionally to make it possible to dynamically render a custom `header`\n               * Otherwise dynamically rendering a custom `header` leaves the native header visible\n               *\n               * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\n               */}\n              <HeaderConfig\n                {...options}\n                route={route}\n                headerBackButtonMenuEnabled={\n                  isRemovePrevented !== undefined\n                    ? !isRemovePrevented\n                    : headerBackButtonMenuEnabled\n                }\n                headerShown={header !== undefined ? false : headerShown}\n                headerHeight={headerHeight}\n                headerBackTitle={\n                  options.headerBackTitle !== undefined\n                    ? options.headerBackTitle\n                    : undefined\n                }\n                headerTopInsetEnabled={headerTopInsetEnabled}\n                canGoBack={headerBack !== undefined}\n              />\n              <View style={styles.scene}>\n                <MaybeNestedStack\n                  options={options}\n                  route={route}\n                  presentation={presentation}\n                  headerHeight={headerHeight}\n                  headerTopInsetEnabled={headerTopInsetEnabled}\n                >\n                  <HeaderBackContext.Provider value={headerBack}>\n                    {render()}\n                  </HeaderBackContext.Provider>\n                </MaybeNestedStack>\n                {header !== undefined && headerShown !== false ? (\n                  <View\n                    onLayout={(e) => {\n                      setCustomHeaderHeight(e.nativeEvent.layout.height);\n                    }}\n                    style={headerTransparent ? styles.absolute : null}\n                  >\n                    {header({\n                      back: headerBack,\n                      options,\n                      route,\n                      navigation,\n                    })}\n                  </View>\n                ) : null}\n              </View>\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </NavigationRouteContext.Provider>\n      </NavigationContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const { setNextDismissedKey } = useDismissedRouteError(state);\n\n  useInvalidPreventRemoveError(descriptors);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const previousKey = state.routes[index - 1]?.key;\n        const nextKey = state.routes[index + 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n        const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            nextDescriptor={nextDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n            onHeaderBackButtonClicked={() => {\n              navigation.dispatch({\n                ...StackActions.pop(),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n            onNativeDismissCancelled={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scene: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n","import React, { useRef, Suspense, Fragment } from \"react\";\n\ninterface StorageRef {\n  promise?: Promise<void>;\n  resolve?: (value: void | PromiseLike<void>) => void;\n}\n\nfunction Suspender({\n  freeze,\n  children,\n}: {\n  freeze: boolean;\n  children: React.ReactNode;\n}) {\n  const promiseCache = useRef<StorageRef>({}).current;\n  if (freeze && !promiseCache.promise) {\n    promiseCache.promise = new Promise((resolve) => {\n      promiseCache.resolve = resolve;\n    });\n    throw promiseCache.promise;\n  } else if (freeze) {\n    throw promiseCache.promise;\n  } else if (promiseCache.promise) {\n    promiseCache.resolve!();\n    promiseCache.promise = undefined;\n  }\n\n  return <Fragment>{children}</Fragment>;\n}\n\ninterface Props {\n  freeze: boolean;\n  children: React.ReactNode;\n  placeholder?: React.ReactNode;\n}\n\nexport function Freeze({ freeze, children, placeholder = null }: Props) {\n  return (\n    <Suspense fallback={placeholder}>\n      <Suspender freeze={freeze}>{children}</Suspender>\n    </Suspense>\n  );\n}\n","import * as React from 'react';\nimport { Animated } from 'react-native';\n\ntype TransitionProgressContextBody = {\n  progress: Animated.Value;\n  closing: Animated.Value;\n  goingForward: Animated.Value;\n};\n\nexport default React.createContext<TransitionProgressContextBody | undefined>(\n  undefined\n);\n","import React from 'react';\nimport {\n  Animated,\n  Image,\n  ImageProps,\n  Platform,\n  requireNativeComponent,\n  StyleSheet,\n  UIManager,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Freeze } from 'react-freeze';\nimport { version } from 'react-native/package.json';\n\nimport TransitionProgressContext from './TransitionProgressContext';\nimport useTransitionProgress from './useTransitionProgress';\nimport {\n  StackPresentationTypes,\n  StackAnimationTypes,\n  BlurEffectTypes,\n  ScreenReplaceTypes,\n  ScreenOrientationTypes,\n  HeaderSubviewTypes,\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n} from './types';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n} from './utils';\n\n// web implementation is taken from `index.tsx`\nconst isPlatformSupported =\n  Platform.OS === 'ios' ||\n  Platform.OS === 'android' ||\n  Platform.OS === 'windows';\n\nlet ENABLE_SCREENS = isPlatformSupported;\n\nfunction enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = isPlatformSupported && shouldEnableScreens;\n  if (ENABLE_SCREENS && !UIManager.getViewManagerConfig('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`\n    );\n  }\n}\n\nlet ENABLE_FREEZE = false;\n\nfunction enableFreeze(shouldEnableReactFreeze = true): void {\n  const minor = parseInt(version.split('.')[1]); // eg. takes 66 from '0.66.0'\n\n  // react-freeze requires react-native >=0.64, react-native from main is 0.0.0\n  if (!(minor === 0 || minor >= 64) && shouldEnableReactFreeze) {\n    console.warn(\n      'react-freeze library requires at least react-native 0.64. Please upgrade your react-native version in order to use this feature.'\n    );\n  }\n\n  ENABLE_FREEZE = shouldEnableReactFreeze;\n}\n\n// const that tells if the library should use new implementation, will be undefined for older versions\nconst shouldUseActivityState = true;\n\nfunction screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\n// We initialize these lazily so that importing the module doesn't throw error when not linked\n// This is necessary coz libraries such as React Navigation import the library where it may not be enabled\nlet NativeScreenValue: React.ComponentType<ScreenProps>;\nlet NativeScreenContainerValue: React.ComponentType<ScreenContainerProps>;\nlet NativeScreenNavigationContainerValue: React.ComponentType<ScreenContainerProps>;\nlet NativeScreenStack: React.ComponentType<ScreenStackProps>;\nlet NativeScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps>;\nlet NativeScreenStackHeaderSubview: React.ComponentType<React.PropsWithChildren<\n  ViewProps & { type?: HeaderSubviewTypes }\n>>;\nlet AnimatedNativeScreen: React.ComponentType<ScreenProps>;\nlet NativeSearchBar: React.ComponentType<SearchBarProps>;\nlet NativeFullWindowOverlay: React.ComponentType<View>;\n\nconst ScreensNativeModules = {\n  get NativeScreen() {\n    NativeScreenValue =\n      NativeScreenValue || requireNativeComponent('RNSScreen');\n    return NativeScreenValue;\n  },\n\n  get NativeScreenContainer() {\n    NativeScreenContainerValue =\n      NativeScreenContainerValue ||\n      requireNativeComponent('RNSScreenContainer');\n    return NativeScreenContainerValue;\n  },\n\n  get NativeScreenNavigationContainer() {\n    NativeScreenNavigationContainerValue =\n      NativeScreenNavigationContainerValue ||\n      (Platform.OS === 'ios'\n        ? requireNativeComponent('RNSScreenNavigationContainer')\n        : this.NativeScreenContainer);\n    return NativeScreenNavigationContainerValue;\n  },\n\n  get NativeScreenStack() {\n    NativeScreenStack =\n      NativeScreenStack || requireNativeComponent('RNSScreenStack');\n    return NativeScreenStack;\n  },\n\n  get NativeScreenStackHeaderConfig() {\n    NativeScreenStackHeaderConfig =\n      NativeScreenStackHeaderConfig ||\n      requireNativeComponent('RNSScreenStackHeaderConfig');\n    return NativeScreenStackHeaderConfig;\n  },\n\n  get NativeScreenStackHeaderSubview() {\n    NativeScreenStackHeaderSubview =\n      NativeScreenStackHeaderSubview ||\n      requireNativeComponent('RNSScreenStackHeaderSubview');\n    return NativeScreenStackHeaderSubview;\n  },\n\n  get NativeSearchBar() {\n    NativeSearchBar = NativeSearchBar || requireNativeComponent('RNSSearchBar');\n    return NativeSearchBar;\n  },\n\n  get NativeFullWindowOverlay() {\n    NativeFullWindowOverlay =\n      NativeFullWindowOverlay || requireNativeComponent('RNSFullWindowOverlay');\n    return NativeFullWindowOverlay;\n  },\n};\n\ninterface FreezeWrapperProps {\n  freeze: boolean;\n  children: React.ReactNode;\n}\n\n// This component allows one more render before freezing the screen.\n// Allows activityState to reach the native side and useIsFocused to work correctly.\nfunction DelayedFreeze({ freeze, children }: FreezeWrapperProps) {\n  // flag used for determining whether freeze should be enabled\n  const [freezeState, setFreezeState] = React.useState(false);\n\n  if (freeze !== freezeState) {\n    // setImmediate is executed at the end of the JS execution block.\n    // Used here for changing the state right after the render.\n    setImmediate(() => {\n      setFreezeState(freeze);\n    });\n  }\n\n  return <Freeze freeze={freeze ? freezeState : false}>{children}</Freeze>;\n}\n\nfunction ScreenStack(props: ScreenStackProps) {\n  const { children, ...rest } = props;\n  const size = React.Children.count(children);\n  // freezes all screens except the top one\n  const childrenWithFreeze = React.Children.map(children, (child, index) => {\n    // @ts-expect-error it's either SceneView in v6 or RouteView in v5\n    const { props, key } = child;\n    const descriptor = props?.descriptor ?? props?.descriptors?.[key];\n    const freezeEnabled = descriptor?.options?.freezeOnBlur ?? ENABLE_FREEZE;\n\n    return (\n      <DelayedFreeze freeze={freezeEnabled && size - index > 1}>\n        {child}\n      </DelayedFreeze>\n    );\n  });\n\n  return (\n    <ScreensNativeModules.NativeScreenStack {...rest}>\n      {childrenWithFreeze}\n    </ScreensNativeModules.NativeScreenStack>\n  );\n}\n\n// Incomplete type, all accessible properties available at:\n// react-native/Libraries/Components/View/ReactNativeViewViewConfig.js\ninterface ViewConfig extends View {\n  viewConfig: {\n    validAttributes: {\n      style: {\n        display: boolean;\n      };\n    };\n  };\n}\n\nclass InnerScreen extends React.Component<ScreenProps> {\n  private ref: React.ElementRef<typeof View> | null = null;\n  private closing = new Animated.Value(0);\n  private progress = new Animated.Value(0);\n  private goingForward = new Animated.Value(0);\n\n  setNativeProps(props: ScreenProps): void {\n    this.ref?.setNativeProps(props);\n  }\n\n  setRef = (ref: React.ElementRef<typeof View> | null): void => {\n    this.ref = ref;\n    this.props.onComponentRef?.(ref);\n  };\n\n  render() {\n    const {\n      enabled = ENABLE_SCREENS,\n      freezeOnBlur = ENABLE_FREEZE,\n      ...rest\n    } = this.props;\n\n    if (enabled && isPlatformSupported) {\n      AnimatedNativeScreen =\n        AnimatedNativeScreen ||\n        Animated.createAnimatedComponent(ScreensNativeModules.NativeScreen);\n\n      let {\n        // Filter out active prop in this case because it is unused and\n        // can cause problems depending on react-native version:\n        // https://github.com/react-navigation/react-navigation/issues/4886\n        active,\n        activityState,\n        children,\n        isNativeStack,\n        gestureResponseDistance,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        console.warn(\n          'It appears that you are using old version of react-navigation library. Please update @react-navigation/bottom-tabs, @react-navigation/stack and @react-navigation/drawer to version 5.10.0 or above to take full advantage of new functionality added to react-native-screens'\n        );\n        activityState = active !== 0 ? 2 : 0; // in the new version, we need one of the screens to have value of 2 after the transition\n      }\n\n      const handleRef = (ref: ViewConfig) => {\n        if (ref?.viewConfig?.validAttributes?.style) {\n          ref.viewConfig.validAttributes.style = {\n            ...ref.viewConfig.validAttributes.style,\n            display: false,\n          };\n          this.setRef(ref);\n        }\n      };\n\n      return (\n        <DelayedFreeze freeze={freezeOnBlur && activityState === 0}>\n          <AnimatedNativeScreen\n            {...props}\n            activityState={activityState}\n            gestureResponseDistance={{\n              start: gestureResponseDistance?.start ?? -1,\n              end: gestureResponseDistance?.end ?? -1,\n              top: gestureResponseDistance?.top ?? -1,\n              bottom: gestureResponseDistance?.bottom ?? -1,\n            }}\n            // This prevents showing blank screen when navigating between multiple screens with freezing\n            // https://github.com/software-mansion/react-native-screens/pull/1208\n            ref={handleRef}\n            onTransitionProgress={\n              !isNativeStack\n                ? undefined\n                : Animated.event(\n                    [\n                      {\n                        nativeEvent: {\n                          progress: this.progress,\n                          closing: this.closing,\n                          goingForward: this.goingForward,\n                        },\n                      },\n                    ],\n                    { useNativeDriver: true }\n                  )\n            }>\n            {!isNativeStack ? ( // see comment of this prop in types.tsx for information why it is needed\n              children\n            ) : (\n              <TransitionProgressContext.Provider\n                value={{\n                  progress: this.progress,\n                  closing: this.closing,\n                  goingForward: this.goingForward,\n                }}>\n                {children}\n              </TransitionProgressContext.Provider>\n            )}\n          </AnimatedNativeScreen>\n        </DelayedFreeze>\n      );\n    } else {\n      // same reason as above\n      let {\n        active,\n        activityState,\n        style,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onComponentRef,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0;\n      }\n      return (\n        <Animated.View\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          ref={this.setRef}\n          {...props}\n        />\n      );\n    }\n  }\n}\n\nfunction ScreenContainer(props: ScreenContainerProps) {\n  const { enabled = ENABLE_SCREENS, hasTwoStates, ...rest } = props;\n\n  if (enabled && isPlatformSupported) {\n    if (hasTwoStates) {\n      return <ScreensNativeModules.NativeScreenNavigationContainer {...rest} />;\n    }\n    return <ScreensNativeModules.NativeScreenContainer {...rest} />;\n  }\n  return <View {...rest} />;\n}\n\nconst styles = StyleSheet.create({\n  headerSubview: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst ScreenStackHeaderBackButtonImage = (props: ImageProps): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    type=\"back\"\n    style={styles.headerSubview}>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </ScreensNativeModules.NativeScreenStackHeaderSubview>\n);\n\nconst ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"right\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"left\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"center\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"searchBar\"\n    style={styles.headerSubview}\n  />\n);\n\nexport type {\n  StackPresentationTypes,\n  StackAnimationTypes,\n  BlurEffectTypes,\n  ScreenReplaceTypes,\n  ScreenOrientationTypes,\n  HeaderSubviewTypes,\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n};\n\n// context to be used when the user wants to use enhanced implementation\n// e.g. to use `useReanimatedTransitionProgress` (see `reanimated` folder in repo)\nconst ScreenContext = React.createContext(InnerScreen);\n\nclass Screen extends React.Component<ScreenProps> {\n  static contextType = ScreenContext;\n\n  render() {\n    const ScreenWrapper = this.context || InnerScreen;\n    return <ScreenWrapper {...this.props} />;\n  }\n}\n\nmodule.exports = {\n  // these are classes so they are not evaluated until used\n  // so no need to use getters for them\n  Screen,\n  ScreenContainer,\n  ScreenContext,\n  ScreenStack,\n  InnerScreen,\n\n  get NativeScreen() {\n    return ScreensNativeModules.NativeScreen;\n  },\n\n  get NativeScreenContainer() {\n    return ScreensNativeModules.NativeScreenContainer;\n  },\n\n  get NativeScreenNavigationContainer() {\n    return ScreensNativeModules.NativeScreenNavigationContainer;\n  },\n\n  get ScreenStackHeaderConfig() {\n    return ScreensNativeModules.NativeScreenStackHeaderConfig;\n  },\n  get ScreenStackHeaderSubview() {\n    return ScreensNativeModules.NativeScreenStackHeaderSubview;\n  },\n  get SearchBar() {\n    if (!isSearchBarAvailableForCurrentPlatform) {\n      console.warn(\n        'Importing SearchBar is only valid on iOS and Android devices.'\n      );\n      return View;\n    }\n\n    return ScreensNativeModules.NativeSearchBar;\n  },\n  get FullWindowOverlay() {\n    if (Platform.OS !== 'ios') {\n      console.warn('Importing FullWindowOverlay is only valid on iOS devices.');\n      return View;\n    }\n\n    return ScreensNativeModules.NativeFullWindowOverlay;\n  },\n  // these are functions and will not be evaluated until used\n  // so no need to use getters for them\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderSearchBarView,\n\n  enableScreens,\n  enableFreeze,\n  screensEnabled,\n  shouldUseActivityState,\n  useTransitionProgress,\n\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n};\n","import * as React from 'react';\n\nimport TransitionProgressContext from './TransitionProgressContext';\n\nexport default function useTransitionProgress() {\n  const progress = React.useContext(TransitionProgressContext);\n\n  if (progress === undefined) {\n    throw new Error(\n      \"Couldn't find values for transition progress. Are you inside a screen in Native Stack?\"\n    );\n  }\n\n  return progress;\n}\n","import { BackHandler, Platform } from 'react-native';\n\nexport const isSearchBarAvailableForCurrentPlatform = [\n  'ios',\n  'android',\n].includes(Platform.OS);\n\nexport function executeNativeBackPress() {\n  // This function invokes the native back press event\n  BackHandler.exitApp();\n  return true;\n}\n","const DEV = process.env.NODE_ENV !== \"production\";\n\nconst warnings = new Set();\n\nfunction warnOnce(condition, ...rest) {\n  if (DEV && condition) {\n    const key = rest.join(\" \");\n\n    if (warnings.has(key)) {\n      return;\n    }\n\n    warnings.add(key);\n    console.warn(...rest);\n  }\n}\n\nmodule.exports = warnOnce;\n"],"names":["NativeStackNavigator","id","initialRouteName","children","screenListeners","screenOptions","rest","useNavigationBuilder","StackRouter","state","descriptors","navigation","NavigationContent","React","useEffect","addListener","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","StackActions","popToTop","target","key","createNavigatorFactory","useInvalidPreventRemoveError","useState","nextDismissedKey","setNextDismissedKey","dismissedRouteName","routes","find","route","name","message","console","error","usePreventRemoveContext","preventedRoutes","preventedRouteKey","Object","keys","preventedDescriptor","isHeaderBackButtonMenuEnabledOnPreventedScreen","options","headerBackButtonMenuEnabled","preventedRouteName","Container","View","process","env","NODE_ENV","DebugContainer","props","stackPresentation","Platform","OS","processFonts","fontFamilies","fontFamilyProcessor","ReactNativeStyleAttributes","fontFamily","map","HeaderConfig","headerHeight","headerBackImageSource","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerBackVisible","headerShadowVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerBackground","headerLeft","headerRight","headerShown","headerStyle","headerBlurEffect","headerTintColor","headerTitle","headerTitleAlign","headerTitleStyle","headerTransparent","headerSearchBarOptions","headerTopInsetEnabled","title","canGoBack","useTheme","colors","tintColor","primary","text","headerBackTitleStyleFlattened","StyleSheet","flatten","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","titleText","getHeaderTitle","titleColor","color","titleFontSize","fontSize","titleFontWeight","fontWeight","headerTitleStyleSupported","headerLeftElement","label","headerRightElement","headerTitleElement","supportsHeaderSearchBar","isSearchBarAvailableForCurrentPlatform","SearchBar","hasHeaderSearchBar","Error","backButtonInCustomView","translucent","styles","background","height","backgroundColor","card","I18nManager","getConstants","isRTL","row","undefined","create","flexDirection","alignItems","position","top","left","right","zIndex","overflow","isAndroid","MaybeNestedStack","presentation","header","contentStyle","isHeaderInModal","headerShownPreviousRef","useRef","warnOnce","current","content","container","absoluteFill","SceneView","descriptor","previousDescriptor","nextDescriptor","onWillDisappear","onAppear","onDisappear","onDismissed","onHeaderBackButtonClicked","onNativeDismissCancelled","render","animationDuration","animationTypeForReplace","gestureEnabled","autoHideHomeIndicator","navigationBarColor","navigationBarHidden","orientation","statusBarAnimation","statusBarHidden","statusBarStyle","statusBarTranslucent","statusBarColor","freezeOnBlur","animation","customAnimationOnGesture","fullScreenGestureEnabled","gestureDirection","nextGestureDirection","gestureDirectionOverride","insets","useSafeAreaInsets","frame","useSafeAreaFrame","isModal","isIPhone","isPad","isTVOS","isLandscape","width","isParentHeaderShown","useContext","HeaderShownContext","parentHeaderHeight","HeaderHeightContext","parentHeaderBack","HeaderBackContext","topInset","defaultHeaderHeight","getDefaultHeaderHeight","customHeaderHeight","setCustomHeaderHeight","headerBack","isRemovePrevented","preventRemove","scene","nativeEvent","layout","absolute","back","NativeStackViewInner","useDismissedRouteError","previousKey","nextKey","emit","type","data","closing","event","pop","dismissCount","source","NativeStackView","flex","Suspender","freeze","promiseCache","promise","Promise","resolve","Freeze","placeholder","createContext","isPlatformSupported","ENABLE_SCREENS","enableScreens","shouldEnableScreens","UIManager","getViewManagerConfig","ENABLE_FREEZE","enableFreeze","shouldEnableReactFreeze","minor","parseInt","version","split","warn","shouldUseActivityState","screensEnabled","NativeScreenValue","NativeScreenContainerValue","NativeScreenNavigationContainerValue","NativeScreenStack","NativeScreenStackHeaderConfig","NativeScreenStackHeaderSubview","AnimatedNativeScreen","NativeSearchBar","NativeFullWindowOverlay","ScreensNativeModules","NativeScreen","requireNativeComponent","NativeScreenContainer","NativeScreenNavigationContainer","DelayedFreeze","freezeState","setFreezeState","setImmediate","ScreenStack","size","Children","count","childrenWithFreeze","child","freezeEnabled","InnerScreen","ref","Animated","Value","progress","goingForward","setRef","onComponentRef","setNativeProps","enabled","createAnimatedComponent","active","activityState","isNativeStack","gestureResponseDistance","handleRef","viewConfig","validAttributes","style","display","start","end","bottom","useNativeDriver","Component","ScreenContainer","hasTwoStates","headerSubview","justifyContent","ScreenStackHeaderBackButtonImage","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","ScreenContext","Screen","ScreenWrapper","context","contextType","module","exports","ScreenStackHeaderConfig","ScreenStackHeaderSubview","FullWindowOverlay","useTransitionProgress","executeNativeBackPress","TransitionProgressContext","includes","BackHandler","exitApp"],"sourceRoot":""}