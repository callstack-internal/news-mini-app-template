{"version":3,"file":"node_modules_react-navigation_material-bottom-tabs_src_index_tsx-_79e11.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/@react-navigation/material-bottom-tabs/src/index.tsx","webpack:///./node_modules/@react-navigation/material-bottom-tabs/src/navigators/createMaterialBottomTabNavigator.tsx","webpack:///./node_modules/@react-navigation/material-bottom-tabs/src/views/MaterialBottomTabView.tsx"],"sourcesContent":["/**\n * Navigators\n */\nexport { default as createMaterialBottomTabNavigator } from './navigators/createMaterialBottomTabNavigator';\n\n/**\n * Views\n */\nexport { default as MaterialBottomTabView } from './views/MaterialBottomTabView';\n\n/**\n * Types\n */\nexport type {\n  MaterialBottomTabNavigationEventMap,\n  MaterialBottomTabNavigationOptions,\n  MaterialBottomTabNavigationProp,\n  MaterialBottomTabScreenProps,\n} from './types';\n","import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  ParamListBase,\n  TabActionHelpers,\n  TabNavigationState,\n  TabRouter,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  MaterialBottomTabNavigationConfig,\n  MaterialBottomTabNavigationEventMap,\n  MaterialBottomTabNavigationOptions,\n} from '../types';\nimport MaterialBottomTabView from '../views/MaterialBottomTabView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  TabNavigationState<ParamListBase>,\n  MaterialBottomTabNavigationOptions,\n  MaterialBottomTabNavigationEventMap\n> &\n  TabRouterOptions &\n  MaterialBottomTabNavigationConfig;\n\nfunction MaterialBottomTabNavigator({\n  id,\n  initialRouteName,\n  backBehavior,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: Props) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      TabActionHelpers<ParamListBase>,\n      MaterialBottomTabNavigationOptions,\n      MaterialBottomTabNavigationEventMap\n    >(TabRouter, {\n      id,\n      initialRouteName,\n      backBehavior,\n      children,\n      screenListeners,\n      screenOptions,\n    });\n\n  return (\n    <NavigationContent>\n      <MaterialBottomTabView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  TabNavigationState<ParamListBase>,\n  MaterialBottomTabNavigationOptions,\n  MaterialBottomTabNavigationEventMap,\n  typeof MaterialBottomTabNavigator\n>(MaterialBottomTabNavigator);\n","import { SafeAreaProviderCompat } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  Link,\n  ParamListBase,\n  Route,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, Text } from 'react-native';\nimport {\n  BottomNavigation,\n  DarkTheme,\n  DefaultTheme,\n  useTheme as usePaperTheme,\n} from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport type {\n  MaterialBottomTabDescriptorMap,\n  MaterialBottomTabNavigationConfig,\n  MaterialBottomTabNavigationHelpers,\n} from '../types';\n\ntype Props = MaterialBottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: MaterialBottomTabNavigationHelpers;\n  descriptors: MaterialBottomTabDescriptorMap;\n};\n\ntype Scene = { route: { key: string } };\n\n// Optionally require vector-icons referenced from react-native-paper:\n// https://github.com/callstack/react-native-paper/blob/4b26429c49053eaa4c3e0fae208639e01093fa87/src/components/MaterialCommunityIcon.tsx#L14\nlet MaterialCommunityIcons: React.ComponentType<\n  React.ComponentProps<\n    typeof import('react-native-vector-icons/MaterialCommunityIcons').default\n  >\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e: any) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({\n    name,\n    color,\n    size,\n    selectionColor: _0,\n    onLayout: _1,\n    ...rest\n  }) => {\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from '@react-navigation/material-bottom-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://reactnavigation.org/docs/material-bottom-tab-navigator/#tabbaricon.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      // @ts-expect-error: we're passing icon props to text, but we don't care about it since it's just fallback\n      <Text\n        {...rest}\n        style={[\n          styles.icon,\n          {\n            color: typeof color !== 'number' ? color : undefined,\n            fontSize: size,\n          },\n        ]}\n      >\n        □\n      </Text>\n    );\n  };\n}\n\nfunction MaterialBottomTabViewInner({\n  state,\n  navigation,\n  descriptors,\n  ...rest\n}: Props) {\n  const insets = useSafeAreaInsets();\n  const { dark, colors } = useTheme();\n  const paperTheme = usePaperTheme();\n\n  const buildLink = useLinkBuilder();\n\n  const t =\n    // If the theme from React Navigation and Paper match, then user the customized theme\n    // Otherwise fallback to the matching default theme from Paper\n    dark === paperTheme.dark ? paperTheme : dark ? DarkTheme : DefaultTheme;\n\n  const theme = React.useMemo(() => {\n    return {\n      ...t,\n      colors: {\n        ...t.colors,\n        ...colors,\n        surface: colors.card,\n      },\n    };\n  }, [colors, t]);\n\n  return (\n    <BottomNavigation\n      {...rest}\n      theme={theme}\n      navigationState={state}\n      onIndexChange={(index: number) =>\n        navigation.dispatch({\n          ...CommonActions.navigate({\n            name: state.routes[index].name,\n            merge: true,\n          }),\n          target: state.key,\n        })\n      }\n      renderScene={({ route }) => descriptors[route.key].render()}\n      renderTouchable={\n        Platform.OS === 'web'\n          ? ({\n              onPress,\n              route,\n              accessibilityRole: _0,\n              borderless: _1,\n              centered: _2,\n              rippleColor: _3,\n              style,\n              ...rest\n            }) => {\n              return (\n                <Link\n                  {...rest}\n                  // @ts-expect-error: to could be undefined, but it doesn't affect functionality\n                  to={buildLink(route.name, route.params)}\n                  accessibilityRole=\"link\"\n                  onPress={(e: any) => {\n                    if (\n                      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n                      (e.button == null || e.button === 0) // ignore everything but left clicks\n                    ) {\n                      e.preventDefault();\n                      onPress?.(e);\n                    }\n                  }}\n                  style={[styles.touchable, style]}\n                />\n              );\n            }\n          : undefined\n      }\n      renderIcon={({ route, focused, color }) => {\n        const { options } = descriptors[route.key];\n\n        if (typeof options.tabBarIcon === 'string') {\n          return (\n            <MaterialCommunityIcons\n              name={options.tabBarIcon}\n              color={color}\n              size={24}\n              style={styles.icon}\n            />\n          );\n        }\n\n        if (typeof options.tabBarIcon === 'function') {\n          return options.tabBarIcon({ focused, color });\n        }\n\n        return null;\n      }}\n      getLabelText={({ route }: Scene) => {\n        const { options } = descriptors[route.key];\n\n        return options.tabBarLabel !== undefined\n          ? options.tabBarLabel\n          : options.title !== undefined\n          ? options.title\n          : (route as Route<string>).name;\n      }}\n      getColor={({ route }) => descriptors[route.key].options.tabBarColor}\n      getBadge={({ route }) => descriptors[route.key].options.tabBarBadge}\n      getAccessibilityLabel={({ route }) =>\n        descriptors[route.key].options.tabBarAccessibilityLabel\n      }\n      getTestID={({ route }) => descriptors[route.key].options.tabBarTestID}\n      onTabPress={({ route, preventDefault }) => {\n        const event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true,\n        });\n\n        if (event.defaultPrevented) {\n          preventDefault();\n        }\n      }}\n      safeAreaInsets={insets}\n    />\n  );\n}\n\nexport default function MaterialBottomTabView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <MaterialBottomTabViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n  touchable: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n"],"names":["MaterialBottomTabNavigator","id","initialRouteName","backBehavior","children","screenListeners","screenOptions","rest","useNavigationBuilder","TabRouter","state","descriptors","navigation","NavigationContent","createNavigatorFactory","MaterialCommunityIcons","require","default","e","isErrorLogged","name","color","size","_0","selectionColor","_1","onLayout","test","message","console","error","warn","styles","icon","undefined","fontSize","MaterialBottomTabViewInner","insets","useSafeAreaInsets","useTheme","dark","colors","paperTheme","usePaperTheme","buildLink","useLinkBuilder","t","DarkTheme","DefaultTheme","theme","React","useMemo","surface","card","index","dispatch","CommonActions","navigate","routes","merge","target","key","route","render","Platform","OS","onPress","accessibilityRole","borderless","_2","centered","_3","rippleColor","style","params","metaKey","altKey","ctrlKey","shiftKey","button","preventDefault","touchable","focused","options","tabBarIcon","tabBarLabel","title","tabBarColor","tabBarBadge","tabBarAccessibilityLabel","tabBarTestID","event","emit","type","canPreventDefault","defaultPrevented","MaterialBottomTabView","props","StyleSheet","create","backgroundColor","display","justifyContent"],"sourceRoot":""}