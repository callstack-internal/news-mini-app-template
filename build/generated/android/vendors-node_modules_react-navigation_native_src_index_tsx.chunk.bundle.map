{"version":3,"file":"vendors-node_modules_react-navigation_native_src_index_tsx.chunk.bundle","mappings":"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AAO,CAAC,sDAAY;;AAEzeAAe;AACf,aAAa;;AAEb,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;AAEA,gBAAgB;AAChB;AACA;AACA,EAAE;;AAEF;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,wDAAwD,2CAA2C;AACnG;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,yDAAyD,YAAY;;AAErE;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;;AAEA;AACA;AACA,aAAa,2GAA2G;AACxH;;AAEA,WAAW,IAAI,EAAE,YAAY,EAAE,KAAK;AACpC;;AAEA,YAAY;AACZ;AACA;AACA;AACA,EAAE;;AAEF,QAAQ,gCAAgC;AACxC;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,eAAe;AACf;;AAEA;AACA;;;;;;;;;;;;ACjea;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBa;AACb,6EAA6E,2CAA2C;;;;;;;;;;;;ACD3G;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,mBAAO,CAAC,0DAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAe;;;;;;;;;;;ACzCf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB","sources":["webpack:///./node_modules/@react-navigation/core/src/BaseNavigationContainer.tsx","webpack:///./node_modules/@react-navigation/core/src/CurrentRenderContext.tsx","webpack:///./node_modules/@react-navigation/core/src/EnsureSingleNavigator.tsx","webpack:///./node_modules/@react-navigation/core/src/Group.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationBuilderContext.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationContainerRefContext.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationContext.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationHelpersContext.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationRouteContext.tsx","webpack:///./node_modules/@react-navigation/core/src/NavigationStateContext.tsx","webpack:///./node_modules/@react-navigation/core/src/PreventRemoveContext.tsx","webpack:///./node_modules/@react-navigation/core/src/PreventRemoveProvider.tsx","webpack:///./node_modules/@react-navigation/core/src/SceneView.tsx","webpack:///./node_modules/@react-navigation/core/src/Screen.tsx","webpack:///./node_modules/@react-navigation/core/src/StaticContainer.tsx","webpack:///./node_modules/@react-navigation/core/src/UnhandledActionContext.tsx","webpack:///./node_modules/@react-navigation/core/src/checkDuplicateRouteNames.tsx","webpack:///./node_modules/@react-navigation/core/src/checkSerializable.tsx","webpack:///./node_modules/@react-navigation/core/src/createNavigationContainerRef.tsx","webpack:///./node_modules/@react-navigation/core/src/createNavigatorFactory.tsx","webpack:///./node_modules/@react-navigation/core/src/findFocusedRoute.tsx","webpack:///./node_modules/@react-navigation/core/src/fromEntries.tsx","webpack:///./node_modules/@react-navigation/core/src/getActionFromState.tsx","webpack:///./node_modules/@react-navigation/core/src/getFocusedRouteNameFromRoute.tsx","webpack:///./node_modules/@react-navigation/core/src/getPathFromState.tsx","webpack:///./node_modules/@react-navigation/core/src/getStateFromPath.tsx","webpack:///./node_modules/@react-navigation/core/src/index.tsx","webpack:///./node_modules/@react-navigation/core/src/isArrayEqual.tsx","webpack:///./node_modules/@react-navigation/core/src/isRecordEqual.tsx","webpack:///./node_modules/@react-navigation/core/src/types.tsx","webpack:///./node_modules/@react-navigation/core/src/useChildListeners.tsx","webpack:///./node_modules/@react-navigation/core/src/useComponent.tsx","webpack:///./node_modules/@react-navigation/core/src/useCurrentRender.tsx","webpack:///./node_modules/@react-navigation/core/src/useDescriptors.tsx","webpack:///./node_modules/@react-navigation/core/src/useEventEmitter.tsx","webpack:///./node_modules/@react-navigation/core/src/useFocusEffect.tsx","webpack:///./node_modules/@react-navigation/core/src/useFocusEvents.tsx","webpack:///./node_modules/@react-navigation/core/src/useFocusedListenersChildrenAdapter.tsx","webpack:///./node_modules/@react-navigation/core/src/useIsFocused.tsx","webpack:///./node_modules/@react-navigation/core/src/useKeyedChildListeners.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigation.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigationBuilder.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigationCache.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigationContainerRef.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigationHelpers.tsx","webpack:///./node_modules/@react-navigation/core/src/useNavigationState.tsx","webpack:///./node_modules/@react-navigation/core/src/useOnAction.tsx","webpack:///./node_modules/@react-navigation/core/src/useOnGetState.tsx","webpack:///./node_modules/@react-navigation/core/src/useOnPreventRemove.tsx","webpack:///./node_modules/@react-navigation/core/src/useOnRouteFocus.tsx","webpack:///./node_modules/@react-navigation/core/src/useOptionsGetters.tsx","webpack:///./node_modules/@react-navigation/core/src/usePreventRemove.tsx","webpack:///./node_modules/@react-navigation/core/src/usePreventRemoveContext.tsx","webpack:///./node_modules/@react-navigation/core/src/useRegisterNavigator.tsx","webpack:///./node_modules/@react-navigation/core/src/useRoute.tsx","webpack:///./node_modules/@react-navigation/core/src/useRouteCache.tsx","webpack:///./node_modules/@react-navigation/core/src/useScheduleUpdate.tsx","webpack:///./node_modules/@react-navigation/core/src/useSyncState.tsx","webpack:///./node_modules/@react-navigation/core/src/validatePathConfig.tsx","webpack:///./node_modules/@react-navigation/native/src/Link.tsx","webpack:///./node_modules/@react-navigation/native/src/LinkingContext.tsx","webpack:///./node_modules/@react-navigation/native/src/NavigationContainer.tsx","webpack:///./node_modules/@react-navigation/native/src/ServerContainer.tsx","webpack:///./node_modules/@react-navigation/native/src/ServerContext.tsx","webpack:///./node_modules/@react-navigation/native/src/extractPathFromURL.tsx","webpack:///./node_modules/@react-navigation/native/src/index.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/DarkTheme.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/DefaultTheme.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/ThemeContext.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/ThemeProvider.tsx","webpack:///./node_modules/@react-navigation/native/src/theming/useTheme.tsx","webpack:///./node_modules/@react-navigation/native/src/types.tsx","webpack:///./node_modules/@react-navigation/native/src/useBackButton.tsx","webpack:///./node_modules/@react-navigation/native/src/useDocumentTitle.native.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinkBuilder.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinkProps.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinkTo.tsx","webpack:///./node_modules/@react-navigation/native/src/useLinking.native.tsx","webpack:///./node_modules/@react-navigation/native/src/useScrollToTop.tsx","webpack:///./node_modules/@react-navigation/native/src/useThenable.tsx","webpack:///./node_modules/@react-navigation/routers/src/BaseRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/CommonActions.tsx","webpack:///./node_modules/@react-navigation/routers/src/DrawerRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/StackRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/TabRouter.tsx","webpack:///./node_modules/@react-navigation/routers/src/index.tsx","webpack:///./node_modules/@react-navigation/routers/src/types.tsx","webpack:///./node_modules/react-is/cjs/react-is.development.js","webpack:///./node_modules/react-is/index.js","webpack:///./node_modules/decode-uri-component/index.js","webpack:///./node_modules/escape-string-regexp/index.js","webpack:///./node_modules/filter-obj/index.js","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/split-on-first/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/use-latest-callback/lib/index.js","webpack:///./node_modules/nanoid/non-secure/index.cjs"],"sourcesContent":["import {\n  CommonActions,\n  InitialState,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport checkDuplicateRouteNames from './checkDuplicateRouteNames';\nimport checkSerializable from './checkSerializable';\nimport { NOT_INITIALIZED_ERROR } from './createNavigationContainerRef';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport findFocusedRoute from './findFocusedRoute';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationContainerRefContext from './NavigationContainerRefContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport useChildListeners from './useChildListeners';\nimport useEventEmitter from './useEventEmitter';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useSyncState from './useSyncState';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst serializableWarnings: string[] = [];\nconst duplicateNameWarnings: string[] = [];\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onUnhandledAction,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef<ParamListBase>>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [state, getState, setState, scheduleUpdate, flushUpdates] =\n      useSyncState<State>(() =>\n        getPartialState(initialState == null ? undefined : initialState)\n      );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = React.useCallback(\n      (\n        action:\n          | NavigationAction\n          | ((state: NavigationState) => NavigationAction)\n      ) => {\n        if (listeners.focus[0] == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) => navigation.dispatch(action));\n        }\n      },\n      [listeners.focus]\n    );\n\n    const canGoBack = React.useCallback(() => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    }, [listeners.focus]);\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) =>\n            navigation.dispatch({\n              ...CommonActions.reset(state),\n              target,\n            })\n          );\n        }\n      },\n      [keyedListeners.getState, listeners.focus]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      const state = getRootState();\n\n      if (state == null) {\n        return undefined;\n      }\n\n      const route = findFocusedRoute(state);\n\n      return route as Route<string> | undefined;\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    const navigation: NavigationContainerRef<ParamListBase> = React.useMemo(\n      () => ({\n        ...Object.keys(CommonActions).reduce<any>((acc, name) => {\n          acc[name] = (...args: any[]) =>\n            // @ts-expect-error: this is ok\n            dispatch(CommonActions[name](...args));\n          return acc;\n        }, {}),\n        ...emitter.create('root'),\n        dispatch,\n        resetRoot,\n        isFocused: () => true,\n        canGoBack,\n        getParent: () => undefined,\n        getState: () => stateRef.current,\n        getRootState,\n        getCurrentRoute,\n        getCurrentOptions,\n        isReady: () => listeners.focus[0] != null,\n      }),\n      [\n        canGoBack,\n        dispatch,\n        emitter,\n        getCurrentOptions,\n        getCurrentRoute,\n        getRootState,\n        listeners.focus,\n        resetRoot,\n      ]\n    );\n\n    React.useImperativeHandle(ref, () => navigation, [navigation]);\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({\n          type: '__unsafe_action__',\n          data: { action, noop, stack: stackRef.current },\n        });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options: object) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const stackRef = React.useRef<string | undefined>();\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n        stackRef,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n    const stateRef = React.useRef(state);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n      stateRef.current = state;\n    });\n\n    React.useEffect(() => {\n      const hydratedState = getRootState();\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (hydratedState !== undefined) {\n          const serializableResult = checkSerializable(hydratedState);\n\n          if (!serializableResult.serializable) {\n            const { location, reason } = serializableResult;\n\n            let path = '';\n            let pointer: Record<any, any> = hydratedState;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n\n          const duplicateRouteNamesResult =\n            checkDuplicateRouteNames(hydratedState);\n\n          if (duplicateRouteNamesResult.length) {\n            const message = `Found screens with the same name nested inside one another. Check:\\n${duplicateRouteNamesResult.map(\n              (locations) => `\\n${locations.join(', ')}`\n            )}\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.`;\n\n            if (!duplicateNameWarnings.includes(message)) {\n              duplicateNameWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(hydratedState);\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = React.useCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      },\n      []\n    );\n\n    let element = (\n      <NavigationContainerRefContext.Provider value={navigation}>\n        <ScheduleUpdateContext.Provider value={scheduleContext}>\n          <NavigationBuilderContext.Provider value={builderContext}>\n            <NavigationStateContext.Provider value={context}>\n              <UnhandledActionContext.Provider\n                value={onUnhandledAction ?? defaultOnUnhandledAction}\n              >\n                <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n              </UnhandledActionContext.Provider>\n            </NavigationStateContext.Provider>\n          </NavigationBuilderContext.Provider>\n        </ScheduleUpdateContext.Provider>\n      </NavigationContainerRefContext.Provider>\n    );\n\n    if (independent) {\n      // We need to clear any existing contexts for nested independent container to work correctly\n      element = (\n        <NavigationRouteContext.Provider value={undefined}>\n          <NavigationContext.Provider value={undefined}>\n            {element}\n          </NavigationContext.Provider>\n        </NavigationRouteContext.Provider>\n      );\n    }\n\n    return element;\n  }\n);\n\nexport default BaseNavigationContainer;\n","import * as React from 'react';\n\n/**\n * Context which holds the values for the current navigation tree.\n * Intended for use in SSR. This is not safe to use on the client.\n */\nconst CurrentRenderContext = React.createContext<\n  { options?: object } | undefined\n>(undefined);\n\nexport default CurrentRenderContext;\n","import * as React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst MULTIPLE_NAVIGATOR_ERROR = `Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;\n\nexport const SingleNavigatorContext = React.createContext<\n  | {\n      register(key: string): void;\n      unregister(key: string): void;\n    }\n  | undefined\n>(undefined);\n\n/**\n * Component which ensures that there's only one navigator nested under it.\n */\nexport default function EnsureSingleNavigator({ children }: Props) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n\n  const value = React.useMemo(\n    () => ({\n      register(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (currentKey !== undefined && key !== currentKey) {\n          throw new Error(MULTIPLE_NAVIGATOR_ERROR);\n        }\n\n        navigatorKeyRef.current = key;\n      },\n      unregister(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (key !== currentKey) {\n          return;\n        }\n\n        navigatorKeyRef.current = undefined;\n      },\n    }),\n    []\n  );\n\n  return (\n    <SingleNavigatorContext.Provider value={value}>\n      {children}\n    </SingleNavigatorContext.Provider>\n  );\n}\n","import type { ParamListBase } from '@react-navigation/routers';\n\nimport type { RouteGroupConfig } from './types';\n\n/**\n * Empty component used for grouping screen configs.\n */\nexport default function Group<\n  ParamList extends ParamListBase,\n  ScreenOptions extends {}\n>(_: RouteGroupConfig<ParamList, ScreenOptions>) {\n  /* istanbul ignore next */\n  return null;\n}\n","import type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { NavigationHelpers } from './types';\n\nexport type ListenerMap = {\n  action: ChildActionListener;\n  focus: FocusedNavigationListener;\n};\n\nexport type KeyedListenerMap = {\n  getState: GetStateListener;\n  beforeRemove: ChildBeforeRemoveListener;\n};\n\nexport type AddListener = <T extends keyof ListenerMap>(\n  type: T,\n  listener: ListenerMap[T]\n) => void;\n\nexport type AddKeyedListener = <T extends keyof KeyedListenerMap>(\n  type: T,\n  key: string,\n  listener: KeyedListenerMap[T]\n) => void;\n\nexport type ChildActionListener = (\n  action: NavigationAction,\n  visitedNavigators?: Set<string>\n) => boolean;\n\nexport type FocusedNavigationCallback<T> = (\n  navigation: NavigationHelpers<ParamListBase>\n) => T;\n\nexport type FocusedNavigationListener = <T>(\n  callback: FocusedNavigationCallback<T>\n) => {\n  handled: boolean;\n  result: T;\n};\n\nexport type GetStateListener = () => NavigationState;\n\nexport type ChildBeforeRemoveListener = (action: NavigationAction) => boolean;\n\n/**\n * Context which holds the required helpers needed to build nested navigators.\n */\nconst NavigationBuilderContext = React.createContext<{\n  onAction?: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  addListener?: AddListener;\n  addKeyedListener?: AddKeyedListener;\n  onRouteFocus?: (key: string) => void;\n  onDispatchAction: (action: NavigationAction, noop: boolean) => void;\n  onOptionsChange: (options: object) => void;\n  stackRef?: React.MutableRefObject<string | undefined>;\n}>({\n  onDispatchAction: () => undefined,\n  onOptionsChange: () => undefined,\n});\n\nexport default NavigationBuilderContext;\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { NavigationContainerRef } from './types';\n\n/**\n * Context which holds the route prop for a screen.\n */\nconst NavigationContainerRefContext = React.createContext<\n  NavigationContainerRef<ParamListBase> | undefined\n>(undefined);\n\nexport default NavigationContainerRefContext;\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { NavigationProp } from './types';\n\n/**\n * Context which holds the navigation prop for a screen.\n */\nconst NavigationContext = React.createContext<\n  NavigationProp<ParamListBase> | undefined\n>(undefined);\n\nexport default NavigationContext;\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { NavigationHelpers } from './types';\n\n/**\n * Context which holds the navigation helpers of the parent navigator.\n * Navigators should use this context in their view component.\n */\nconst NavigationHelpersContext = React.createContext<\n  NavigationHelpers<ParamListBase> | undefined\n>(undefined);\n\nexport default NavigationHelpersContext;\n","import type { Route } from '@react-navigation/routers';\nimport * as React from 'react';\n\n/**\n * Context which holds the route prop for a screen.\n */\nconst NavigationRouteContext = React.createContext<Route<string> | undefined>(\n  undefined\n);\n\nexport default NavigationRouteContext;\n","import type { NavigationState, PartialState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nconst MISSING_CONTEXT_ERROR =\n  \"Couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/getting-started for setup instructions.\";\n\nexport default React.createContext<{\n  isDefault?: true;\n  state?: NavigationState | PartialState<NavigationState>;\n  getKey: () => string | undefined;\n  setKey: (key: string) => void;\n  getState: () => NavigationState | PartialState<NavigationState> | undefined;\n  setState: (\n    state: NavigationState | PartialState<NavigationState> | undefined\n  ) => void;\n  getIsInitial: () => boolean;\n  addOptionsGetter?: (\n    key: string,\n    getter: () => object | undefined | null\n  ) => void;\n}>({\n  isDefault: true,\n\n  get getKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getIsInitial(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n","import * as React from 'react';\n\n/**\n * A type of an object that have a route key as an object key\n * and a value whether to prevent that route.\n */\nexport type PreventedRoutes = Record<string, { preventRemove: boolean }>;\n\nconst PreventRemoveContext = React.createContext<\n  | {\n      preventedRoutes: PreventedRoutes;\n      setPreventRemove: (\n        id: string,\n        routeKey: string,\n        preventRemove: boolean\n      ) => void;\n    }\n  | undefined\n>(undefined);\n\nexport default PreventRemoveContext;\n","import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport NavigationHelpersContext from './NavigationHelpersContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport PreventRemoveContext, { PreventedRoutes } from './PreventRemoveContext';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype PreventedRoutesMap = Map<\n  string,\n  {\n    routeKey: string;\n    preventRemove: boolean;\n  }\n>;\n\n/**\n * Util function to transform map of prevented routes to a simpler object.\n */\nconst transformPreventedRoutes = (\n  preventedRoutesMap: PreventedRoutesMap\n): PreventedRoutes => {\n  const preventedRoutesToTransform = [...preventedRoutesMap.values()];\n\n  const preventedRoutes = preventedRoutesToTransform.reduce<PreventedRoutes>(\n    (acc, { routeKey, preventRemove }) => {\n      acc[routeKey] = {\n        preventRemove: acc[routeKey]?.preventRemove || preventRemove,\n      };\n      return acc;\n    },\n    {}\n  );\n\n  return preventedRoutes;\n};\n\n/**\n * Component used for managing which routes have to be prevented from removal in native-stack.\n */\nexport default function PreventRemoveProvider({ children }: Props) {\n  const [parentId] = React.useState(() => nanoid());\n  const [preventedRoutesMap, setPreventedRoutesMap] =\n    React.useState<PreventedRoutesMap>(new Map());\n\n  const navigation = React.useContext(NavigationHelpersContext);\n  const route = React.useContext(NavigationRouteContext);\n\n  const preventRemoveContextValue = React.useContext(PreventRemoveContext);\n  // take `setPreventRemove` from parent context - if exist it means we're in a nested context\n  const setParentPrevented = preventRemoveContextValue?.setPreventRemove;\n\n  const setPreventRemove = useLatestCallback(\n    (id: string, routeKey: string, preventRemove: boolean): void => {\n      if (\n        preventRemove &&\n        (navigation == null ||\n          navigation\n            ?.getState()\n            .routes.every((route) => route.key !== routeKey))\n      ) {\n        throw new Error(\n          `Couldn't find a route with the key ${routeKey}. Is your component inside NavigationContent?`\n        );\n      }\n\n      setPreventedRoutesMap((prevPrevented) => {\n        // values haven't changed - do nothing\n        if (\n          routeKey === prevPrevented.get(id)?.routeKey &&\n          preventRemove === prevPrevented.get(id)?.preventRemove\n        ) {\n          return prevPrevented;\n        }\n\n        const nextPrevented = new Map(prevPrevented);\n\n        if (preventRemove) {\n          nextPrevented.set(id, {\n            routeKey,\n            preventRemove,\n          });\n        } else {\n          nextPrevented.delete(id);\n        }\n\n        return nextPrevented;\n      });\n    }\n  );\n\n  const isPrevented = [...preventedRoutesMap.values()].some(\n    ({ preventRemove }) => preventRemove\n  );\n\n  React.useEffect(() => {\n    if (route?.key !== undefined && setParentPrevented !== undefined) {\n      // when route is defined (and setParentPrevented) it means we're in a nested stack\n      // route.key then will be the route key of parent\n      setParentPrevented(parentId, route.key, isPrevented);\n      return () => {\n        setParentPrevented(parentId, route.key, false);\n      };\n    }\n\n    return;\n  }, [parentId, isPrevented, route?.key, setParentPrevented]);\n\n  const value = React.useMemo(\n    () => ({\n      setPreventRemove,\n      preventedRoutes: transformPreventedRoutes(preventedRoutesMap),\n    }),\n    [setPreventRemove, preventedRoutesMap]\n  );\n\n  return (\n    <PreventRemoveContext.Provider value={value}>\n      {children}\n    </PreventRemoveContext.Provider>\n  );\n}\n","import type {\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationStateContext from './NavigationStateContext';\nimport StaticContainer from './StaticContainer';\nimport type { NavigationProp, RouteConfigComponent } from './types';\nimport useOptionsGetters from './useOptionsGetters';\n\ntype Props<State extends NavigationState, ScreenOptions extends {}> = {\n  screen: RouteConfigComponent<ParamListBase, string> & { name: string };\n  navigation: NavigationProp<\n    ParamListBase,\n    string,\n    string | undefined,\n    State,\n    ScreenOptions\n  >;\n  route: Route<string>;\n  routeState: NavigationState | PartialState<NavigationState> | undefined;\n  getState: () => State;\n  setState: (state: State) => void;\n  options: object;\n  clearOptions: () => void;\n};\n\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView<\n  State extends NavigationState,\n  ScreenOptions extends {}\n>({\n  screen,\n  route,\n  navigation,\n  routeState,\n  getState,\n  setState,\n  options,\n  clearOptions,\n}: Props<State, ScreenOptions>) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n  const { addOptionsGetter } = useOptionsGetters({\n    key: route.key,\n    options,\n    navigation,\n  });\n\n  const setKey = React.useCallback((key: string) => {\n    navigatorKeyRef.current = key;\n  }, []);\n\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find((r) => r.key === route.key);\n\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n\n  const setCurrentState = React.useCallback(\n    (child: NavigationState | PartialState<NavigationState> | undefined) => {\n      const state = getState();\n\n      setState({\n        ...state,\n        routes: state.routes.map((r) =>\n          r.key === route.key ? { ...r, state: child } : r\n        ),\n      });\n    },\n    [getState, route.key, setState]\n  );\n\n  const isInitialRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  });\n\n  // Clear options set by this screen when it is unmounted\n  React.useEffect(() => {\n    return clearOptions;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n  const context = React.useMemo(\n    () => ({\n      state: routeState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    }),\n    [\n      routeState,\n      getCurrentState,\n      setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    ]\n  );\n\n  const ScreenComponent = screen.getComponent\n    ? screen.getComponent()\n    : screen.component;\n\n  return (\n    <NavigationStateContext.Provider value={context}>\n      <EnsureSingleNavigator>\n        <StaticContainer\n          name={screen.name}\n          render={ScreenComponent || screen.children}\n          navigation={navigation}\n          route={route}\n        >\n          {ScreenComponent !== undefined ? (\n            <ScreenComponent navigation={navigation} route={route} />\n          ) : screen.children !== undefined ? (\n            screen.children({ navigation, route })\n          ) : null}\n        </StaticContainer>\n      </EnsureSingleNavigator>\n    </NavigationStateContext.Provider>\n  );\n}\n","import type { NavigationState, ParamListBase } from '@react-navigation/routers';\n\nimport type { EventMapBase, RouteConfig } from './types';\n\n/**\n * Empty component used for specifying route configuration.\n */\nexport default function Screen<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList,\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>(_: RouteConfig<ParamList, RouteName, State, ScreenOptions, EventMap>) {\n  /* istanbul ignore next */\n  return null;\n}\n","import * as React from 'react';\n\n/**\n * Component which prevents updates for children if no props changed\n */\nfunction StaticContainer(props: any) {\n  return props.children;\n}\n\nexport default React.memo(StaticContainer, (prevProps: any, nextProps: any) => {\n  const prevPropKeys = Object.keys(prevProps);\n  const nextPropKeys = Object.keys(nextProps);\n\n  if (prevPropKeys.length !== nextPropKeys.length) {\n    return false;\n  }\n\n  for (const key of prevPropKeys) {\n    if (key === 'children') {\n      continue;\n    }\n\n    if (prevProps[key] !== nextProps[key]) {\n      return false;\n    }\n  }\n\n  return true;\n});\n","import type { NavigationAction } from '@react-navigation/routers';\nimport * as React from 'react';\n\nconst UnhandledActionContext = React.createContext<\n  ((action: NavigationAction) => void) | undefined\n>(undefined);\n\nexport default UnhandledActionContext;\n","import type { NavigationState, PartialState } from '@react-navigation/routers';\n\nexport default function checkDuplicateRouteNames(state: NavigationState) {\n  const duplicates: string[][] = [];\n\n  const getRouteNames = (\n    location: string,\n    state: NavigationState | PartialState<NavigationState>\n  ) => {\n    state.routes.forEach((route: typeof state.routes[0]) => {\n      const currentLocation = location\n        ? `${location} > ${route.name}`\n        : route.name;\n\n      route.state?.routeNames?.forEach((routeName) => {\n        if (routeName === route.name) {\n          duplicates.push([\n            currentLocation,\n            `${currentLocation} > ${route.name}`,\n          ]);\n        }\n      });\n\n      if (route.state) {\n        getRouteNames(currentLocation, route.state);\n      }\n    });\n  };\n\n  getRouteNames('', state);\n\n  return duplicates;\n}\n","const checkSerializableWithoutCircularReference = (\n  o: { [key: string]: any },\n  seen: Set<any>,\n  location: (string | number)[]\n):\n  | { serializable: true }\n  | {\n      serializable: false;\n      location: (string | number)[];\n      reason: string;\n    } => {\n  if (\n    o === undefined ||\n    o === null ||\n    typeof o === 'boolean' ||\n    typeof o === 'number' ||\n    typeof o === 'string'\n  ) {\n    return { serializable: true };\n  }\n\n  if (\n    Object.prototype.toString.call(o) !== '[object Object]' &&\n    !Array.isArray(o)\n  ) {\n    return {\n      serializable: false,\n      location,\n      reason: typeof o === 'function' ? 'Function' : String(o),\n    };\n  }\n\n  if (seen.has(o)) {\n    return {\n      serializable: false,\n      reason: 'Circular reference',\n      location,\n    };\n  }\n\n  seen.add(o);\n\n  if (Array.isArray(o)) {\n    for (let i = 0; i < o.length; i++) {\n      const childResult = checkSerializableWithoutCircularReference(\n        o[i],\n        new Set<any>(seen),\n        [...location, i]\n      );\n\n      if (!childResult.serializable) {\n        return childResult;\n      }\n    }\n  } else {\n    for (const key in o) {\n      const childResult = checkSerializableWithoutCircularReference(\n        o[key],\n        new Set<any>(seen),\n        [...location, key]\n      );\n\n      if (!childResult.serializable) {\n        return childResult;\n      }\n    }\n  }\n\n  return { serializable: true };\n};\n\nexport default function checkSerializable(o: { [key: string]: any }) {\n  return checkSerializableWithoutCircularReference(o, new Set<any>(), []);\n}\n","import { CommonActions } from '@react-navigation/routers';\n\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerRefWithCurrent,\n} from './types';\n\nexport const NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nexport default function createNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const methods = [\n    ...Object.keys(CommonActions),\n    'addListener',\n    'removeListener',\n    'resetRoot',\n    'dispatch',\n    'isFocused',\n    'canGoBack',\n    'getRootState',\n    'getState',\n    'getParent',\n    'getCurrentRoute',\n    'getCurrentOptions',\n  ] as const;\n\n  const listeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  const removeListener = (\n    event: string,\n    callback: (...args: any[]) => void\n  ) => {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter((cb) => cb !== callback);\n    }\n  };\n\n  let current: NavigationContainerRef<ParamList> | null = null;\n\n  const ref: NavigationContainerRefWithCurrent<ParamList> = {\n    get current() {\n      return current;\n    },\n    set current(value: NavigationContainerRef<ParamList> | null) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(([event, callbacks]) => {\n          callbacks.forEach((callback) => {\n            value.addListener(\n              event as keyof NavigationContainerEventMap,\n              callback\n            );\n          });\n        });\n      }\n    },\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    },\n    ...methods.reduce<any>((acc, name) => {\n      acc[name] = (...args: any[]) => {\n        if (current == null) {\n          switch (name) {\n            case 'addListener': {\n              const [event, callback] = args;\n\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n\n              return () => removeListener(event, callback);\n            }\n            case 'removeListener': {\n              const [event, callback] = args;\n\n              removeListener(event, callback);\n              break;\n            }\n            default:\n              console.error(NOT_INITIALIZED_ERROR);\n          }\n        } else {\n          // @ts-expect-error: this is ok\n          return current[name](...args);\n        }\n      };\n      return acc;\n    }, {}),\n  };\n\n  return ref;\n}\n","import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport type * as React from 'react';\n\nimport Group from './Group';\nimport Screen from './Screen';\nimport type { EventMapBase, TypedNavigator } from './types';\n\n/**\n * Higher order component to create a `Navigator` and `Screen` pair.\n * Custom navigators should wrap the navigator component in `createNavigator` before exporting.\n *\n * @param Navigator The navigtor component to wrap.\n * @returns Factory method to create a `Navigator` and `Screen` pair.\n */\nexport default function createNavigatorFactory<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n  NavigatorComponent extends React.ComponentType<any>\n>(Navigator: NavigatorComponent) {\n  return function <ParamList extends ParamListBase>(): TypedNavigator<\n    ParamList,\n    State,\n    ScreenOptions,\n    EventMap,\n    typeof Navigator\n  > {\n    if (arguments[0] !== undefined) {\n      throw new Error(\n        \"Creating a navigator doesn't take an argument. Maybe you are trying to use React Navigation 4 API? See https://reactnavigation.org/docs/hello-react-navigation for the latest API and guides.\"\n      );\n    }\n\n    return {\n      Navigator,\n      Group,\n      Screen,\n    };\n  };\n}\n","import type { InitialState } from '@react-navigation/routers';\n\nexport default function findFocusedRoute(state: InitialState) {\n  let current: InitialState | undefined = state;\n\n  while (current?.routes[current.index ?? 0].state != null) {\n    current = current.routes[current.index ?? 0].state;\n  }\n\n  const route = current?.routes[current?.index ?? 0];\n\n  return route;\n}\n","// Object.fromEntries is not available in older iOS versions\nexport default function fromEntries<K extends string, V>(\n  entries: (readonly [K, V])[]\n) {\n  return entries.reduce((acc, [k, v]) => {\n    if (acc.hasOwnProperty(k)) {\n      throw new Error(`A value for key '${k}' already exists in the object.`);\n    }\n\n    acc[k] = v;\n    return acc;\n  }, {} as Record<K, V>);\n}\n","import type {\n  CommonActions,\n  NavigationState,\n  ParamListBase,\n  PartialRoute,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\n\nimport type { NavigatorScreenParams, PathConfig, PathConfigMap } from './types';\n\ntype ConfigItem = {\n  initialRouteName?: string;\n  screens?: Record<string, ConfigItem>;\n};\n\ntype Options = {\n  initialRouteName?: string;\n  screens: PathConfigMap<object>;\n};\n\ntype NavigateAction<State extends NavigationState> = {\n  type: 'NAVIGATE';\n  payload: {\n    name: string;\n    params?: NavigatorScreenParams<State>;\n    path?: string;\n  };\n};\n\nexport default function getActionFromState(\n  state: PartialState<NavigationState>,\n  options?: Options\n): NavigateAction<NavigationState> | CommonActions.Action | undefined {\n  // Create a normalized configs object which will be easier to use\n  const normalizedConfig = options\n    ? createNormalizedConfigItem(options as PathConfig<object> | string)\n    : {};\n\n  const routes =\n    state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n\n  if (routes.length === 0) {\n    return undefined;\n  }\n\n  if (\n    !(\n      (routes.length === 1 && routes[0].key === undefined) ||\n      (routes.length === 2 &&\n        routes[0].key === undefined &&\n        routes[0].name === normalizedConfig?.initialRouteName &&\n        routes[1].key === undefined)\n    )\n  ) {\n    return {\n      type: 'RESET',\n      payload: state,\n    };\n  }\n\n  const route = state.routes[state.index ?? state.routes.length - 1];\n\n  let current: PartialState<NavigationState> | undefined = route?.state;\n  let config: ConfigItem | undefined = normalizedConfig?.screens?.[route?.name];\n  let params = { ...route.params } as NavigatorScreenParams<\n    ParamListBase,\n    NavigationState\n  >;\n\n  let payload = route\n    ? { name: route.name, path: route.path, params }\n    : undefined;\n\n  while (current) {\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n\n    const routes =\n      current.index != null\n        ? current.routes.slice(0, current.index + 1)\n        : current.routes;\n\n    const route: Route<string> | PartialRoute<Route<string>> =\n      routes[routes.length - 1];\n\n    // Explicitly set to override existing value when merging params\n    Object.assign(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined,\n    });\n\n    if (routes.length === 1 && routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = route.name;\n    } else if (\n      routes.length === 2 &&\n      routes[0].key === undefined &&\n      routes[0].name === config?.initialRouteName &&\n      routes[1].key === undefined\n    ) {\n      params.initial = false;\n      params.screen = route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n\n    if (route.state) {\n      params.params = { ...route.params };\n      params = params.params as NavigatorScreenParams<\n        ParamListBase,\n        NavigationState\n      >;\n    } else {\n      params.path = route.path;\n      params.params = route.params;\n    }\n\n    current = route.state;\n    config = config?.screens?.[route.name];\n  }\n\n  if (!payload) {\n    return;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  return {\n    type: 'NAVIGATE',\n    payload,\n  };\n}\n\nconst createNormalizedConfigItem = (config: PathConfig<object> | string) =>\n  typeof config === 'object' && config != null\n    ? {\n        initialRouteName: config.initialRouteName,\n        screens:\n          config.screens != null\n            ? createNormalizedConfigs(config.screens)\n            : undefined,\n      }\n    : {};\n\nconst createNormalizedConfigs = (options: PathConfigMap<object>) =>\n  Object.entries(options).reduce<Record<string, ConfigItem>>((acc, [k, v]) => {\n    acc[k] = createNormalizedConfigItem(v);\n    return acc;\n  }, {});\n","import type { Route } from '@react-navigation/routers';\n\nimport { CHILD_STATE } from './useRouteCache';\n\nexport default function getFocusedRouteNameFromRoute(\n  route: Partial<Route<string>>\n): string | undefined {\n  // @ts-expect-error: this isn't in type definitions coz we want this private\n  const state = route[CHILD_STATE] ?? route.state;\n  const params = route.params as { screen?: unknown } | undefined;\n\n  const routeName = state\n    ? // Get the currently active route name in the nested navigator\n      state.routes[\n        // If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n        // The type property will only exist for rehydrated state and not for state from deep link\n        state.index ??\n          (typeof state.type === 'string' && state.type !== 'stack'\n            ? 0\n            : state.routes.length - 1)\n      ].name\n    : // If state doesn't exist, we need to default to `screen` param if available\n    typeof params?.screen === 'string'\n    ? params.screen\n    : undefined;\n\n  return routeName;\n}\n","import type {\n  NavigationState,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as queryString from 'query-string';\n\nimport fromEntries from './fromEntries';\nimport type { PathConfig, PathConfigMap } from './types';\nimport validatePathConfig from './validatePathConfig';\n\ntype Options<ParamList> = {\n  initialRouteName?: string;\n  screens: PathConfigMap<ParamList>;\n};\n\ntype State = NavigationState | Omit<PartialState<NavigationState>, 'stale'>;\n\ntype StringifyConfig = Record<string, (value: any) => string>;\n\ntype ConfigItem = {\n  pattern?: string;\n  stringify?: StringifyConfig;\n  screens?: Record<string, ConfigItem>;\n};\n\nconst getActiveRoute = (state: State): { name: string; params?: object } => {\n  const route =\n    typeof state.index === 'number'\n      ? state.routes[state.index]\n      : state.routes[state.routes.length - 1];\n\n  if (route.state) {\n    return getActiveRoute(route.state);\n  }\n\n  return route;\n};\n\n/**\n * Utility to serialize a navigation state object to a path string.\n *\n * @example\n * ```js\n * getPathFromState(\n *   {\n *     routes: [\n *       {\n *         name: 'Chat',\n *         params: { author: 'Jane', id: 42 },\n *       },\n *     ],\n *   },\n *   {\n *     screens: {\n *       Chat: {\n *         path: 'chat/:author/:id',\n *         stringify: { author: author => author.toLowerCase() }\n *       }\n *     }\n *   }\n * )\n * ```\n *\n * @param state Navigation state to serialize.\n * @param options Extra options to fine-tune how to serialize the path.\n * @returns Path representing the state, e.g. /foo/bar?count=42.\n */\nexport default function getPathFromState<ParamList extends {}>(\n  state: State,\n  options?: Options<ParamList>\n): string {\n  if (state == null) {\n    throw Error(\n      \"Got 'undefined' for the navigation state. You must pass a valid state object.\"\n    );\n  }\n\n  if (options) {\n    validatePathConfig(options);\n  }\n\n  // Create a normalized configs object which will be easier to use\n  const configs: Record<string, ConfigItem> = options?.screens\n    ? createNormalizedConfigs(options?.screens)\n    : {};\n\n  let path = '/';\n  let current: State | undefined = state;\n\n  const allParams: Record<string, any> = {};\n\n  while (current) {\n    let index = typeof current.index === 'number' ? current.index : 0;\n    let route = current.routes[index] as Route<string> & {\n      state?: State;\n    };\n\n    let pattern: string | undefined;\n\n    let focusedParams: Record<string, any> | undefined;\n    let focusedRoute = getActiveRoute(state);\n    let currentOptions = configs;\n\n    // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n    let nestedRouteNames = [];\n\n    let hasNext = true;\n\n    while (route.name in currentOptions && hasNext) {\n      pattern = currentOptions[route.name].pattern;\n\n      nestedRouteNames.push(route.name);\n\n      if (route.params) {\n        const stringify = currentOptions[route.name]?.stringify;\n\n        const currentParams = fromEntries(\n          Object.entries(route.params).map(([key, value]) => [\n            key,\n            stringify?.[key] ? stringify[key](value) : String(value),\n          ])\n        );\n\n        if (pattern) {\n          Object.assign(allParams, currentParams);\n        }\n\n        if (focusedRoute === route) {\n          // If this is the focused route, keep the params for later use\n          // We save it here since it's been stringified already\n          focusedParams = { ...currentParams };\n\n          pattern\n            ?.split('/')\n            .filter((p) => p.startsWith(':'))\n            // eslint-disable-next-line no-loop-func\n            .forEach((p) => {\n              const name = getParamName(p);\n\n              // Remove the params present in the pattern since we'll only use the rest for query string\n              if (focusedParams) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete focusedParams[name];\n              }\n            });\n        }\n      }\n\n      // If there is no `screens` property or no nested state, we return pattern\n      if (!currentOptions[route.name].screens || route.state === undefined) {\n        hasNext = false;\n      } else {\n        index =\n          typeof route.state.index === 'number'\n            ? route.state.index\n            : route.state.routes.length - 1;\n\n        const nextRoute = route.state.routes[index];\n        const nestedConfig = currentOptions[route.name].screens;\n\n        // if there is config for next route name, we go deeper\n        if (nestedConfig && nextRoute.name in nestedConfig) {\n          route = nextRoute as Route<string> & { state?: State };\n          currentOptions = nestedConfig;\n        } else {\n          // If not, there is no sense in going deeper in config\n          hasNext = false;\n        }\n      }\n    }\n\n    if (pattern === undefined) {\n      pattern = nestedRouteNames.join('/');\n    }\n\n    if (currentOptions[route.name] !== undefined) {\n      path += pattern\n        .split('/')\n        .map((p) => {\n          const name = getParamName(p);\n\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (p === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (p.startsWith(':')) {\n            const value = allParams[name];\n\n            if (value === undefined && p.endsWith('?')) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            return encodeURIComponent(value);\n          }\n\n          return encodeURIComponent(p);\n        })\n        .join('/');\n    } else {\n      path += encodeURIComponent(route.name);\n    }\n\n    if (!focusedParams) {\n      focusedParams = focusedRoute.params;\n    }\n\n    if (route.state) {\n      path += '/';\n    } else if (focusedParams) {\n      for (let param in focusedParams) {\n        if (focusedParams[param] === 'undefined') {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete focusedParams[param];\n        }\n      }\n\n      const query = queryString.stringify(focusedParams, { sort: false });\n\n      if (query) {\n        path += `?${query}`;\n      }\n    }\n\n    current = route.state;\n  }\n\n  // Remove multiple as well as trailing slashes\n  path = path.replace(/\\/+/g, '/');\n  path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n  return path;\n}\n\nconst getParamName = (pattern: string) =>\n  pattern.replace(/^:/, '').replace(/\\?$/, '');\n\nconst joinPaths = (...paths: string[]): string =>\n  ([] as string[])\n    .concat(...paths.map((p) => p.split('/')))\n    .filter(Boolean)\n    .join('/');\n\nconst createConfigItem = (\n  config: PathConfig<object> | string,\n  parentPattern?: string\n): ConfigItem => {\n  if (typeof config === 'string') {\n    // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n    const pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n\n    return { pattern };\n  }\n\n  // If an object is specified as the value (e.g. Foo: { ... }),\n  // It can have `path` property and `screens` prop which has nested configs\n  let pattern: string | undefined;\n\n  if (config.exact && config.path === undefined) {\n    throw new Error(\n      \"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\"\n    );\n  }\n\n  pattern =\n    config.exact !== true\n      ? joinPaths(parentPattern || '', config.path || '')\n      : config.path || '';\n\n  const screens = config.screens\n    ? createNormalizedConfigs(config.screens, pattern)\n    : undefined;\n\n  return {\n    // Normalize pattern to remove any leading, trailing slashes, duplicate slashes etc.\n    pattern: pattern?.split('/').filter(Boolean).join('/'),\n    stringify: config.stringify,\n    screens,\n  };\n};\n\nconst createNormalizedConfigs = (\n  options: PathConfigMap<object>,\n  pattern?: string\n): Record<string, ConfigItem> =>\n  fromEntries(\n    Object.entries(options).map(([name, c]) => {\n      const result = createConfigItem(c, pattern);\n\n      return [name, result];\n    })\n  );\n","import type {\n  InitialState,\n  NavigationState,\n  PartialState,\n} from '@react-navigation/routers';\nimport escape from 'escape-string-regexp';\nimport * as queryString from 'query-string';\n\nimport findFocusedRoute from './findFocusedRoute';\nimport type { PathConfigMap } from './types';\nimport validatePathConfig from './validatePathConfig';\n\ntype Options<ParamList extends {}> = {\n  initialRouteName?: string;\n  screens: PathConfigMap<ParamList>;\n};\n\ntype ParseConfig = Record<string, (value: string) => any>;\n\ntype RouteConfig = {\n  screen: string;\n  regex?: RegExp;\n  path: string;\n  pattern: string;\n  routeNames: string[];\n  parse?: ParseConfig;\n};\n\ntype InitialRouteConfig = {\n  initialRouteName: string;\n  parentScreens: string[];\n};\n\ntype ResultState = PartialState<NavigationState> & {\n  state?: ResultState;\n};\n\ntype ParsedRoute = {\n  name: string;\n  path?: string;\n  params?: Record<string, any> | undefined;\n};\n\n/**\n * Utility to parse a path string to initial state object accepted by the container.\n * This is useful for deep linking when we need to handle the incoming URL.\n *\n * @example\n * ```js\n * getStateFromPath(\n *   '/chat/jane/42',\n *   {\n *     screens: {\n *       Chat: {\n *         path: 'chat/:author/:id',\n *         parse: { id: Number }\n *       }\n *     }\n *   }\n * )\n * ```\n * @param path Path string to parse and convert, e.g. /foo/bar?count=42.\n * @param options Extra options to fine-tune how to parse the path.\n */\nexport default function getStateFromPath<ParamList extends {}>(\n  path: string,\n  options?: Options<ParamList>\n): ResultState | undefined {\n  if (options) {\n    validatePathConfig(options);\n  }\n\n  let initialRoutes: InitialRouteConfig[] = [];\n\n  if (options?.initialRouteName) {\n    initialRoutes.push({\n      initialRouteName: options.initialRouteName,\n      parentScreens: [],\n    });\n  }\n\n  const screens = options?.screens;\n\n  let remaining = path\n    .replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n    .replace(/^\\//, '') // Remove extra leading slash\n    .replace(/\\?.*$/, ''); // Remove query params which we will handle later\n\n  // Make sure there is a trailing slash\n  remaining = remaining.endsWith('/') ? remaining : `${remaining}/`;\n\n  if (screens === undefined) {\n    // When no config is specified, use the path segments as route names\n    const routes = remaining\n      .split('/')\n      .filter(Boolean)\n      .map((segment) => {\n        const name = decodeURIComponent(segment);\n        return { name };\n      });\n\n    if (routes.length) {\n      return createNestedStateObject(path, routes, initialRoutes);\n    }\n\n    return undefined;\n  }\n\n  // Create a normalized configs array which will be easier to use\n  const configs = ([] as RouteConfig[])\n    .concat(\n      ...Object.keys(screens).map((key) =>\n        createNormalizedConfigs(\n          key,\n          screens as PathConfigMap<object>,\n          [],\n          initialRoutes,\n          []\n        )\n      )\n    )\n    .sort((a, b) => {\n      // Sort config so that:\n      // - the most exhaustive ones are always at the beginning\n      // - patterns with wildcard are always at the end\n\n      // If 2 patterns are same, move the one with less route names up\n      // This is an error state, so it's only useful for consistent error messages\n      if (a.pattern === b.pattern) {\n        return b.routeNames.join('>').localeCompare(a.routeNames.join('>'));\n      }\n\n      // If one of the patterns starts with the other, it's more exhaustive\n      // So move it up\n      if (a.pattern.startsWith(b.pattern)) {\n        return -1;\n      }\n\n      if (b.pattern.startsWith(a.pattern)) {\n        return 1;\n      }\n\n      const aParts = a.pattern.split('/');\n      const bParts = b.pattern.split('/');\n\n      for (let i = 0; i < Math.max(aParts.length, bParts.length); i++) {\n        // if b is longer, b get higher priority\n        if (aParts[i] == null) {\n          return 1;\n        }\n        // if a is longer, a get higher priority\n        if (bParts[i] == null) {\n          return -1;\n        }\n        const aWildCard = aParts[i] === '*' || aParts[i].startsWith(':');\n        const bWildCard = bParts[i] === '*' || bParts[i].startsWith(':');\n        // if both are wildcard we compare next component\n        if (aWildCard && bWildCard) {\n          continue;\n        }\n        // if only a is wild card, b get higher priority\n        if (aWildCard) {\n          return 1;\n        }\n        // if only b is wild card, a get higher priority\n        if (bWildCard) {\n          return -1;\n        }\n      }\n      return bParts.length - aParts.length;\n    });\n\n  // Check for duplicate patterns in the config\n  configs.reduce<Record<string, RouteConfig>>((acc, config) => {\n    if (acc[config.pattern]) {\n      const a = acc[config.pattern].routeNames;\n      const b = config.routeNames;\n\n      // It's not a problem if the path string omitted from a inner most screen\n      // For example, it's ok if a path resolves to `A > B > C` or `A > B`\n      const intersects =\n        a.length > b.length\n          ? b.every((it, i) => a[i] === it)\n          : a.every((it, i) => b[i] === it);\n\n      if (!intersects) {\n        throw new Error(\n          `Found conflicting screens with the same pattern. The pattern '${\n            config.pattern\n          }' resolves to both '${a.join(' > ')}' and '${b.join(\n            ' > '\n          )}'. Patterns must be unique and cannot resolve to more than one screen.`\n        );\n      }\n    }\n\n    return Object.assign(acc, {\n      [config.pattern]: config,\n    });\n  }, {});\n\n  if (remaining === '/') {\n    // We need to add special handling of empty path so navigation to empty path also works\n    // When handling empty path, we should only look at the root level config\n    const match = configs.find(\n      (config) =>\n        config.path === '' &&\n        config.routeNames.every(\n          // Make sure that none of the parent configs have a non-empty path defined\n          (name) => !configs.find((c) => c.screen === name)?.path\n        )\n    );\n\n    if (match) {\n      return createNestedStateObject(\n        path,\n        match.routeNames.map((name) => ({ name })),\n        initialRoutes,\n        configs\n      );\n    }\n\n    return undefined;\n  }\n\n  let result: PartialState<NavigationState> | undefined;\n  let current: PartialState<NavigationState> | undefined;\n\n  // We match the whole path against the regex instead of segments\n  // This makes sure matches such as wildcard will catch any unmatched routes, even if nested\n  const { routes, remainingPath } = matchAgainstConfigs(\n    remaining,\n    configs.map((c) => ({\n      ...c,\n      // Add `$` to the regex to make sure it matches till end of the path and not just beginning\n      regex: c.regex ? new RegExp(c.regex.source + '$') : undefined,\n    }))\n  );\n\n  if (routes !== undefined) {\n    // This will always be empty if full path matched\n    current = createNestedStateObject(path, routes, initialRoutes, configs);\n    remaining = remainingPath;\n    result = current;\n  }\n\n  if (current == null || result == null) {\n    return undefined;\n  }\n\n  return result;\n}\n\nconst joinPaths = (...paths: string[]): string =>\n  ([] as string[])\n    .concat(...paths.map((p) => p.split('/')))\n    .filter(Boolean)\n    .join('/');\n\nconst matchAgainstConfigs = (remaining: string, configs: RouteConfig[]) => {\n  let routes: ParsedRoute[] | undefined;\n  let remainingPath = remaining;\n\n  // Go through all configs, and see if the next path segment matches our regex\n  for (const config of configs) {\n    if (!config.regex) {\n      continue;\n    }\n\n    const match = remainingPath.match(config.regex);\n\n    // If our regex matches, we need to extract params from the path\n    if (match) {\n      const matchedParams = config.pattern\n        ?.split('/')\n        .filter((p) => p.startsWith(':'))\n        .reduce<Record<string, any>>(\n          (acc, p, i) =>\n            Object.assign(acc, {\n              // The param segments appear every second item starting from 2 in the regex match result\n              [p]: match![(i + 1) * 2].replace(/\\//, ''),\n            }),\n          {}\n        );\n\n      routes = config.routeNames.map((name) => {\n        const config = configs.find((c) => c.screen === name);\n        const params = config?.path\n          ?.split('/')\n          .filter((p) => p.startsWith(':'))\n          .reduce<Record<string, any>>((acc, p) => {\n            const value = matchedParams[p];\n\n            if (value) {\n              const key = p.replace(/^:/, '').replace(/\\?$/, '');\n              acc[key] = config.parse?.[key] ? config.parse[key](value) : value;\n            }\n\n            return acc;\n          }, {});\n\n        if (params && Object.keys(params).length) {\n          return { name, params };\n        }\n\n        return { name };\n      });\n\n      remainingPath = remainingPath.replace(match[1], '');\n\n      break;\n    }\n  }\n\n  return { routes, remainingPath };\n};\n\nconst createNormalizedConfigs = (\n  screen: string,\n  routeConfig: PathConfigMap<object>,\n  routeNames: string[] = [],\n  initials: InitialRouteConfig[],\n  parentScreens: string[],\n  parentPattern?: string\n): RouteConfig[] => {\n  const configs: RouteConfig[] = [];\n\n  routeNames.push(screen);\n\n  parentScreens.push(screen);\n\n  // @ts-expect-error: we can't strongly typecheck this for now\n  const config = routeConfig[screen];\n\n  if (typeof config === 'string') {\n    // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n    const pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n\n    configs.push(createConfigItem(screen, routeNames, pattern, config));\n  } else if (typeof config === 'object') {\n    let pattern: string | undefined;\n\n    // if an object is specified as the value (e.g. Foo: { ... }),\n    // it can have `path` property and\n    // it could have `screens` prop which has nested configs\n    if (typeof config.path === 'string') {\n      if (config.exact && config.path === undefined) {\n        throw new Error(\n          \"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\"\n        );\n      }\n\n      pattern =\n        config.exact !== true\n          ? joinPaths(parentPattern || '', config.path || '')\n          : config.path || '';\n\n      configs.push(\n        createConfigItem(\n          screen,\n          routeNames,\n          pattern!,\n          config.path,\n          config.parse\n        )\n      );\n    }\n\n    if (config.screens) {\n      // property `initialRouteName` without `screens` has no purpose\n      if (config.initialRouteName) {\n        initials.push({\n          initialRouteName: config.initialRouteName,\n          parentScreens,\n        });\n      }\n\n      Object.keys(config.screens).forEach((nestedConfig) => {\n        const result = createNormalizedConfigs(\n          nestedConfig,\n          config.screens as PathConfigMap<object>,\n          routeNames,\n          initials,\n          [...parentScreens],\n          pattern ?? parentPattern\n        );\n\n        configs.push(...result);\n      });\n    }\n  }\n\n  routeNames.pop();\n\n  return configs;\n};\n\nconst createConfigItem = (\n  screen: string,\n  routeNames: string[],\n  pattern: string,\n  path: string,\n  parse?: ParseConfig\n): RouteConfig => {\n  // Normalize pattern to remove any leading, trailing slashes, duplicate slashes etc.\n  pattern = pattern.split('/').filter(Boolean).join('/');\n\n  const regex = pattern\n    ? new RegExp(\n        `^(${pattern\n          .split('/')\n          .map((it) => {\n            if (it.startsWith(':')) {\n              return `(([^/]+\\\\/)${it.endsWith('?') ? '?' : ''})`;\n            }\n\n            return `${it === '*' ? '.*' : escape(it)}\\\\/`;\n          })\n          .join('')})`\n      )\n    : undefined;\n\n  return {\n    screen,\n    regex,\n    pattern,\n    path,\n    // The routeNames array is mutated, so copy it to keep the current state\n    routeNames: [...routeNames],\n    parse,\n  };\n};\n\nconst findParseConfigForRoute = (\n  routeName: string,\n  flatConfig: RouteConfig[]\n): ParseConfig | undefined => {\n  for (const config of flatConfig) {\n    if (routeName === config.routeNames[config.routeNames.length - 1]) {\n      return config.parse;\n    }\n  }\n\n  return undefined;\n};\n\n// Try to find an initial route connected with the one passed\nconst findInitialRoute = (\n  routeName: string,\n  parentScreens: string[],\n  initialRoutes: InitialRouteConfig[]\n): string | undefined => {\n  for (const config of initialRoutes) {\n    if (parentScreens.length === config.parentScreens.length) {\n      let sameParents = true;\n      for (let i = 0; i < parentScreens.length; i++) {\n        if (parentScreens[i].localeCompare(config.parentScreens[i]) !== 0) {\n          sameParents = false;\n          break;\n        }\n      }\n      if (sameParents) {\n        return routeName !== config.initialRouteName\n          ? config.initialRouteName\n          : undefined;\n      }\n    }\n  }\n  return undefined;\n};\n\n// returns state object with values depending on whether\n// it is the end of state and if there is initialRoute for this level\nconst createStateObject = (\n  initialRoute: string | undefined,\n  route: ParsedRoute,\n  isEmpty: boolean\n): InitialState => {\n  if (isEmpty) {\n    if (initialRoute) {\n      return {\n        index: 1,\n        routes: [{ name: initialRoute }, route],\n      };\n    } else {\n      return {\n        routes: [route],\n      };\n    }\n  } else {\n    if (initialRoute) {\n      return {\n        index: 1,\n        routes: [{ name: initialRoute }, { ...route, state: { routes: [] } }],\n      };\n    } else {\n      return {\n        routes: [{ ...route, state: { routes: [] } }],\n      };\n    }\n  }\n};\n\nconst createNestedStateObject = (\n  path: string,\n  routes: ParsedRoute[],\n  initialRoutes: InitialRouteConfig[],\n  flatConfig?: RouteConfig[]\n) => {\n  let state: InitialState;\n  let route = routes.shift() as ParsedRoute;\n  const parentScreens: string[] = [];\n\n  let initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n\n  parentScreens.push(route.name);\n\n  state = createStateObject(initialRoute, route, routes.length === 0);\n\n  if (routes.length > 0) {\n    let nestedState = state;\n\n    while ((route = routes.shift() as ParsedRoute)) {\n      initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n\n      const nestedStateIndex =\n        nestedState.index || nestedState.routes.length - 1;\n\n      nestedState.routes[nestedStateIndex].state = createStateObject(\n        initialRoute,\n        route,\n        routes.length === 0\n      );\n\n      if (routes.length > 0) {\n        nestedState = nestedState.routes[nestedStateIndex]\n          .state as InitialState;\n      }\n\n      parentScreens.push(route.name);\n    }\n  }\n\n  route = findFocusedRoute(state) as ParsedRoute;\n  route.path = path;\n\n  const params = parseQueryParams(\n    path,\n    flatConfig ? findParseConfigForRoute(route.name, flatConfig) : undefined\n  );\n\n  if (params) {\n    route.params = { ...route.params, ...params };\n  }\n\n  return state;\n};\n\nconst parseQueryParams = (\n  path: string,\n  parseConfig?: Record<string, (value: string) => any>\n) => {\n  const query = path.split('?')[1];\n  const params = queryString.parse(query);\n\n  if (parseConfig) {\n    Object.keys(params).forEach((name) => {\n      if (\n        Object.hasOwnProperty.call(parseConfig, name) &&\n        typeof params[name] === 'string'\n      ) {\n        params[name] = parseConfig[name](params[name] as string);\n      }\n    });\n  }\n\n  return Object.keys(params).length ? params : undefined;\n};\n","export { default as BaseNavigationContainer } from './BaseNavigationContainer';\nexport { default as createNavigationContainerRef } from './createNavigationContainerRef';\nexport { default as createNavigatorFactory } from './createNavigatorFactory';\nexport { default as CurrentRenderContext } from './CurrentRenderContext';\nexport { default as findFocusedRoute } from './findFocusedRoute';\nexport { default as getActionFromState } from './getActionFromState';\nexport { default as getFocusedRouteNameFromRoute } from './getFocusedRouteNameFromRoute';\nexport { default as getPathFromState } from './getPathFromState';\nexport { default as getStateFromPath } from './getStateFromPath';\nexport { default as NavigationContainerRefContext } from './NavigationContainerRefContext';\nexport { default as NavigationContext } from './NavigationContext';\nexport { default as NavigationHelpersContext } from './NavigationHelpersContext';\nexport { default as NavigationRouteContext } from './NavigationRouteContext';\nexport { default as PreventRemoveContext } from './PreventRemoveContext';\nexport { default as PreventRemoveProvider } from './PreventRemoveProvider';\nexport * from './types';\nexport { default as useFocusEffect } from './useFocusEffect';\nexport { default as useIsFocused } from './useIsFocused';\nexport { default as useNavigation } from './useNavigation';\nexport { default as useNavigationBuilder } from './useNavigationBuilder';\nexport { default as useNavigationContainerRef } from './useNavigationContainerRef';\nexport { default as useNavigationState } from './useNavigationState';\nexport { default as UNSTABLE_usePreventRemove } from './usePreventRemove';\nexport { default as usePreventRemoveContext } from './usePreventRemoveContext';\nexport { default as useRoute } from './useRoute';\nexport { default as validatePathConfig } from './validatePathConfig';\nexport * from '@react-navigation/routers';\n","/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nexport default function isArrayEqual(a: any[], b: any[]) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return a.every((it, index) => it === b[index]);\n}\n","/**\n * Compare two records with primitive values as the content.\n */\nexport default function isRecordEqual(\n  a: Record<string, any>,\n  b: Record<string, any>\n) {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  return aKeys.every((key) => a[key] === b[key]);\n}\n","import type {\n  DefaultRouterOptions,\n  InitialState,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport type * as React from 'react';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace ReactNavigation {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    interface RootParamList {}\n  }\n}\n\ntype Keyof<T extends {}> = Extract<keyof T, string>;\n\nexport type DefaultNavigatorOptions<\n  ParamList extends ParamListBase,\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = DefaultRouterOptions<Keyof<ParamList>> & {\n  /**\n   * Optional ID for the navigator. Can be used with `navigation.getParent(id)` to refer to a parent.\n   */\n  id?: string;\n  /**\n   * Children React Elements to extract the route configuration from.\n   * Only `Screen`, `Group` and `React.Fragment` are supported as children.\n   */\n  children: React.ReactNode;\n  /**\n   * Event listeners for all the screens in the navigator.\n   */\n  screenListeners?:\n    | ScreenListeners<State, EventMap>\n    | ((props: {\n        route: RouteProp<ParamList>;\n        navigation: any;\n      }) => ScreenListeners<State, EventMap>);\n  /**\n   * Default options for all screens under this navigator.\n   */\n  screenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamList>;\n        navigation: any;\n      }) => ScreenOptions);\n  /**\n   * Default options specified by the navigator.\n   * It receives the custom options in the arguments if a function is specified.\n   */\n  defaultScreenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamList>;\n        navigation: any;\n        options: ScreenOptions;\n      }) => ScreenOptions);\n};\n\nexport type EventMapBase = Record<\n  string,\n  { data?: any; canPreventDefault?: boolean }\n>;\n\nexport type EventMapCore<State extends NavigationState> = {\n  focus: { data: undefined };\n  blur: { data: undefined };\n  state: { data: { state: State } };\n  beforeRemove: { data: { action: NavigationAction }; canPreventDefault: true };\n};\n\nexport type EventArg<\n  EventName extends string,\n  CanPreventDefault extends boolean | undefined = false,\n  Data = undefined\n> = {\n  /**\n   * Type of the event (e.g. `focus`, `blur`)\n   */\n  readonly type: EventName;\n  readonly target?: string;\n} & (CanPreventDefault extends true\n  ? {\n      /**\n       * Whether `event.preventDefault()` was called on this event object.\n       */\n      readonly defaultPrevented: boolean;\n      /**\n       * Prevent the default action which happens on this event.\n       */\n      preventDefault(): void;\n    }\n  : {}) &\n  (undefined extends Data\n    ? { readonly data?: Readonly<Data> }\n    : { readonly data: Readonly<Data> });\n\nexport type EventListenerCallback<\n  EventMap extends EventMapBase,\n  EventName extends keyof EventMap\n> = (\n  e: EventArg<\n    Extract<EventName, string>,\n    EventMap[EventName]['canPreventDefault'],\n    EventMap[EventName]['data']\n  >\n) => void;\n\nexport type EventConsumer<EventMap extends EventMapBase> = {\n  /**\n   * Subscribe to events from the parent navigator.\n   *\n   * @param type Type of the event (e.g. `focus`, `blur`)\n   * @param callback Callback listener which is executed upon receiving the event.\n   */\n  addListener<EventName extends Keyof<EventMap>>(\n    type: EventName,\n    callback: EventListenerCallback<EventMap, EventName>\n  ): () => void;\n  removeListener<EventName extends Keyof<EventMap>>(\n    type: EventName,\n    callback: EventListenerCallback<EventMap, EventName>\n  ): void;\n};\n\nexport type EventEmitter<EventMap extends EventMapBase> = {\n  /**\n   * Emit an event to child screens.\n   *\n   * @param options.type Type of the event (e.g. `focus`, `blur`)\n   * @param [options.data] Optional information regarding the event.\n   * @param [options.target] Key of the target route which should receive the event.\n   * If not specified, all routes receive the event.\n   */\n  emit<EventName extends Keyof<EventMap>>(\n    options: {\n      type: EventName;\n      target?: string;\n    } & (EventMap[EventName]['canPreventDefault'] extends true\n      ? { canPreventDefault: true }\n      : {}) &\n      (undefined extends EventMap[EventName]['data']\n        ? { data?: EventMap[EventName]['data'] }\n        : { data: EventMap[EventName]['data'] })\n  ): EventArg<\n    EventName,\n    EventMap[EventName]['canPreventDefault'],\n    EventMap[EventName]['data']\n  >;\n};\n\nexport class PrivateValueStore<T extends [any, any, any]> {\n  /**\n   * UGLY HACK! DO NOT USE THE TYPE!!!\n   *\n   * TypeScript requires a type to be used to be able to infer it.\n   * The type should exist as its own without any operations such as union.\n   * So we need to figure out a way to store this type in a property.\n   * The problem with a normal property is that it shows up in intelliSense.\n   * Adding private keyword works, but the annotation is stripped away in declaration.\n   * Turns out if we use an empty string, it doesn't show up in intelliSense.\n   */\n  protected ''?: T;\n}\n\ntype NavigationHelpersCommon<\n  ParamList extends ParamListBase,\n  State extends NavigationState = NavigationState\n> = {\n  /**\n   * Dispatch an action or an update function to the router.\n   * The update function will receive the current state,\n   *\n   * @param action Action object or update function.\n   */\n  dispatch(\n    action: NavigationAction | ((state: State) => NavigationAction)\n  ): void;\n\n  /**\n   * Navigate to a route in current navigation tree.\n   *\n   * @param name Name of the route to navigate to.\n   * @param [params] Params object for the route.\n   */\n  navigate<RouteName extends keyof ParamList>(\n    ...args: // this first condition allows us to iterate over a union type\n    // This is to avoid getting a union of all the params from `ParamList[RouteName]`,\n    // which will get our types all mixed up if a union RouteName is passed in.\n    RouteName extends unknown\n      ? // This condition checks if the params are optional,\n        // which means it's either undefined or a union with undefined\n        undefined extends ParamList[RouteName]\n        ?\n            | [screen: RouteName] // if the params are optional, we don't have to provide it\n            | [screen: RouteName, params: ParamList[RouteName]]\n        : [screen: RouteName, params: ParamList[RouteName]]\n      : never\n  ): void;\n\n  /**\n   * Navigate to a route in current navigation tree.\n   *\n   * @param route Object with `key` or `name` for the route to navigate to, and a `params` object.\n   */\n  navigate<RouteName extends keyof ParamList>(\n    options: RouteName extends unknown\n      ?\n          | { key: string; params?: ParamList[RouteName]; merge?: boolean }\n          | {\n              name: RouteName;\n              key?: string;\n              params: ParamList[RouteName];\n              merge?: boolean;\n            }\n      : never\n  ): void;\n\n  /**\n   * Reset the navigation state to the provided state.\n   *\n   * @param state Navigation state object.\n   */\n  reset(state: PartialState<State> | State): void;\n\n  /**\n   * Go back to the previous route in history.\n   */\n  goBack(): void;\n\n  /**\n   * Check if the screen is focused. The method returns `true` if focused, `false` otherwise.\n   * Note that this method doesn't re-render screen when the focus changes. So don't use it in `render`.\n   * To get notified of focus changes, use `addListener('focus', cb)` and `addListener('blur', cb)`.\n   * To conditionally render content based on focus state, use the `useIsFocused` hook.\n   */\n  isFocused(): boolean;\n\n  /**\n   * Check if dispatching back action will be handled by navigation.\n   * Note that this method doesn't re-render screen when the result changes. So don't use it in `render`.\n   */\n  canGoBack(): boolean;\n\n  /**\n   * Returns the name of the navigator specified in the `name` prop.\n   * If no name is specified, returns `undefined`.\n   */\n  getId(): string | undefined;\n\n  /**\n   * Returns the navigation helpers from a parent navigator based on the ID.\n   * If an ID is provided, the navigation helper from the parent navigator with matching ID (including current) will be returned.\n   * If no ID is provided, the navigation helper from the immediate parent navigator will be returned.\n   *\n   * @param id Optional ID of a parent navigator.\n   */\n  getParent<T = NavigationHelpers<ParamListBase> | undefined>(id?: string): T;\n\n  /**\n   * Returns the navigator's state.\n   * Note that this method doesn't re-render screen when the result changes. So don't use it in `render`.\n   */\n  getState(): State;\n} & PrivateValueStore<[ParamList, unknown, unknown]>;\n\nexport type NavigationHelpers<\n  ParamList extends ParamListBase,\n  EventMap extends EventMapBase = {}\n> = NavigationHelpersCommon<ParamList> &\n  EventEmitter<EventMap> & {\n    /**\n     * Update the param object for the route.\n     * The new params will be shallow merged with the old one.\n     *\n     * @param params Params object for the current route.\n     */\n    setParams<RouteName extends keyof ParamList>(\n      params: Partial<ParamList[RouteName]>\n    ): void;\n  };\n\nexport type NavigationContainerProps = {\n  /**\n   * Initial navigation state for the child navigators.\n   */\n  initialState?: InitialState;\n  /**\n   * Callback which is called with the latest navigation state when it changes.\n   */\n  onStateChange?: (state: NavigationState | undefined) => void;\n  /**\n   * Callback which is called when an action is not handled.\n   */\n  onUnhandledAction?: (action: NavigationAction) => void;\n  /**\n   * Whether this navigation container should be independent of parent containers.\n   * If this is not set to `true`, this container cannot be nested inside another container.\n   * Setting it to `true` disconnects any children navigators from parent container.\n   */\n  independent?: boolean;\n  /**\n   * Children elements to render.\n   */\n  children: React.ReactNode;\n};\n\nexport type NavigationProp<\n  ParamList extends {},\n  RouteName extends keyof ParamList = Keyof<ParamList>,\n  NavigatorID extends string | undefined = undefined,\n  State extends NavigationState = NavigationState<ParamList>,\n  ScreenOptions extends {} = {},\n  EventMap extends EventMapBase = {}\n> = Omit<NavigationHelpersCommon<ParamList, State>, 'getParent'> & {\n  /**\n   * Returns the navigation prop from a parent navigator based on the ID.\n   * If an ID is provided, the navigation prop from the parent navigator with matching ID (including current) will be returned.\n   * If no ID is provided, the navigation prop from the immediate parent navigator will be returned.\n   *\n   * @param id Optional ID of a parent navigator.\n   */\n  getParent<T = NavigationProp<ParamListBase> | undefined>(id?: NavigatorID): T;\n\n  /**\n   * Update the param object for the route.\n   * The new params will be shallow merged with the old one.\n   *\n   * @param params Params object for the current route.\n   */\n  setParams(\n    params: ParamList[RouteName] extends undefined\n      ? undefined\n      : Partial<ParamList[RouteName]>\n  ): void;\n\n  /**\n   * Update the options for the route.\n   * The options object will be shallow merged with default options object.\n   *\n   * @param options Options object for the route.\n   */\n  setOptions(options: Partial<ScreenOptions>): void;\n} & EventConsumer<EventMap & EventMapCore<State>> &\n  PrivateValueStore<[ParamList, RouteName, EventMap]>;\n\nexport type RouteProp<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList = Keyof<ParamList>\n> = Route<Extract<RouteName, string>, ParamList[RouteName]>;\n\nexport type CompositeNavigationProp<\n  A extends NavigationProp<ParamListBase, string, any, any, any>,\n  B extends NavigationHelpersCommon<ParamListBase, any>\n> = Omit<A & B, keyof NavigationProp<any>> &\n  NavigationProp<\n    /**\n     * Param list from both navigation objects needs to be combined\n     * For example, we should be able to navigate to screens in both A and B\n     */\n    (A extends NavigationHelpersCommon<infer T> ? T : never) &\n      (B extends NavigationHelpersCommon<infer U> ? U : never),\n    /**\n     * The route name should refer to the route name specified in the first type\n     * Ideally it should work for any of them, but it's not possible to infer that way\n     */\n    A extends NavigationProp<any, infer R> ? R : string,\n    /**\n     * ID from both navigation objects needs to be combined for `getParent`\n     */\n    | (A extends NavigationProp<any, any, infer I> ? I : never)\n    | (B extends NavigationProp<any, any, infer J> ? J : never),\n    /**\n     * The type of state should refer to the state specified in the first type\n     */\n    A extends NavigationProp<any, any, any, infer S> ? S : NavigationState,\n    /**\n     * Screen options from both navigation objects needs to be combined\n     * This allows typechecking `setOptions`\n     */\n    (A extends NavigationProp<any, any, any, any, infer O> ? O : {}) &\n      (B extends NavigationProp<any, any, any, any, infer P> ? P : {}),\n    /**\n     * Event consumer config should refer to the config specified in the first type\n     * This allows typechecking `addListener`/`removeListener`\n     */\n    A extends NavigationProp<any, any, any, any, any, infer E> ? E : {}\n  >;\n\nexport type CompositeScreenProps<\n  A extends {\n    navigation: NavigationProp<\n      ParamListBase,\n      string,\n      string | undefined,\n      any,\n      any,\n      any\n    >;\n    route: RouteProp<ParamListBase>;\n  },\n  B extends {\n    navigation: NavigationHelpersCommon<any, any>;\n  }\n> = {\n  navigation: CompositeNavigationProp<A['navigation'], B['navigation']>;\n  route: A['route'];\n};\n\nexport type Descriptor<\n  ScreenOptions extends {},\n  Navigation extends NavigationProp<any, any, any, any, any, any>,\n  Route extends RouteProp<any, any>\n> = {\n  /**\n   * Render the component associated with this route.\n   */\n  render(): JSX.Element;\n\n  /**\n   * Options for the route.\n   */\n  options: ScreenOptions;\n\n  /**\n   * Route object for the screen\n   */\n  route: Route;\n\n  /**\n   * Navigation object for the screen\n   */\n  navigation: Navigation;\n};\n\nexport type ScreenListeners<\n  State extends NavigationState,\n  EventMap extends EventMapBase\n> = Partial<{\n  [EventName in keyof (EventMap & EventMapCore<State>)]: EventListenerCallback<\n    EventMap,\n    EventName\n  >;\n}>;\n\ntype ScreenComponentType<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList\n> =\n  | React.ComponentType<{\n      route: RouteProp<ParamList, RouteName>;\n      navigation: any;\n    }>\n  | React.ComponentType<{}>;\n\nexport type RouteConfigComponent<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList\n> =\n  | {\n      /**\n       * React component to render for this screen.\n       */\n      component: ScreenComponentType<ParamList, RouteName>;\n      getComponent?: never;\n      children?: never;\n    }\n  | {\n      /**\n       * Lazily get a React component to render for this screen.\n       */\n      getComponent: () => ScreenComponentType<ParamList, RouteName>;\n      component?: never;\n      children?: never;\n    }\n  | {\n      /**\n       * Render callback to render content of this screen.\n       */\n      children: (props: {\n        route: RouteProp<ParamList, RouteName>;\n        navigation: any;\n      }) => React.ReactNode;\n      component?: never;\n      getComponent?: never;\n    };\n\nexport type RouteConfig<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList,\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  /**\n   * Optional key for this screen. This doesn't need to be unique.\n   * If the key changes, existing screens with this name will be removed or reset.\n   * Useful when we have some common screens and have conditional rendering.\n   */\n  navigationKey?: string;\n\n  /**\n   * Route name of this screen.\n   */\n  name: RouteName;\n\n  /**\n   * Navigator options for this screen.\n   */\n  options?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamList, RouteName>;\n        navigation: any;\n      }) => ScreenOptions);\n\n  /**\n   * Event listeners for this screen.\n   */\n  listeners?:\n    | ScreenListeners<State, EventMap>\n    | ((props: {\n        route: RouteProp<ParamList, RouteName>;\n        navigation: any;\n      }) => ScreenListeners<State, EventMap>);\n\n  /**\n   * Function to return an unique ID for this screen.\n   * Receives an object with the route params.\n   * For a given screen name, there will always be only one screen corresponding to an ID.\n   * If `undefined` is returned, it acts same as no `getId` being specified.\n   */\n  getId?: ({ params }: { params: ParamList[RouteName] }) => string | undefined;\n\n  /**\n   * Initial params object for the route.\n   */\n  initialParams?: Partial<ParamList[RouteName]>;\n} & RouteConfigComponent<ParamList, RouteName>;\n\nexport type RouteGroupConfig<\n  ParamList extends ParamListBase,\n  ScreenOptions extends {}\n> = {\n  /**\n   * Optional key for the screens in this group.\n   * If the key changes, all existing screens in this group will be removed or reset.\n   */\n  navigationKey?: string;\n\n  /**\n   * Navigator options for this screen.\n   */\n  screenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamList, keyof ParamList>;\n        navigation: any;\n      }) => ScreenOptions);\n  /**\n   * Children React Elements to extract the route configuration from.\n   * Only `Screen`, `Group` and `React.Fragment` are supported as children.\n   */\n  children: React.ReactNode;\n};\n\nexport type NavigationContainerEventMap = {\n  /**\n   * Event which fires when the navigation state changes.\n   */\n  state: {\n    data: {\n      /**\n       * The updated state object after the state change.\n       */\n      state: NavigationState | PartialState<NavigationState> | undefined;\n    };\n  };\n  /**\n   * Event which fires when current options changes.\n   */\n  options: { data: { options: object } };\n  /**\n   * Event which fires when an action is dispatched.\n   * Only intended for debugging purposes, don't use it for app logic.\n   * This event will be emitted before state changes have been applied.\n   */\n  __unsafe_action__: {\n    data: {\n      /**\n       * The action object which was dispatched.\n       */\n      action: NavigationAction;\n      /**\n       * Whether the action was a no-op, i.e. resulted any state changes.\n       */\n      noop: boolean;\n      /**\n       * Stack trace of the action, this will only be available during development.\n       */\n      stack: string | undefined;\n    };\n  };\n};\n\nexport type NavigationContainerRef<ParamList extends {}> =\n  NavigationHelpers<ParamList> &\n    EventConsumer<NavigationContainerEventMap> & {\n      /**\n       * Reset the navigation state of the root navigator to the provided state.\n       *\n       * @param state Navigation state object.\n       */\n      resetRoot(state?: PartialState<NavigationState> | NavigationState): void;\n      /**\n       * Get the rehydrated navigation state of the navigation tree.\n       */\n      getRootState(): NavigationState;\n      /**\n       * Get the currently focused navigation route.\n       */\n      getCurrentRoute(): Route<string> | undefined;\n      /**\n       * Get the currently focused route's options.\n       */\n      getCurrentOptions(): object | undefined;\n      /**\n       * Whether the navigation container is ready to handle actions.\n       */\n      isReady(): boolean;\n    };\n\nexport type NavigationContainerRefWithCurrent<ParamList extends {}> =\n  NavigationContainerRef<ParamList> & {\n    current: NavigationContainerRef<ParamList> | null;\n  };\n\nexport type TypedNavigator<\n  ParamList extends ParamListBase,\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n  Navigator extends React.ComponentType<any>\n> = {\n  /**\n   * Navigator component which manages the child screens.\n   */\n  Navigator: React.ComponentType<\n    Omit<\n      React.ComponentProps<Navigator>,\n      keyof DefaultNavigatorOptions<any, any, any, any>\n    > &\n      DefaultNavigatorOptions<ParamList, State, ScreenOptions, EventMap>\n  >;\n  /**\n   * Component used for grouping multiple route configuration.\n   */\n  Group: React.ComponentType<RouteGroupConfig<ParamList, ScreenOptions>>;\n  /**\n   * Component used for specifying route configuration.\n   */\n  Screen: <RouteName extends keyof ParamList>(\n    _: RouteConfig<ParamList, RouteName, State, ScreenOptions, EventMap>\n  ) => null;\n};\n\nexport type NavigatorScreenParams<\n  ParamList,\n  State extends NavigationState = NavigationState\n> =\n  | {\n      screen?: never;\n      params?: never;\n      initial?: never;\n      path?: string;\n      state: PartialState<State> | State | undefined;\n    }\n  | {\n      [RouteName in keyof ParamList]: undefined extends ParamList[RouteName]\n        ? {\n            screen: RouteName;\n            params?: ParamList[RouteName];\n            initial?: boolean;\n            path?: string;\n            state?: never;\n          }\n        : {\n            screen: RouteName;\n            params: ParamList[RouteName];\n            initial?: boolean;\n            path?: string;\n            state?: never;\n          };\n    }[keyof ParamList];\n\nexport type PathConfig<ParamList extends {}> = {\n  path?: string;\n  exact?: boolean;\n  parse?: Record<string, (value: string) => any>;\n  stringify?: Record<string, (value: any) => string>;\n  screens?: PathConfigMap<ParamList>;\n  initialRouteName?: keyof ParamList;\n};\n\nexport type PathConfigMap<ParamList extends {}> = {\n  [RouteName in keyof ParamList]?: NonNullable<\n    ParamList[RouteName]\n  > extends NavigatorScreenParams<infer T, any>\n    ? string | PathConfig<T>\n    : string | Omit<PathConfig<{}>, 'screens' | 'initialRouteName'>;\n};\n","import * as React from 'react';\n\nimport type { ListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add action listeners.\n */\nexport default function useChildListeners() {\n  const { current: listeners } = React.useRef<{\n    [K in keyof ListenerMap]: ListenerMap[K][];\n  }>({\n    action: [],\n    focus: [],\n  });\n\n  const addListener = React.useCallback(\n    <T extends keyof ListenerMap>(type: T, listener: ListenerMap[T]) => {\n      listeners[type].push(listener);\n\n      let removed = false;\n      return () => {\n        const index = listeners[type].indexOf(listener);\n\n        if (!removed && index > -1) {\n          removed = true;\n          listeners[type].splice(index, 1);\n        }\n      };\n    },\n    [listeners]\n  );\n\n  return {\n    listeners,\n    addListener,\n  };\n}\n","import * as React from 'react';\n\ntype Render = (children: React.ReactNode) => JSX.Element;\n\ntype Props = {\n  render: Render;\n  children: React.ReactNode;\n};\n\nconst NavigationContent = ({ render, children }: Props) => {\n  return render(children);\n};\n\nexport default function useComponent(render: Render) {\n  const renderRef = React.useRef<Render | null>(render);\n\n  // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n  renderRef.current = render;\n\n  React.useEffect(() => {\n    renderRef.current = null;\n  });\n\n  return React.useRef(({ children }: { children: React.ReactNode }) => {\n    const render = renderRef.current;\n\n    if (render === null) {\n      throw new Error(\n        'The returned component must be rendered in the same render phase as the hook.'\n      );\n    }\n\n    return <NavigationContent render={render}>{children}</NavigationContent>;\n  }).current;\n}\n","import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport CurrentRenderContext from './CurrentRenderContext';\nimport type {\n  Descriptor,\n  NavigationHelpers,\n  NavigationProp,\n  RouteProp,\n} from './types';\n\ntype Options = {\n  state: NavigationState;\n  navigation: NavigationHelpers<ParamListBase>;\n  descriptors: Record<\n    string,\n    Descriptor<object, NavigationProp<ParamListBase>, RouteProp<ParamListBase>>\n  >;\n};\n\n/**\n * Write the current options, so that server renderer can get current values\n * Mutating values like this is not safe in async mode, but it doesn't apply to SSR\n */\nexport default function useCurrentRender({\n  state,\n  navigation,\n  descriptors,\n}: Options) {\n  const current = React.useContext(CurrentRenderContext);\n\n  if (current && navigation.isFocused()) {\n    current.options = descriptors[state.routes[state.index].key].options;\n  }\n}\n","import type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  AddKeyedListener,\n  AddListener,\n} from './NavigationBuilderContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport SceneView from './SceneView';\nimport type {\n  Descriptor,\n  EventMapBase,\n  NavigationHelpers,\n  NavigationProp,\n  RouteConfig,\n  RouteProp,\n} from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useNavigationCache from './useNavigationCache';\nimport useRouteCache from './useRouteCache';\n\nexport type ScreenConfigWithParent<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  keys: (string | undefined)[];\n  options: (ScreenOptionsOrCallback<ScreenOptions> | undefined)[] | undefined;\n  props: RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>;\n};\n\ntype ScreenOptionsOrCallback<ScreenOptions extends {}> =\n  | ScreenOptions\n  | ((props: {\n      route: RouteProp<ParamListBase, string>;\n      navigation: any;\n    }) => ScreenOptions);\n\ntype Options<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  state: State;\n  screens: Record<\n    string,\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>\n  >;\n  navigation: NavigationHelpers<ParamListBase>;\n  screenOptions?: ScreenOptionsOrCallback<ScreenOptions>;\n  defaultScreenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamListBase>;\n        navigation: any;\n        options: ScreenOptions;\n      }) => ScreenOptions);\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  setState: (state: State) => void;\n  addListener: AddListener;\n  addKeyedListener: AddKeyedListener;\n  onRouteFocus: (key: string) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport default function useDescriptors<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  state,\n  screens,\n  navigation,\n  screenOptions,\n  defaultScreenOptions,\n  onAction,\n  getState,\n  setState,\n  addListener,\n  addKeyedListener,\n  onRouteFocus,\n  router,\n  emitter,\n}: Options<State, ScreenOptions, EventMap>) {\n  const [options, setOptions] = React.useState<Record<string, object>>({});\n  const { onDispatchAction, onOptionsChange, stackRef } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  const context = React.useMemo(\n    () => ({\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    }),\n    [\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    ]\n  );\n\n  const navigations = useNavigationCache<State, ScreenOptions, EventMap>({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter,\n  });\n\n  const routes = useRouteCache(state.routes);\n\n  return routes.reduce<\n    Record<\n      string,\n      Descriptor<\n        ScreenOptions,\n        NavigationProp<\n          ParamListBase,\n          string,\n          string | undefined,\n          State,\n          ScreenOptions,\n          EventMap\n        > &\n          ActionHelpers,\n        RouteProp<ParamListBase>\n      >\n    >\n  >((acc, route, i) => {\n    const config = screens[route.name];\n    const screen = config.props;\n    const navigation = navigations[route.key];\n\n    const optionsList = [\n      // The default `screenOptions` passed to the navigator\n      screenOptions,\n      // The `screenOptions` props passed to `Group` elements\n      ...((config.options\n        ? config.options.filter(Boolean)\n        : []) as ScreenOptionsOrCallback<ScreenOptions>[]),\n      // The `options` prop passed to `Screen` elements,\n      screen.options,\n      // The options set via `navigation.setOptions`\n      options[route.key],\n    ];\n\n    const customOptions = optionsList.reduce<ScreenOptions>(\n      (acc, curr) =>\n        Object.assign(\n          acc,\n          typeof curr !== 'function' ? curr : curr({ route, navigation })\n        ),\n      {} as ScreenOptions\n    );\n\n    const mergedOptions = {\n      ...(typeof defaultScreenOptions === 'function'\n        ? // @ts-expect-error: ts gives incorrect error here\n          defaultScreenOptions({\n            route,\n            navigation,\n            options: customOptions,\n          })\n        : defaultScreenOptions),\n      ...customOptions,\n    };\n\n    const clearOptions = () =>\n      setOptions((o) => {\n        if (route.key in o) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { [route.key]: _, ...rest } = o;\n          return rest;\n        }\n\n        return o;\n      });\n\n    acc[route.key] = {\n      route,\n      // @ts-expect-error: it's missing action helpers, fix later\n      navigation,\n      render() {\n        return (\n          <NavigationBuilderContext.Provider key={route.key} value={context}>\n            <NavigationContext.Provider value={navigation}>\n              <NavigationRouteContext.Provider value={route}>\n                <SceneView\n                  navigation={navigation}\n                  route={route}\n                  screen={screen}\n                  routeState={state.routes[i].state}\n                  getState={getState}\n                  setState={setState}\n                  options={mergedOptions}\n                  clearOptions={clearOptions}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          </NavigationBuilderContext.Provider>\n        );\n      },\n      options: mergedOptions as ScreenOptions,\n    };\n\n    return acc;\n  }, {});\n}\n","import * as React from 'react';\n\nimport type { EventArg, EventConsumer, EventEmitter } from './types';\n\nexport type NavigationEventEmitter<T extends Record<string, any>> =\n  EventEmitter<T> & {\n    create: (target: string) => EventConsumer<T>;\n  };\n\ntype Listeners = ((e: any) => void)[];\n\n/**\n * Hook to manage the event system used by the navigator to notify screens of various events.\n */\nexport default function useEventEmitter<T extends Record<string, any>>(\n  listen?: (e: any) => void\n): NavigationEventEmitter<T> {\n  const listenRef = React.useRef(listen);\n\n  React.useEffect(() => {\n    listenRef.current = listen;\n  });\n\n  const listeners = React.useRef<Record<string, Record<string, Listeners>>>(\n    Object.create(null)\n  );\n\n  const create = React.useCallback((target: string) => {\n    const removeListener = (type: string, callback: (data: any) => void) => {\n      const callbacks = listeners.current[type]\n        ? listeners.current[type][target]\n        : undefined;\n\n      if (!callbacks) {\n        return;\n      }\n\n      const index = callbacks.indexOf(callback);\n\n      if (index > -1) {\n        callbacks.splice(index, 1);\n      }\n    };\n\n    const addListener = (type: string, callback: (data: any) => void) => {\n      listeners.current[type] = listeners.current[type] || {};\n      listeners.current[type][target] = listeners.current[type][target] || [];\n      listeners.current[type][target].push(callback);\n\n      let removed = false;\n      return () => {\n        // Prevent removing other listeners when unsubscribing same listener multiple times\n        if (!removed) {\n          removed = true;\n          removeListener(type, callback);\n        }\n      };\n    };\n\n    return {\n      addListener,\n      removeListener,\n    };\n  }, []);\n\n  const emit = React.useCallback(\n    ({\n      type,\n      data,\n      target,\n      canPreventDefault,\n    }: {\n      type: string;\n      data?: any;\n      target?: string;\n      canPreventDefault?: boolean;\n    }) => {\n      const items = listeners.current[type] || {};\n\n      // Copy the current list of callbacks in case they are mutated during execution\n      const callbacks =\n        target !== undefined\n          ? items[target]?.slice()\n          : ([] as Listeners)\n              .concat(...Object.keys(items).map((t) => items[t]))\n              .filter((cb, i, self) => self.lastIndexOf(cb) === i);\n\n      const event: EventArg<any, any, any> = {\n        get type() {\n          return type;\n        },\n      };\n\n      if (target !== undefined) {\n        Object.defineProperty(event, 'target', {\n          enumerable: true,\n          get() {\n            return target;\n          },\n        });\n      }\n\n      if (data !== undefined) {\n        Object.defineProperty(event, 'data', {\n          enumerable: true,\n          get() {\n            return data;\n          },\n        });\n      }\n\n      if (canPreventDefault) {\n        let defaultPrevented = false;\n\n        Object.defineProperties(event, {\n          defaultPrevented: {\n            enumerable: true,\n            get() {\n              return defaultPrevented;\n            },\n          },\n          preventDefault: {\n            enumerable: true,\n            value() {\n              defaultPrevented = true;\n            },\n          },\n        });\n      }\n\n      listenRef.current?.(event);\n\n      callbacks?.forEach((cb) => cb(event));\n\n      return event as any;\n    },\n    []\n  );\n\n  return React.useMemo(() => ({ create, emit }), [create, emit]);\n}\n","import * as React from 'react';\n\nimport useNavigation from './useNavigation';\n\ntype EffectCallback = () => undefined | void | (() => void);\n\n/**\n * Hook to run an effect in a focused screen, similar to `React.useEffect`.\n * This can be used to perform side-effects such as fetching data or subscribing to events.\n * The passed callback should be wrapped in `React.useCallback` to avoid running the effect too often.\n *\n * @param callback Memoized callback containing the effect, should optionally return a cleanup function.\n */\nexport default function useFocusEffect(effect: EffectCallback) {\n  const navigation = useNavigation();\n\n  if (arguments[1] !== undefined) {\n    const message =\n      \"You passed a second argument to 'useFocusEffect', but it only accepts one argument. \" +\n      \"If you want to pass a dependency array, you can use 'React.useCallback':\\n\\n\" +\n      'useFocusEffect(\\n' +\n      '  React.useCallback(() => {\\n' +\n      '    // Your code here\\n' +\n      '  }, [depA, depB])\\n' +\n      ');\\n\\n' +\n      'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n\n    console.error(message);\n  }\n\n  React.useEffect(() => {\n    let isFocused = false;\n    let cleanup: undefined | void | (() => void);\n\n    const callback = () => {\n      const destroy = effect();\n\n      if (destroy === undefined || typeof destroy === 'function') {\n        return destroy;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        let message =\n          'An effect function must not return anything besides a function, which is used for clean-up.';\n\n        if (destroy === null) {\n          message +=\n            \" You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).\";\n        } else if (typeof (destroy as any).then === 'function') {\n          message +=\n            \"\\n\\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. \" +\n            'Instead, write the async function inside your effect ' +\n            'and call it immediately:\\n\\n' +\n            'useFocusEffect(\\n' +\n            '  React.useCallback(() => {\\n' +\n            '    async function fetchData() {\\n' +\n            '      // You can await here\\n' +\n            '      const response = await MyAPI.getData(someId);\\n' +\n            '      // ...\\n' +\n            '    }\\n\\n' +\n            '    fetchData();\\n' +\n            '  }, [someId])\\n' +\n            ');\\n\\n' +\n            'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n        } else {\n          message += ` You returned '${JSON.stringify(destroy)}'.`;\n        }\n\n        console.error(message);\n      }\n    };\n\n    // We need to run the effect on intial render/dep changes if the screen is focused\n    if (navigation.isFocused()) {\n      cleanup = callback();\n      isFocused = true;\n    }\n\n    const unsubscribeFocus = navigation.addListener('focus', () => {\n      // If callback was already called for focus, avoid calling it again\n      // The focus event may also fire on intial render, so we guard against runing the effect twice\n      if (isFocused) {\n        return;\n      }\n\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = callback();\n      isFocused = true;\n    });\n\n    const unsubscribeBlur = navigation.addListener('blur', () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = undefined;\n      isFocused = false;\n    });\n\n    return () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      unsubscribeFocus();\n      unsubscribeBlur();\n    };\n  }, [effect, navigation]);\n}\n","import type { NavigationState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationContext from './NavigationContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options<State extends NavigationState> = {\n  state: State;\n  emitter: NavigationEventEmitter<EventMapCore<State>>;\n};\n\n/**\n * Hook to take care of emitting `focus` and `blur` events.\n */\nexport default function useFocusEvents<State extends NavigationState>({\n  state,\n  emitter,\n}: Options<State>) {\n  const navigation = React.useContext(NavigationContext);\n  const lastFocusedKeyRef = React.useRef<string | undefined>();\n\n  const currentFocusedKey = state.routes[state.index].key;\n\n  // When the parent screen changes its focus state, we also need to change child's focus\n  // Coz the child screen can't be focused if the parent screen is out of focus\n  React.useEffect(\n    () =>\n      navigation?.addListener('focus', () => {\n        lastFocusedKeyRef.current = currentFocusedKey;\n        emitter.emit({ type: 'focus', target: currentFocusedKey });\n      }),\n    [currentFocusedKey, emitter, navigation]\n  );\n\n  React.useEffect(\n    () =>\n      navigation?.addListener('blur', () => {\n        lastFocusedKeyRef.current = undefined;\n        emitter.emit({ type: 'blur', target: currentFocusedKey });\n      }),\n    [currentFocusedKey, emitter, navigation]\n  );\n\n  React.useEffect(() => {\n    const lastFocusedKey = lastFocusedKeyRef.current;\n\n    lastFocusedKeyRef.current = currentFocusedKey;\n\n    // We wouldn't have `lastFocusedKey` on initial mount\n    // Fire focus event for the current route on mount if there's no parent navigator\n    if (lastFocusedKey === undefined && !navigation) {\n      emitter.emit({ type: 'focus', target: currentFocusedKey });\n    }\n\n    // We should only emit events when the focused key changed and navigator is focused\n    // When navigator is not focused, screens inside shouldn't receive focused status either\n    if (\n      lastFocusedKey === currentFocusedKey ||\n      !(navigation ? navigation.isFocused() : true)\n    ) {\n      return;\n    }\n\n    if (lastFocusedKey === undefined) {\n      // Only fire events after initial mount\n      return;\n    }\n\n    emitter.emit({ type: 'blur', target: lastFocusedKey });\n    emitter.emit({ type: 'focus', target: currentFocusedKey });\n  }, [currentFocusedKey, emitter, navigation]);\n}\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  FocusedNavigationCallback,\n  FocusedNavigationListener,\n} from './NavigationBuilderContext';\nimport type { NavigationHelpers } from './types';\n\ntype Options = {\n  navigation: NavigationHelpers<ParamListBase>;\n  focusedListeners: FocusedNavigationListener[];\n};\n\n/**\n * Hook for passing focus callback to children\n */\nexport default function useFocusedListenersChildrenAdapter({\n  navigation,\n  focusedListeners,\n}: Options) {\n  const { addListener } = React.useContext(NavigationBuilderContext);\n\n  const listener = React.useCallback(\n    (callback: FocusedNavigationCallback<any>) => {\n      if (navigation.isFocused()) {\n        for (const listener of focusedListeners) {\n          const { handled, result } = listener(callback);\n\n          if (handled) {\n            return { handled, result };\n          }\n        }\n\n        return { handled: true, result: callback(navigation) };\n      } else {\n        return { handled: false, result: null };\n      }\n    },\n    [focusedListeners, navigation]\n  );\n\n  React.useEffect(\n    () => addListener?.('focus', listener),\n    [addListener, listener]\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport useNavigation from './useNavigation';\n\n/**\n * Hook to get the current focus state of the screen. Returns a `true` if screen is focused, otherwise `false`.\n * This can be used if a component needs to render something based on the focus state.\n */\nexport default function useIsFocused(): boolean {\n  const navigation = useNavigation();\n  const [isFocused, setIsFocused] = useState(navigation.isFocused);\n\n  const valueToReturn = navigation.isFocused();\n\n  if (isFocused !== valueToReturn) {\n    // If the value has changed since the last render, we need to update it.\n    // This could happen if we missed an update from the event listeners during re-render.\n    // React will process this update immediately, so the old subscription value won't be committed.\n    // It is still nice to avoid returning a mismatched value though, so let's override the return value.\n    // This is the same logic as in https://github.com/facebook/react/tree/master/packages/use-subscription\n    setIsFocused(valueToReturn);\n  }\n\n  React.useEffect(() => {\n    const unsubscribeFocus = navigation.addListener('focus', () =>\n      setIsFocused(true)\n    );\n\n    const unsubscribeBlur = navigation.addListener('blur', () =>\n      setIsFocused(false)\n    );\n\n    return () => {\n      unsubscribeFocus();\n      unsubscribeBlur();\n    };\n  }, [navigation]);\n\n  React.useDebugValue(valueToReturn);\n\n  return valueToReturn;\n}\n","import * as React from 'react';\n\nimport type { KeyedListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\nexport default function useKeyedChildListeners() {\n  const { current: keyedListeners } = React.useRef<{\n    [K in keyof KeyedListenerMap]: Record<\n      string,\n      KeyedListenerMap[K] | undefined\n    >;\n  }>(\n    Object.assign(Object.create(null), {\n      getState: {},\n      beforeRemove: {},\n    })\n  );\n\n  const addKeyedListener = React.useCallback(\n    <T extends keyof KeyedListenerMap>(\n      type: T,\n      key: string,\n      listener: KeyedListenerMap[T]\n    ) => {\n      // @ts-expect-error: according to ref stated above you can use `key` to index type\n      keyedListeners[type][key] = listener;\n\n      return () => {\n        // @ts-expect-error: according to ref stated above you can use `key` to index type\n        keyedListeners[type][key] = undefined;\n      };\n    },\n    [keyedListeners]\n  );\n\n  return {\n    keyedListeners,\n    addKeyedListener,\n  };\n}\n","import * as React from 'react';\n\nimport NavigationContainerRefContext from './NavigationContainerRefContext';\nimport NavigationContext from './NavigationContext';\nimport type { NavigationProp } from './types';\n\n/**\n * Hook to access the navigation prop of the parent screen anywhere.\n *\n * @returns Navigation prop of the parent screen.\n */\nexport default function useNavigation<\n  T = NavigationProp<ReactNavigation.RootParamList>\n>(): T {\n  const root = React.useContext(NavigationContainerRefContext);\n  const navigation = React.useContext(NavigationContext);\n\n  if (navigation === undefined && root === undefined) {\n    throw new Error(\n      \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n    );\n  }\n\n  // FIXME: Figure out a better way to do this\n  return (navigation ?? root) as unknown as T;\n}\n","import {\n  CommonActions,\n  DefaultRouterOptions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n  RouterConfigOptions,\n  RouterFactory,\n} from '@react-navigation/routers';\nimport * as React from 'react';\nimport { isValidElementType } from 'react-is';\n\nimport Group from './Group';\nimport isArrayEqual from './isArrayEqual';\nimport isRecordEqual from './isRecordEqual';\nimport NavigationHelpersContext from './NavigationHelpersContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport PreventRemoveProvider from './PreventRemoveProvider';\nimport Screen from './Screen';\nimport {\n  DefaultNavigatorOptions,\n  EventMapBase,\n  EventMapCore,\n  NavigatorScreenParams,\n  PrivateValueStore,\n  RouteConfig,\n} from './types';\nimport useChildListeners from './useChildListeners';\nimport useComponent from './useComponent';\nimport useCurrentRender from './useCurrentRender';\nimport useDescriptors, { ScreenConfigWithParent } from './useDescriptors';\nimport useEventEmitter from './useEventEmitter';\nimport useFocusedListenersChildrenAdapter from './useFocusedListenersChildrenAdapter';\nimport useFocusEvents from './useFocusEvents';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useNavigationHelpers from './useNavigationHelpers';\nimport useOnAction from './useOnAction';\nimport useOnGetState from './useOnGetState';\nimport useOnRouteFocus from './useOnRouteFocus';\nimport useRegisterNavigator from './useRegisterNavigator';\nimport useScheduleUpdate from './useScheduleUpdate';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype NavigatorRoute<State extends NavigationState> = {\n  key: string;\n  params?: NavigatorScreenParams<ParamListBase, State>;\n};\n\nconst isValidKey = (key: unknown) =>\n  key === undefined || (typeof key === 'string' && key !== '');\n\n/**\n * Extract route config object from React children elements.\n *\n * @param children React Elements to extract the config from.\n */\nconst getRouteConfigsFromChildren = <\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>(\n  children: React.ReactNode,\n  groupKey?: string,\n  groupOptions?: ScreenConfigWithParent<\n    State,\n    ScreenOptions,\n    EventMap\n  >['options']\n) => {\n  const configs = React.Children.toArray(children).reduce<\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>[]\n  >((acc, child) => {\n    if (React.isValidElement(child)) {\n      if (child.type === Screen) {\n        // We can only extract the config from `Screen` elements\n        // If something else was rendered, it's probably a bug\n\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the screen '${\n              child.props.name\n            }'. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        acc.push({\n          keys: [groupKey, child.props.navigationKey],\n          options: groupOptions,\n          props: child.props as RouteConfig<\n            ParamListBase,\n            string,\n            State,\n            ScreenOptions,\n            EventMap\n          >,\n        });\n        return acc;\n      }\n\n      if (child.type === React.Fragment || child.type === Group) {\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the group. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        // When we encounter a fragment or group, we need to dive into its children to extract the configs\n        // This is handy to conditionally define a group of screens\n        acc.push(\n          ...getRouteConfigsFromChildren<State, ScreenOptions, EventMap>(\n            child.props.children,\n            child.props.navigationKey,\n            child.type !== Group\n              ? groupOptions\n              : groupOptions != null\n              ? [...groupOptions, child.props.screenOptions]\n              : [child.props.screenOptions]\n          )\n        );\n        return acc;\n      }\n    }\n\n    throw new Error(\n      `A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${\n        React.isValidElement(child)\n          ? `'${\n              typeof child.type === 'string' ? child.type : child.type?.name\n            }'${\n              child.props?.name ? ` for the screen '${child.props.name}'` : ''\n            }`\n          : typeof child === 'object'\n          ? JSON.stringify(child)\n          : `'${String(child)}'`\n      }). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`\n    );\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    configs.forEach((config) => {\n      const { name, children, component, getComponent } = config.props;\n\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\n          `Got an invalid name (${JSON.stringify(\n            name\n          )}) for the screen. It must be a non-empty string.`\n        );\n      }\n\n      if (\n        children != null ||\n        component !== undefined ||\n        getComponent !== undefined\n      ) {\n        if (children != null && component !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (component !== undefined && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && typeof children !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`\n          );\n        }\n\n        if (component !== undefined && !isValidElementType(component)) {\n          throw new Error(\n            `Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`\n          );\n        }\n\n        if (getComponent !== undefined && typeof getComponent !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`\n          );\n        }\n\n        if (typeof component === 'function') {\n          if (component.name === 'component') {\n            // Inline anonymous functions passed in the `component` prop will have the name of the prop\n            // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n            // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n            console.warn(\n              `Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`\n            );\n          } else if (/^[a-z]/.test(component.name)) {\n            console.warn(\n              `Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`\n            );\n          }\n        }\n      } else {\n        throw new Error(\n          `Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`\n        );\n      }\n    });\n  }\n\n  return configs;\n};\n\n/**\n * Hook for building navigators.\n *\n * @param createRouter Factory method which returns router object.\n * @param options Options object containing `children` and additional options for the router.\n * @returns An object containing `state`, `navigation`, `descriptors` objects.\n */\nexport default function useNavigationBuilder<\n  State extends NavigationState,\n  RouterOptions extends DefaultRouterOptions,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n>(\n  createRouter: RouterFactory<State, any, RouterOptions>,\n  options: DefaultNavigatorOptions<\n    ParamListBase,\n    State,\n    ScreenOptions,\n    EventMap\n  > &\n    RouterOptions\n) {\n  const navigatorKey = useRegisterNavigator();\n\n  const route = React.useContext(NavigationRouteContext) as\n    | NavigatorRoute<State>\n    | undefined;\n\n  const { children, screenListeners, ...rest } = options;\n  const { current: router } = React.useRef<Router<State, any>>(\n    createRouter({\n      ...(rest as unknown as RouterOptions),\n      ...(route?.params &&\n      route.params.state == null &&\n      route.params.initial !== false &&\n      typeof route.params.screen === 'string'\n        ? { initialRouteName: route.params.screen }\n        : null),\n    })\n  );\n\n  const routeConfigs = getRouteConfigsFromChildren<\n    State,\n    ScreenOptions,\n    EventMap\n  >(children);\n\n  const screens = routeConfigs.reduce<\n    Record<string, ScreenConfigWithParent<State, ScreenOptions, EventMap>>\n  >((acc, config) => {\n    if (config.props.name in acc) {\n      throw new Error(\n        `A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`\n      );\n    }\n\n    acc[config.props.name] = config;\n    return acc;\n  }, {});\n\n  const routeNames = routeConfigs.map((config) => config.props.name);\n  const routeKeyList = routeNames.reduce<Record<string, React.Key | undefined>>(\n    (acc, curr) => {\n      acc[curr] = screens[curr].keys.map((key) => key ?? '').join(':');\n      return acc;\n    },\n    {}\n  );\n  const routeParamList = routeNames.reduce<Record<string, object | undefined>>(\n    (acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    },\n    {}\n  );\n  const routeGetIdList = routeNames.reduce<\n    RouterConfigOptions['routeGetIdList']\n  >(\n    (acc, curr) =>\n      Object.assign(acc, {\n        [curr]: screens[curr].props.getId,\n      }),\n    {}\n  );\n\n  if (!routeNames.length) {\n    throw new Error(\n      \"Couldn't find any screens for the navigator. Have you defined any screens as its children?\"\n    );\n  }\n\n  const isStateValid = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState>) =>\n      state.type === undefined || state.type === router.type,\n    [router.type]\n  );\n\n  const isStateInitialized = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) =>\n      state !== undefined && state.stale === false && isStateValid(state),\n    [isStateValid]\n  );\n\n  const {\n    state: currentState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    setKey,\n    getKey,\n    getIsInitial,\n  } = React.useContext(NavigationStateContext);\n\n  const stateCleanedUp = React.useRef(false);\n\n  const cleanUpState = React.useCallback(() => {\n    setCurrentState(undefined);\n    stateCleanedUp.current = true;\n  }, [setCurrentState]);\n\n  const setState = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    },\n    [setCurrentState]\n  );\n\n  const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n    const initialRouteParamList = routeNames.reduce<\n      Record<string, object | undefined>\n    >((acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      const initialParamsFromParams =\n        route?.params?.state == null &&\n        route?.params?.initial !== false &&\n        route?.params?.screen === curr\n          ? route.params.params\n          : undefined;\n\n      acc[curr] =\n        initialParams !== undefined || initialParamsFromParams !== undefined\n          ? {\n              ...initialParams,\n              ...initialParamsFromParams,\n            }\n          : undefined;\n\n      return acc;\n    }, {});\n\n    // If the current state isn't initialized on first render, we initialize it\n    // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n    // Otherwise assume that the state was provided as initial state\n    // So we need to rehydrate it to make it usable\n    if (\n      (currentState === undefined || !isStateValid(currentState)) &&\n      route?.params?.state == null\n    ) {\n      return [\n        router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList,\n        }),\n        true,\n      ];\n    } else {\n      return [\n        router.getRehydratedState(\n          route?.params?.state ?? (currentState as PartialState<State>),\n          {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList,\n          }\n        ),\n        false,\n      ];\n    }\n    // We explicitly don't include routeNames, route.params etc. in the dep list\n    // below. We want to avoid forcing a new state to be calculated in those cases\n    // Instead, we handle changes to these in the nextState code below. Note\n    // that some changes to routeConfigs are explicitly ignored, such as changes\n    // to initialParams\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentState, router, isStateValid]);\n\n  const previousRouteKeyListRef = React.useRef(routeKeyList);\n\n  React.useEffect(() => {\n    previousRouteKeyListRef.current = routeKeyList;\n  });\n\n  const previousRouteKeyList = previousRouteKeyListRef.current;\n\n  let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initalized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedState as State);\n\n  let nextState: State = state;\n\n  if (\n    !isArrayEqual(state.routeNames, routeNames) ||\n    !isRecordEqual(routeKeyList, previousRouteKeyList)\n  ) {\n    // When the list of route names change, the router should handle it to remove invalid routes\n    nextState = router.getStateForRouteNamesChange(state, {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n      routeKeyChanges: Object.keys(routeKeyList).filter(\n        (name) =>\n          previousRouteKeyList.hasOwnProperty(name) &&\n          routeKeyList[name] !== previousRouteKeyList[name]\n      ),\n    });\n  }\n\n  const previousNestedParamsRef = React.useRef(route?.params);\n\n  React.useEffect(() => {\n    previousNestedParamsRef.current = route?.params;\n  }, [route?.params]);\n\n  if (route?.params) {\n    const previousParams = previousNestedParamsRef.current;\n\n    let action: CommonActions.Action | undefined;\n\n    if (\n      typeof route.params.state === 'object' &&\n      route.params.state != null &&\n      route.params !== previousParams\n    ) {\n      // If the route was updated with new state, we should reset to it\n      action = CommonActions.reset(route.params.state);\n    } else if (\n      typeof route.params.screen === 'string' &&\n      ((route.params.initial === false && isFirstStateInitialization) ||\n        route.params !== previousParams)\n    ) {\n      // If the route was updated with new screen name and/or params, we should navigate there\n      action = CommonActions.navigate({\n        name: route.params.screen,\n        params: route.params.params,\n        path: route.params.path,\n      });\n    }\n\n    // The update should be limited to current navigator only, so we call the router manually\n    const updatedState = action\n      ? router.getStateForAction(nextState, action, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n        })\n      : null;\n\n    nextState =\n      updatedState !== null\n        ? router.getRehydratedState(updatedState, {\n            routeNames,\n            routeParamList,\n            routeGetIdList,\n          })\n        : nextState;\n  }\n\n  const shouldUpdate = state !== nextState;\n\n  useScheduleUpdate(() => {\n    if (shouldUpdate) {\n      // If the state needs to be updated, we'll schedule an update\n      setState(nextState);\n    }\n  });\n\n  // The up-to-date state will come in next render, but we don't need to wait for it\n  // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n  // So we override the state object we return to use the latest state as soon as possible\n  state = nextState;\n\n  React.useEffect(() => {\n    setKey(navigatorKey);\n\n    if (!getIsInitial()) {\n      // If it's not initial render, we need to update the state\n      // This will make sure that our container gets notifier of state changes due to new mounts\n      // This is necessary for proper screen tracking, URL updates etc.\n      setState(nextState);\n    }\n\n    return () => {\n      // We need to clean up state for this navigator on unmount\n      // We do it in a timeout because we need to detect if another navigator mounted in the meantime\n      // For example, if another navigator has started rendering, we should skip cleanup\n      // Otherwise, our cleanup step will cleanup state for the other navigator and re-initialize it\n      setTimeout(() => {\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          cleanUpState();\n        }\n      }, 0);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // We initialize this ref here to avoid a new getState getting initialized\n  // whenever initializedState changes. We want getState to have access to the\n  // latest initializedState, but don't need it to change when that happens\n  const initializedStateRef = React.useRef<State>();\n  initializedStateRef.current = initializedState;\n\n  const getState = React.useCallback((): State => {\n    const currentState = getCurrentState();\n\n    return isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedStateRef.current as State);\n  }, [getCurrentState, isStateInitialized]);\n\n  const emitter = useEventEmitter<EventMapCore<State>>((e) => {\n    let routeNames = [];\n\n    let route: Route<string> | undefined;\n\n    if (e.target) {\n      route = state.routes.find((route) => route.key === e.target);\n\n      if (route?.name) {\n        routeNames.push(route.name);\n      }\n    } else {\n      route = state.routes[state.index];\n      routeNames.push(\n        ...Object.keys(screens).filter((name) => route?.name === name)\n      );\n    }\n\n    if (route == null) {\n      return;\n    }\n\n    const navigation = descriptors[route.key].navigation;\n\n    const listeners = ([] as (((e: any) => void) | undefined)[])\n      .concat(\n        // Get an array of listeners for all screens + common listeners on navigator\n        ...[\n          screenListeners,\n          ...routeNames.map((name) => {\n            const { listeners } = screens[name].props;\n            return listeners;\n          }),\n        ].map((listeners) => {\n          const map =\n            typeof listeners === 'function'\n              ? listeners({ route: route as any, navigation })\n              : listeners;\n\n          return map\n            ? Object.keys(map)\n                .filter((type) => type === e.type)\n                .map((type) => map?.[type])\n            : undefined;\n        })\n      )\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n\n    listeners.forEach((listener) => listener?.(e));\n  });\n\n  useFocusEvents({ state, emitter });\n\n  React.useEffect(() => {\n    emitter.emit({ type: 'state', data: { state } });\n  }, [emitter, state]);\n\n  const { listeners: childListeners, addListener } = useChildListeners();\n\n  const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n  const onAction = useOnAction({\n    router,\n    getState,\n    setState,\n    key: route?.key,\n    actionListeners: childListeners.action,\n    beforeRemoveListeners: keyedListeners.beforeRemove,\n    routerConfigOptions: {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n    },\n    emitter,\n  });\n\n  const onRouteFocus = useOnRouteFocus({\n    router,\n    key: route?.key,\n    getState,\n    setState,\n  });\n\n  const navigation = useNavigationHelpers<\n    State,\n    ActionHelpers,\n    NavigationAction,\n    EventMap\n  >({\n    id: options.id,\n    onAction,\n    getState,\n    emitter,\n    router,\n  });\n\n  useFocusedListenersChildrenAdapter({\n    navigation,\n    focusedListeners: childListeners.focus,\n  });\n\n  useOnGetState({\n    getState,\n    getStateListeners: keyedListeners.getState,\n  });\n\n  const descriptors = useDescriptors<\n    State,\n    ActionHelpers,\n    ScreenOptions,\n    EventMap\n  >({\n    state,\n    screens,\n    navigation,\n    screenOptions: options.screenOptions,\n    defaultScreenOptions: options.defaultScreenOptions,\n    onAction,\n    getState,\n    setState,\n    onRouteFocus,\n    addListener,\n    addKeyedListener,\n    router,\n    // @ts-expect-error: this should have both core and custom events, but too much work right now\n    emitter,\n  });\n\n  useCurrentRender({\n    state,\n    navigation,\n    descriptors,\n  });\n\n  const NavigationContent = useComponent((children: React.ReactNode) => (\n    <NavigationHelpersContext.Provider value={navigation}>\n      <PreventRemoveProvider>{children}</PreventRemoveProvider>\n    </NavigationHelpersContext.Provider>\n  ));\n\n  return {\n    state,\n    navigation,\n    descriptors,\n    NavigationContent,\n  };\n}\n","import {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport type { NavigationHelpers, NavigationProp } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options<\n  State extends NavigationState,\n  EventMap extends Record<string, any>\n> = {\n  state: State;\n  getState: () => State;\n  navigation: NavigationHelpers<ParamListBase> &\n    Partial<NavigationProp<ParamListBase, string, any, any, any>>;\n  setOptions: (\n    cb: (options: Record<string, object>) => Record<string, object>\n  ) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\ntype NavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n> = Record<\n  string,\n  NavigationProp<\n    ParamListBase,\n    string,\n    string | undefined,\n    State,\n    ScreenOptions,\n    EventMap\n  >\n>;\n\n/**\n * Hook to cache navigation objects for each screen in the navigator.\n * It's important to cache them to make sure navigation objects don't change between renders.\n * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n */\nexport default function useNavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n>({\n  state,\n  getState,\n  navigation,\n  setOptions,\n  router,\n  emitter,\n}: Options<State, EventMap>) {\n  const { stackRef } = React.useContext(NavigationBuilderContext);\n\n  // Cache object which holds navigation objects for each screen\n  // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n  // In reality, these deps will rarely change, if ever\n  const cache = React.useMemo(\n    () => ({ current: {} as NavigationCache<State, ScreenOptions, EventMap> }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getState, navigation, setOptions, router, emitter]\n  );\n\n  const actions = {\n    ...router.actionCreators,\n    ...CommonActions,\n  };\n\n  cache.current = state.routes.reduce<\n    NavigationCache<State, ScreenOptions, EventMap>\n  >((acc, route) => {\n    const previous = cache.current[route.key];\n\n    type Thunk =\n      | NavigationAction\n      | ((state: State) => NavigationAction | null | undefined);\n\n    if (previous) {\n      // If a cached navigation object already exists, reuse it\n      acc[route.key] = previous;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { emit, ...rest } = navigation;\n\n      const dispatch = (thunk: Thunk) => {\n        const action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n\n        if (action != null) {\n          navigation.dispatch({ source: route.key, ...action });\n        }\n      };\n\n      const withStack = (callback: () => void) => {\n        let isStackSet = false;\n\n        try {\n          if (\n            process.env.NODE_ENV !== 'production' &&\n            stackRef &&\n            !stackRef.current\n          ) {\n            // Capture the stack trace for devtools\n            stackRef.current = new Error().stack;\n            isStackSet = true;\n          }\n\n          callback();\n        } finally {\n          if (isStackSet && stackRef) {\n            stackRef.current = undefined;\n          }\n        }\n      };\n\n      const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n        (acc, name) => {\n          acc[name] = (...args: any) =>\n            withStack(() =>\n              // @ts-expect-error: name is a valid key, but TypeScript is dumb\n              dispatch(actions[name](...args))\n            );\n\n          return acc;\n        },\n        {}\n      );\n\n      acc[route.key] = {\n        ...rest,\n        ...helpers,\n        // FIXME: too much work to fix the types for now\n        ...(emitter.create(route.key) as any),\n        dispatch: (thunk: Thunk) => withStack(() => dispatch(thunk)),\n        getParent: (id?: string) => {\n          if (id !== undefined && id === rest.getId()) {\n            // If the passed id is the same as the current navigation id,\n            // we return the cached navigation object for the relevant route\n            return acc[route.key];\n          }\n\n          return rest.getParent(id);\n        },\n        setOptions: (options: object) =>\n          setOptions((o) => ({\n            ...o,\n            [route.key]: { ...o[route.key], ...options },\n          })),\n        isFocused: () => {\n          const state = getState();\n\n          if (state.routes[state.index].key !== route.key) {\n            return false;\n          }\n\n          // If the current screen is focused, we also need to check if parent navigator is focused\n          // This makes sure that we return the focus state in the whole tree, not just this navigator\n          return navigation ? navigation.isFocused() : true;\n        },\n      };\n    }\n\n    return acc;\n  }, {});\n\n  return cache.current;\n}\n","import * as React from 'react';\n\nimport createNavigationContainerRef from './createNavigationContainerRef';\nimport type { NavigationContainerRefWithCurrent } from './types';\n\nexport default function useNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const navigation =\n    React.useRef<NavigationContainerRefWithCurrent<ParamList> | null>(null);\n\n  if (navigation.current == null) {\n    navigation.current = createNavigationContainerRef<ParamList>();\n  }\n\n  return navigation.current;\n}\n","import {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationContext from './NavigationContext';\nimport { NavigationHelpers, PrivateValueStore } from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  id: string | undefined;\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter<any>;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({\n  id: navigatorId,\n  onAction,\n  getState,\n  emitter,\n  router,\n}: Options<State, Action>) {\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n\n  return React.useMemo(() => {\n    const dispatch = (op: Action | ((state: State) => Action)) => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n\n      const handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction?.(action);\n      }\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce((acc, name) => {\n      // @ts-expect-error: name is a valid key, but TypeScript is dumb\n      acc[name] = (...args: any) => dispatch(actions[name](...args));\n      return acc;\n    }, {} as ActionHelpers);\n\n    const navigationHelpers = {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n            routeGetIdList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n      getId: () => navigatorId,\n      getParent: (id?: string) => {\n        if (id !== undefined) {\n          let current = navigationHelpers;\n\n          while (current && id !== current.getId()) {\n            current = current.getParent();\n          }\n\n          return current;\n        }\n\n        return parentNavigationHelpers;\n      },\n      getState,\n    } as NavigationHelpers<ParamListBase, EventMap> & ActionHelpers;\n\n    return navigationHelpers;\n  }, [\n    navigatorId,\n    emitter.emit,\n    getState,\n    onAction,\n    onUnhandledAction,\n    parentNavigationHelpers,\n    router,\n  ]);\n}\n","import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { NavigationProp } from './types';\nimport useNavigation from './useNavigation';\n\ntype Selector<ParamList extends ParamListBase, T> = (\n  state: NavigationState<ParamList>\n) => T;\n\n/**\n * Hook to get a value from the current navigation state using a selector.\n *\n * @param selector Selector function to get a value from the state.\n */\nexport default function useNavigationState<ParamList extends ParamListBase, T>(\n  selector: Selector<ParamList, T>\n): T {\n  const navigation = useNavigation<NavigationProp<ParamList>>();\n\n  // We don't care about the state value, we run the selector again at the end\n  // The state is only to make sure that there's a re-render when we have a new value\n  const [, setResult] = React.useState(() => selector(navigation.getState()));\n\n  // We store the selector in a ref to avoid re-subscribing listeners every render\n  const selectorRef = React.useRef(selector);\n\n  React.useEffect(() => {\n    selectorRef.current = selector;\n  });\n\n  React.useEffect(() => {\n    const unsubscribe = navigation.addListener('state', (e) => {\n      setResult(selectorRef.current(e.data.state));\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n\n  return selector(navigation.getState());\n}\n","import type {\n  NavigationAction,\n  NavigationState,\n  PartialState,\n  Router,\n  RouterConfigOptions,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  ChildActionListener,\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useOnPreventRemove, { shouldPreventRemove } from './useOnPreventRemove';\n\ntype Options = {\n  router: Router<NavigationState, NavigationAction>;\n  key?: string;\n  getState: () => NavigationState;\n  setState: (state: NavigationState | PartialState<NavigationState>) => void;\n  actionListeners: ChildActionListener[];\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n  routerConfigOptions: RouterConfigOptions;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n};\n\n/**\n * Hook to handle actions for a navigator, including state updates and bubbling.\n *\n * Bubbling an action is achieved in 2 ways:\n * 1. To bubble action to parent, we expose the action handler in context and then access the parent context\n * 2. To bubble action to child, child adds event listeners subscribing to actions from parent\n *\n * When the action handler handles as action, it returns `true`, otherwise `false`.\n */\nexport default function useOnAction({\n  router,\n  getState,\n  setState,\n  key,\n  actionListeners,\n  beforeRemoveListeners,\n  routerConfigOptions,\n  emitter,\n}: Options) {\n  const {\n    onAction: onActionParent,\n    onRouteFocus: onRouteFocusParent,\n    addListener: addListenerParent,\n    onDispatchAction,\n  } = React.useContext(NavigationBuilderContext);\n\n  const routerConfigOptionsRef =\n    React.useRef<RouterConfigOptions>(routerConfigOptions);\n\n  React.useEffect(() => {\n    routerConfigOptionsRef.current = routerConfigOptions;\n  });\n\n  const onAction = React.useCallback(\n    (\n      action: NavigationAction,\n      visitedNavigators: Set<string> = new Set<string>()\n    ) => {\n      const state = getState();\n\n      // Since actions can bubble both up and down, they could come to the same navigator again\n      // We keep track of navigators which have already tried to handle the action and return if it's already visited\n      if (visitedNavigators.has(state.key)) {\n        return false;\n      }\n\n      visitedNavigators.add(state.key);\n\n      if (typeof action.target !== 'string' || action.target === state.key) {\n        let result = router.getStateForAction(\n          state,\n          action,\n          routerConfigOptionsRef.current\n        );\n\n        // If a target is specified and set to current navigator, the action shouldn't bubble\n        // So instead of `null`, we use the state object for such cases to signal that action was handled\n        result =\n          result === null && action.target === state.key ? state : result;\n\n        if (result !== null) {\n          onDispatchAction(action, state === result);\n\n          if (state !== result) {\n            const isPrevented = shouldPreventRemove(\n              emitter,\n              beforeRemoveListeners,\n              state.routes,\n              result.routes,\n              action\n            );\n\n            if (isPrevented) {\n              return true;\n            }\n\n            setState(result);\n          }\n\n          if (onRouteFocusParent !== undefined) {\n            // Some actions such as `NAVIGATE` also want to bring the navigated route to focus in the whole tree\n            // This means we need to focus all of the parent navigators of this navigator as well\n            const shouldFocus = router.shouldActionChangeFocus(action);\n\n            if (shouldFocus && key !== undefined) {\n              onRouteFocusParent(key);\n            }\n          }\n\n          return true;\n        }\n      }\n\n      if (onActionParent !== undefined) {\n        // Bubble action to the parent if the current navigator didn't handle it\n        if (onActionParent(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      // If the action wasn't handled by current navigator or a parent navigator, let children handle it\n      for (let i = actionListeners.length - 1; i >= 0; i--) {\n        const listener = actionListeners[i];\n\n        if (listener(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    [\n      actionListeners,\n      beforeRemoveListeners,\n      emitter,\n      getState,\n      key,\n      onActionParent,\n      onDispatchAction,\n      onRouteFocusParent,\n      router,\n      setState,\n    ]\n  );\n\n  useOnPreventRemove({\n    getState,\n    emitter,\n    beforeRemoveListeners,\n  });\n\n  React.useEffect(\n    () => addListenerParent?.('action', onAction),\n    [addListenerParent, onAction]\n  );\n\n  return onAction;\n}\n","import type { NavigationState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport isArrayEqual from './isArrayEqual';\nimport NavigationBuilderContext, {\n  GetStateListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\n\ntype Options = {\n  getState: () => NavigationState;\n  getStateListeners: Record<string, GetStateListener | undefined>;\n};\n\nexport default function useOnGetState({\n  getState,\n  getStateListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n\n    // Avoid returning new route objects if we don't need to\n    const routes = state.routes.map((route) => {\n      const childState = getStateListeners[route.key]?.();\n\n      if (route.state === childState) {\n        return route;\n      }\n\n      return { ...route, state: childState };\n    });\n\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n\n    return { ...state, routes };\n  }, [getState, getStateListeners]);\n\n  React.useEffect(() => {\n    return addKeyedListener?.('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}\n","import type {\n  NavigationAction,\n  NavigationState,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options = {\n  getState: () => NavigationState;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n};\n\nconst VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\n\nexport const shouldPreventRemove = (\n  emitter: NavigationEventEmitter<EventMapCore<any>>,\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>,\n  currentRoutes: { key: string }[],\n  nextRoutes: { key?: string | undefined }[],\n  action: NavigationAction\n) => {\n  const nextRouteKeys = nextRoutes.map((route) => route.key);\n\n  // Call these in reverse order so last screens handle the event first\n  const removedRoutes = currentRoutes\n    .filter((route) => !nextRouteKeys.includes(route.key))\n    .reverse();\n\n  const visitedRouteKeys: Set<string> =\n    // @ts-expect-error: add this property to mark that we've already emitted this action\n    action[VISITED_ROUTE_KEYS] ?? new Set<string>();\n\n  const beforeRemoveAction = {\n    ...action,\n    [VISITED_ROUTE_KEYS]: visitedRouteKeys,\n  };\n\n  for (const route of removedRoutes) {\n    if (visitedRouteKeys.has(route.key)) {\n      // Skip if we've already emitted this action for this screen\n      continue;\n    }\n\n    // First, we need to check if any child screens want to prevent it\n    const isPrevented = beforeRemoveListeners[route.key]?.(beforeRemoveAction);\n\n    if (isPrevented) {\n      return true;\n    }\n\n    visitedRouteKeys.add(route.key);\n\n    const event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: { action: beforeRemoveAction },\n      canPreventDefault: true,\n    });\n\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport default function useOnPreventRemove({\n  getState,\n  emitter,\n  beforeRemoveListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const routeKey = route?.key;\n\n  React.useEffect(() => {\n    if (routeKey) {\n      return addKeyedListener?.('beforeRemove', routeKey, (action) => {\n        const state = getState();\n\n        return shouldPreventRemove(\n          emitter,\n          beforeRemoveListeners,\n          state.routes,\n          [],\n          action\n        );\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}\n","import type {\n  NavigationAction,\n  NavigationState,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\n\ntype Options<Action extends NavigationAction> = {\n  router: Router<NavigationState, Action>;\n  getState: () => NavigationState;\n  setState: (state: NavigationState) => void;\n  key?: string;\n};\n\n/**\n * Hook to handle focus actions for a route.\n * Focus action needs to be treated specially, coz when a nested route is focused,\n * the parent navigators also needs to be focused.\n */\nexport default function useOnRouteFocus<Action extends NavigationAction>({\n  router,\n  getState,\n  key: sourceRouteKey,\n  setState,\n}: Options<Action>) {\n  const { onRouteFocus: onRouteFocusParent } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  return React.useCallback(\n    (key: string) => {\n      const state = getState();\n      const result = router.getStateForRouteFocus(state, key);\n\n      if (result !== state) {\n        setState(result);\n      }\n\n      if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n        onRouteFocusParent(sourceRouteKey);\n      }\n    },\n    [getState, onRouteFocusParent, router, setState, sourceRouteKey]\n  );\n}\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type { NavigationProp } from './types';\n\ntype Options = {\n  key?: string;\n  navigation?: NavigationProp<ParamListBase>;\n  options?: object | undefined;\n};\n\nexport default function useOptionsGetters({\n  key,\n  options,\n  navigation,\n}: Options) {\n  const optionsRef = React.useRef<object | undefined>(options);\n  const optionsGettersFromChildRef = React.useRef<\n    Record<string, () => object | undefined | null>\n  >({});\n\n  const { onOptionsChange } = React.useContext(NavigationBuilderContext);\n  const { addOptionsGetter: parentAddOptionsGetter } = React.useContext(\n    NavigationStateContext\n  );\n\n  const optionsChangeListener = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n    const hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      onOptionsChange(optionsRef.current ?? {});\n    }\n  }, [navigation, onOptionsChange]);\n\n  React.useEffect(() => {\n    optionsRef.current = options;\n    optionsChangeListener();\n\n    return navigation?.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n\n  const getOptionsFromListener = React.useCallback(() => {\n    for (let key in optionsGettersFromChildRef.current) {\n      if (optionsGettersFromChildRef.current.hasOwnProperty(key)) {\n        const result = optionsGettersFromChildRef.current[key]?.();\n\n        // null means unfocused route\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n\n  const getCurrentOptions = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    const optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n\n  React.useEffect(() => {\n    return parentAddOptionsGetter?.(key!, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n\n  const addOptionsGetter = React.useCallback(\n    (key: string, getter: () => object | undefined | null) => {\n      optionsGettersFromChildRef.current[key] = getter;\n      optionsChangeListener();\n\n      return () => {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete optionsGettersFromChildRef.current[key];\n        optionsChangeListener();\n      };\n    },\n    [optionsChangeListener]\n  );\n\n  return {\n    addOptionsGetter,\n    getCurrentOptions,\n  };\n}\n","import type { NavigationAction } from '@react-navigation/routers';\nimport { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport type { EventListenerCallback, EventMapCore } from './types';\nimport useNavigation from './useNavigation';\nimport usePreventRemoveContext from './usePreventRemoveContext';\nimport useRoute from './useRoute';\n\n/**\n * Hook to prevent screen from being removed. Can be used to prevent users from leaving the screen.\n *\n * @param preventRemove Boolean indicating whether to prevent screen from being removed.\n * @param callback Function which is executed when screen was prevented from being removed.\n */\nexport default function usePreventRemove(\n  preventRemove: boolean,\n  callback: (options: { data: { action: NavigationAction } }) => void\n) {\n  const [id] = React.useState(() => nanoid());\n\n  const navigation = useNavigation();\n  const { key: routeKey } = useRoute();\n\n  const { setPreventRemove } = usePreventRemoveContext();\n\n  React.useEffect(() => {\n    setPreventRemove(id, routeKey, preventRemove);\n    return () => {\n      setPreventRemove(id, routeKey, false);\n    };\n  }, [setPreventRemove, id, routeKey, preventRemove]);\n\n  const beforeRemoveListener = useLatestCallback<\n    EventListenerCallback<EventMapCore<any>, 'beforeRemove'>\n  >((e) => {\n    if (!preventRemove) {\n      return;\n    }\n\n    e.preventDefault();\n\n    callback({ data: e.data });\n  });\n\n  React.useEffect(\n    () => navigation?.addListener('beforeRemove', beforeRemoveListener),\n    [navigation, beforeRemoveListener]\n  );\n}\n","import * as React from 'react';\n\nimport PreventRemoveContext from './PreventRemoveContext';\n\nexport default function usePreventRemoveContext() {\n  const value = React.useContext(PreventRemoveContext);\n\n  if (value == null) {\n    throw new Error(\n      \"Couldn't find the prevent remove context. Is your component inside NavigationContent?\"\n    );\n  }\n\n  return value;\n}\n","import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\n\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\\n\\nThis can also happen if there are multiple copies of '@react-navigation' packages installed.\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n","import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { RouteProp } from './types';\n\n/**\n * Hook to access the route prop of the parent screen anywhere.\n *\n * @returns Route prop of the parent screen.\n */\nexport default function useRoute<T extends RouteProp<ParamListBase>>(): T {\n  const route = React.useContext(NavigationRouteContext);\n\n  if (route === undefined) {\n    throw new Error(\n      \"Couldn't find a route object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  return route as T;\n}\n","import type {\n  NavigationState,\n  ParamListBase,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { RouteProp } from './types';\n\ntype RouteCache = Map<Route<string>, RouteProp<ParamListBase>>;\n\n/**\n * Utilites such as `getFocusedRouteNameFromRoute` need to access state.\n * So we need a way to suppress the warning for those use cases.\n * This is fine since they are internal utilities and this is not public API.\n */\nexport const CHILD_STATE = Symbol('CHILD_STATE');\n\n/**\n * Hook to cache route props for each screen in the navigator.\n * This lets add warnings and modifications to the route object but keep references between renders.\n */\nexport default function useRouteCache<State extends NavigationState>(\n  routes: State['routes']\n) {\n  // Cache object which holds route objects for each screen\n  const cache = React.useMemo(() => ({ current: new Map() as RouteCache }), []);\n\n  if (process.env.NODE_ENV === 'production') {\n    // We don't want the overhead of creating extra maps every render in prod\n    return routes;\n  }\n\n  cache.current = routes.reduce((acc, route) => {\n    const previous = cache.current.get(route);\n\n    if (previous) {\n      // If a cached route object already exists, reuse it\n      acc.set(route, previous);\n    } else {\n      const { state, ...proxy } = route;\n\n      Object.defineProperty(proxy, CHILD_STATE, {\n        enumerable: false,\n        value: state,\n      });\n\n      acc.set(route, proxy);\n    }\n\n    return acc;\n  }, new Map() as RouteCache);\n\n  return Array.from(cache.current.values());\n}\n","import * as React from 'react';\n\nconst MISSING_CONTEXT_ERROR = \"Couldn't find a schedule context.\";\n\nexport const ScheduleUpdateContext = React.createContext<{\n  scheduleUpdate: (callback: () => void) => void;\n  flushUpdates: () => void;\n}>({\n  scheduleUpdate() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  flushUpdates() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n\n/**\n * When screen config changes, we want to update the navigator in the same update phase.\n * However, navigation state is in the root component and React won't let us update it from a child.\n * This is a workaround for that, the scheduled update is stored in the ref without actually calling setState.\n * It lets all subsequent updates access the latest state so it stays correct.\n * Then we call setState during after the component updates.\n */\nexport default function useScheduleUpdate(callback: () => void) {\n  const { scheduleUpdate, flushUpdates } = React.useContext(\n    ScheduleUpdateContext\n  );\n\n  scheduleUpdate(callback);\n\n  React.useEffect(flushUpdates);\n}\n","import * as React from 'react';\n\nconst UNINTIALIZED_STATE = {};\n\n/**\n * This is definitely not compatible with concurrent mode, but we don't have a solution for sync state yet.\n */\nexport default function useSyncState<T>(initialState?: (() => T) | T) {\n  const stateRef = React.useRef<T>(UNINTIALIZED_STATE as any);\n  const isSchedulingRef = React.useRef(false);\n  const isMountedRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  if (stateRef.current === UNINTIALIZED_STATE) {\n    stateRef.current =\n      // @ts-expect-error: initialState is a function, but TypeScript doesn't think so\n      typeof initialState === 'function' ? initialState() : initialState;\n  }\n\n  const [trackingState, setTrackingState] = React.useState(stateRef.current);\n\n  const getState = React.useCallback(() => stateRef.current, []);\n\n  const setState = React.useCallback((state: T) => {\n    if (state === stateRef.current || !isMountedRef.current) {\n      return;\n    }\n\n    stateRef.current = state;\n\n    if (!isSchedulingRef.current) {\n      setTrackingState(state);\n    }\n  }, []);\n\n  const scheduleUpdate = React.useCallback((callback: () => void) => {\n    isSchedulingRef.current = true;\n\n    try {\n      callback();\n    } finally {\n      isSchedulingRef.current = false;\n    }\n  }, []);\n\n  const flushUpdates = React.useCallback(() => {\n    if (!isMountedRef.current) {\n      return;\n    }\n\n    // Make sure that the tracking state is up-to-date.\n    // We call it unconditionally, but React should skip the update if state is unchanged.\n    setTrackingState(stateRef.current);\n  }, []);\n\n  // If we're rendering and the tracking state is out of date, update it immediately\n  // This will make sure that our updates are applied as early as possible.\n  if (trackingState !== stateRef.current) {\n    setTrackingState(stateRef.current);\n  }\n\n  const state = stateRef.current;\n\n  React.useDebugValue(state);\n\n  return [state, getState, setState, scheduleUpdate, flushUpdates] as const;\n}\n","const formatToList = (items: string[]) =>\n  items.map((key) => `- ${key}`).join('\\n');\n\nexport default function validatePathConfig(config: any, root = true) {\n  const validKeys = ['initialRouteName', 'screens'];\n\n  if (!root) {\n    validKeys.push('path', 'exact', 'stringify', 'parse');\n  }\n\n  const invalidKeys = Object.keys(config).filter(\n    (key) => !validKeys.includes(key)\n  );\n\n  if (invalidKeys.length) {\n    throw new Error(\n      `Found invalid properties in the configuration:\\n${formatToList(\n        invalidKeys\n      )}\\n\\nDid you forget to specify them under a 'screens' property?\\n\\nYou can only specify the following properties:\\n${formatToList(\n        validKeys\n      )}\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`\n    );\n  }\n\n  if (config.screens) {\n    Object.entries(config.screens).forEach(([_, value]) => {\n      if (typeof value !== 'string') {\n        validatePathConfig(value, false);\n      }\n    });\n  }\n}\n","import type { NavigationAction } from '@react-navigation/core';\nimport * as React from 'react';\nimport { GestureResponderEvent, Platform, Text, TextProps } from 'react-native';\n\nimport useLinkProps from './useLinkProps';\nimport type { To } from './useLinkTo';\n\ntype Props<ParamList extends ReactNavigation.RootParamList> = {\n  to: To<ParamList>;\n  action?: NavigationAction;\n  target?: string;\n  onPress?: (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n} & (TextProps & { children: React.ReactNode });\n\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport default function Link<ParamList extends ReactNavigation.RootParamList>({\n  to,\n  action,\n  ...rest\n}: Props<ParamList>) {\n  const props = useLinkProps<ParamList>({ to, action });\n\n  const onPress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if ('onPress' in rest) {\n      rest.onPress?.(e);\n    }\n\n    props.onPress(e);\n  };\n\n  return React.createElement(Text, {\n    ...props,\n    ...rest,\n    ...Platform.select({\n      web: { onClick: onPress } as any,\n      default: { onPress },\n    }),\n  });\n}\n","import type { ParamListBase } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport type { LinkingOptions } from './types';\n\nconst LinkingContext = React.createContext<{\n  options: LinkingOptions<ParamListBase> | undefined;\n}>({ options: undefined });\n\nLinkingContext.displayName = 'LinkingContext';\n\nexport default LinkingContext;\n","import {\n  BaseNavigationContainer,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  NavigationContainerProps,\n  NavigationContainerRef,\n  ParamListBase,\n  validatePathConfig,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\nimport DefaultTheme from './theming/DefaultTheme';\nimport ThemeProvider from './theming/ThemeProvider';\nimport type { DocumentTitleOptions, LinkingOptions, Theme } from './types';\nimport useBackButton from './useBackButton';\nimport useDocumentTitle from './useDocumentTitle';\nimport useLinking from './useLinking';\nimport useThenable from './useThenable';\n\ndeclare global {\n  var REACT_NAVIGATION_DEVTOOLS: WeakMap<\n    NavigationContainerRef<any>,\n    { readonly linking: LinkingOptions<any> }\n  >;\n}\n\nglobal.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\n\ntype Props<ParamList extends {}> = NavigationContainerProps & {\n  theme?: Theme;\n  linking?: LinkingOptions<ParamList>;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n  onReady?: () => void;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nfunction NavigationContainerInner(\n  {\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    ...rest\n  }: Props<ParamListBase>,\n  ref?: React.Ref<NavigationContainerRef<ParamListBase> | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  if (linking?.config) {\n    validatePathConfig(linking.config);\n  }\n\n  const refContainer =\n    React.useRef<NavigationContainerRef<ParamListBase>>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const { getInitialState } = useLinking(refContainer, {\n    independent: rest.independent,\n    enabled: isLinkingEnabled,\n    prefixes: [],\n    ...linking,\n  });\n\n  // Add additional linking related info to the ref\n  // This will be used by the devtools\n  React.useEffect(() => {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          return {\n            ...linking,\n            enabled: isLinkingEnabled,\n            prefixes: linking?.prefixes ?? [],\n            getStateFromPath: linking?.getStateFromPath ?? getStateFromPath,\n            getPathFromState: linking?.getPathFromState ?? getPathFromState,\n            getActionFromState:\n              linking?.getActionFromState ?? getActionFromState,\n          };\n        },\n      });\n    }\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  const onReadyRef = React.useRef(onReady);\n\n  React.useEffect(() => {\n    onReadyRef.current = onReady;\n  });\n\n  React.useEffect(() => {\n    if (isReady) {\n      onReadyRef.current?.();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return fallback as React.ReactElement;\n  }\n\n  return (\n    <LinkingContext.Provider value={linkingContext}>\n      <ThemeProvider value={theme}>\n        <BaseNavigationContainer\n          {...rest}\n          initialState={\n            rest.initialState == null ? initialState : rest.initialState\n          }\n          ref={refContainer}\n        />\n      </ThemeProvider>\n    </LinkingContext.Provider>\n  );\n}\n\nconst NavigationContainer = React.forwardRef(NavigationContainerInner) as <\n  RootParamList extends {} = ReactNavigation.RootParamList\n>(\n  props: Props<RootParamList> & {\n    ref?: React.Ref<NavigationContainerRef<RootParamList>>;\n  }\n) => React.ReactElement;\n\nexport default NavigationContainer;\n","import { CurrentRenderContext } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport ServerContext, { ServerContextType } from './ServerContext';\nimport type { ServerContainerRef } from './types';\n\ntype Props = ServerContextType & {\n  children: React.ReactNode;\n};\n\n/**\n * Container component for server rendering.\n *\n * @param props.location Location object to base the initial URL for SSR.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which contains helper methods.\n */\nexport default React.forwardRef(function ServerContainer(\n  { children, location }: Props,\n  ref: React.Ref<ServerContainerRef>\n) {\n  React.useEffect(() => {\n    console.error(\n      \"'ServerContainer' should only be used on the server with 'react-dom/server' for SSR.\"\n    );\n  }, []);\n\n  const current: { options?: object } = {};\n\n  if (ref) {\n    const value = {\n      getCurrentOptions() {\n        return current.options;\n      },\n    };\n\n    // We write to the `ref` during render instead of `React.useImperativeHandle`\n    // This is because `useImperativeHandle` will update the ref after 'commit',\n    // and there's no 'commit' phase during SSR.\n    // Mutating ref during render is unsafe in concurrent mode, but we don't care about it for SSR.\n    if (typeof ref === 'function') {\n      ref(value);\n    } else {\n      // @ts-expect-error: the TS types are incorrect and say that ref.current is readonly\n      ref.current = value;\n    }\n  }\n\n  return (\n    <ServerContext.Provider value={{ location }}>\n      <CurrentRenderContext.Provider value={current}>\n        {children}\n      </CurrentRenderContext.Provider>\n    </ServerContext.Provider>\n  );\n});\n","import * as React from 'react';\n\nexport type ServerContextType = {\n  location?: {\n    pathname: string;\n    search: string;\n  };\n};\n\nconst ServerContext = React.createContext<ServerContextType | undefined>(\n  undefined\n);\n\nexport default ServerContext;\n","import escapeStringRegexp from 'escape-string-regexp';\n\nexport default function extractPathFromURL(prefixes: string[], url: string) {\n  for (const prefix of prefixes) {\n    const protocol = prefix.match(/^[^:]+:/)?.[0] ?? '';\n    const host = prefix\n      .replace(new RegExp(`^${escapeStringRegexp(protocol)}`), '')\n      .replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n      .replace(/^\\//, ''); // Remove extra leading slash\n\n    const prefixRegex = new RegExp(\n      `^${escapeStringRegexp(protocol)}(/)*${host\n        .split('.')\n        .map((it) => (it === '*' ? '[^/]+' : escapeStringRegexp(it)))\n        .join('\\\\.')}`\n    );\n\n    const normalizedURL = url.replace(/\\/+/g, '/');\n\n    if (prefixRegex.test(normalizedURL)) {\n      return normalizedURL.replace(prefixRegex, '');\n    }\n  }\n\n  return undefined;\n}\n","export { default as Link } from './Link';\nexport { default as LinkingContext } from './LinkingContext';\nexport { default as NavigationContainer } from './NavigationContainer';\nexport { default as ServerContainer } from './ServerContainer';\nexport { default as DarkTheme } from './theming/DarkTheme';\nexport { default as DefaultTheme } from './theming/DefaultTheme';\nexport { default as ThemeProvider } from './theming/ThemeProvider';\nexport { default as useTheme } from './theming/useTheme';\nexport * from './types';\nexport { default as useLinkBuilder } from './useLinkBuilder';\nexport { default as useLinkProps } from './useLinkProps';\nexport { default as useLinkTo } from './useLinkTo';\nexport { default as useScrollToTop } from './useScrollToTop';\nexport * from '@react-navigation/core';\n","import type { Theme } from '../types';\n\nconst DarkTheme: Theme = {\n  dark: true,\n  colors: {\n    primary: 'rgb(10, 132, 255)',\n    background: 'rgb(1, 1, 1)',\n    card: 'rgb(18, 18, 18)',\n    text: 'rgb(229, 229, 231)',\n    border: 'rgb(39, 39, 41)',\n    notification: 'rgb(255, 69, 58)',\n  },\n};\n\nexport default DarkTheme;\n","import type { Theme } from '../types';\n\nconst DefaultTheme: Theme = {\n  dark: false,\n  colors: {\n    primary: 'rgb(0, 122, 255)',\n    background: 'rgb(242, 242, 242)',\n    card: 'rgb(255, 255, 255)',\n    text: 'rgb(28, 28, 30)',\n    border: 'rgb(216, 216, 216)',\n    notification: 'rgb(255, 59, 48)',\n  },\n};\n\nexport default DefaultTheme;\n","import * as React from 'react';\n\nimport type { Theme } from '../types';\nimport DefaultTheme from './DefaultTheme';\n\nconst ThemeContext = React.createContext<Theme>(DefaultTheme);\n\nThemeContext.displayName = 'ThemeContext';\n\nexport default ThemeContext;\n","import * as React from 'react';\n\nimport type { Theme } from '../types';\nimport ThemeContext from './ThemeContext';\n\ntype Props = {\n  value: Theme;\n  children: React.ReactNode;\n};\n\nexport default function ThemeProvider({ value, children }: Props) {\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n}\n","import * as React from 'react';\n\nimport ThemeContext from './ThemeContext';\n\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n\n  return theme;\n}\n","import type {\n  getActionFromState as getActionFromStateDefault,\n  getPathFromState as getPathFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  PathConfigMap,\n  Route,\n} from '@react-navigation/core';\n\nexport type Theme = {\n  dark: boolean;\n  colors: {\n    primary: string;\n    background: string;\n    card: string;\n    text: string;\n    border: string;\n    notification: string;\n  };\n};\n\nexport type LinkingOptions<ParamList extends {}> = {\n  /**\n   * Whether deep link handling should be enabled.\n   * Defaults to true.\n   */\n  enabled?: boolean;\n  /**\n   * The prefixes are stripped from the URL before parsing them.\n   * Usually they are the `scheme` + `host` (e.g. `myapp://chat?user=jane`)\n   *\n   * This is not supported on Web.\n   *\n   * @example\n   * ```js\n   * {\n   *    prefixes: [\n   *      \"myapp://\", // App-specific scheme\n   *      \"https://example.com\", // Prefix for universal links\n   *      \"https://*.example.com\" // Prefix which matches any subdomain\n   *    ]\n   * }\n   * ```\n   */\n  prefixes: string[];\n  /**\n   * Optional function which takes an incoming URL returns a boolean\n   * indicating whether React Navigation should handle it.\n   *\n   * This can be used to disable deep linking for specific URLs.\n   * e.g. URLs used for authentication, and not for deep linking to screens.\n   *\n   * This is not supported on Web.\n   *\n   * @example\n   * ```js\n   * {\n   *   // Filter out URLs used by expo-auth-session\n   *   filter: (url) => !url.includes('+expo-auth-session')\n   * }\n   * ```\n   */\n  filter?: (url: string) => boolean;\n  /**\n   * Config to fine-tune how to parse the path.\n   *\n   * @example\n   * ```js\n   * {\n   *   Chat: {\n   *     path: 'chat/:author/:id',\n   *     parse: { id: Number }\n   *   }\n   * }\n   * ```\n   */\n  config?: {\n    initialRouteName?: keyof ParamList;\n    screens: PathConfigMap<ParamList>;\n  };\n  /**\n   * Custom function to get the initial URL used for linking.\n   * Uses `Linking.getInitialURL()` by default.\n   *\n   * This is not supported on Web.\n   *\n   * @example\n   * ```js\n   * {\n   *    getInitialURL () => Linking.getInitialURL(),\n   * }\n   * ```\n   */\n  getInitialURL?: () =>\n    | string\n    | null\n    | undefined\n    | Promise<string | null | undefined>;\n  /**\n   * Custom function to get subscribe to URL updates.\n   * Uses `Linking.addEventListener('url', callback)` by default.\n   *\n   * This is not supported on Web.\n   *\n   * @example\n   * ```js\n   * {\n   *    subscribe: (listener) => {\n   *      const onReceiveURL = ({ url }) => listener(url);\n   *\n   *      Linking.addEventListener('url', onReceiveURL);\n   *\n   *      return () => Linking.removeEventListener('url', onReceiveURL);\n   *   }\n   * }\n   * ```\n   */\n  subscribe?: (\n    listener: (url: string) => void\n  ) => undefined | void | (() => void);\n  /**\n   * Custom function to parse the URL to a valid navigation state (advanced).\n   */\n  getStateFromPath?: typeof getStateFromPathDefault;\n  /**\n   * Custom function to convert the state object to a valid URL (advanced).\n   * Only applicable on Web.\n   */\n  getPathFromState?: typeof getPathFromStateDefault;\n  /**\n   * Custom function to convert the state object to a valid action (advanced).\n   */\n  getActionFromState?: typeof getActionFromStateDefault;\n};\n\nexport type DocumentTitleOptions = {\n  enabled?: boolean;\n  formatter?: (\n    options: Record<string, any> | undefined,\n    route: Route<string> | undefined\n  ) => string;\n};\n\nexport type ServerContainerRef = {\n  getCurrentOptions(): Record<string, any> | undefined;\n};\n","import type {\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport { BackHandler } from 'react-native';\n\nexport default function useBackButton(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>\n) {\n  React.useEffect(() => {\n    const subscription = BackHandler.addEventListener(\n      'hardwareBackPress',\n      () => {\n        const navigation = ref.current;\n\n        if (navigation == null) {\n          return false;\n        }\n\n        if (navigation.canGoBack()) {\n          navigation.goBack();\n\n          return true;\n        }\n\n        return false;\n      }\n    );\n\n    return () => subscription.remove();\n  }, [ref]);\n}\n","export default function useDocumentTitle() {\n  // Noop for React Native\n}\n","import {\n  getPathFromState,\n  NavigationHelpers,\n  NavigationHelpersContext,\n  NavigationProp,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\n\ntype NavigationObject =\n  | NavigationHelpers<ParamListBase>\n  | NavigationProp<ParamListBase>;\n\ntype MinimalState = {\n  index: number;\n  routes: { name: string; params?: object; state?: MinimalState }[];\n};\n\nconst getRootStateForNavigate = (\n  navigation: NavigationObject,\n  state: MinimalState\n): MinimalState => {\n  const parent = navigation.getParent();\n\n  if (parent) {\n    const parentState = parent.getState();\n\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [\n        {\n          ...parentState.routes[parentState.index],\n          state: state,\n        },\n      ],\n    });\n  }\n\n  return state;\n};\n\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n\n  const buildLink = React.useCallback(\n    (name: string, params?: object) => {\n      const { options } = linking;\n\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      const state = navigation\n        ? getRootStateForNavigate(navigation, {\n            index: 0,\n            routes: [{ name, params }],\n          })\n        : // If we couldn't find a navigation object in context, we're at root\n          // So we'll construct a basic state object to use\n          {\n            index: 0,\n            routes: [{ name, params }],\n          };\n\n      const path = options?.getPathFromState\n        ? options.getPathFromState(state, options?.config)\n        : getPathFromState(state, options?.config);\n\n      return path;\n    },\n    [linking, navigation]\n  );\n\n  return buildLink;\n}\n","import {\n  getPathFromState,\n  NavigationAction,\n  NavigationContainerRefContext,\n  NavigationHelpersContext,\n  NavigatorScreenParams,\n  ParamListBase,\n} from '@react-navigation/core';\nimport type { NavigationState, PartialState } from '@react-navigation/routers';\nimport * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport LinkingContext from './LinkingContext';\nimport useLinkTo, { To } from './useLinkTo';\n\ntype Props<ParamList extends ReactNavigation.RootParamList> = {\n  to: To<ParamList>;\n  action?: NavigationAction;\n};\n\nconst getStateFromParams = (\n  params: NavigatorScreenParams<ParamListBase, NavigationState> | undefined\n): PartialState<NavigationState> | NavigationState | undefined => {\n  if (params?.state) {\n    return params.state;\n  }\n\n  if (params?.screen) {\n    return {\n      routes: [\n        {\n          name: params.screen,\n          params: params.params,\n          // @ts-expect-error\n          state: params.screen\n            ? getStateFromParams(\n                params.params as\n                  | NavigatorScreenParams<ParamListBase, NavigationState>\n                  | undefined\n              )\n            : undefined,\n        },\n      ],\n    };\n  }\n\n  return undefined;\n};\n\n/**\n * Hook to get props for an anchor tag so it can work with in page navigation.\n *\n * @param props.to Absolute path to screen (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n */\nexport default function useLinkProps<\n  ParamList extends ReactNavigation.RootParamList\n>({ to, action }: Props<ParamList>) {\n  const root = React.useContext(NavigationContainerRefContext);\n  const navigation = React.useContext(NavigationHelpersContext);\n  const { options } = React.useContext(LinkingContext);\n  const linkTo = useLinkTo<ParamList>();\n\n  const onPress = (\n    e?: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    let shouldHandle = false;\n\n    if (Platform.OS !== 'web' || !e) {\n      shouldHandle = e ? !e.defaultPrevented : true;\n    } else if (\n      !e.defaultPrevented && // onPress prevented default\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      (e.button == null || e.button === 0) && // ignore everything but left clicks\n      // @ts-expect-error: these properties exist on web, but not in React Native\n      [undefined, null, '', 'self'].includes(e.currentTarget?.target) // let browser handle \"target=_blank\" etc.\n    ) {\n      e.preventDefault();\n      shouldHandle = true;\n    }\n\n    if (shouldHandle) {\n      if (action) {\n        if (navigation) {\n          navigation.dispatch(action);\n        } else if (root) {\n          root.dispatch(action);\n        } else {\n          throw new Error(\n            \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n          );\n        }\n      } else {\n        linkTo(to);\n      }\n    }\n  };\n\n  const getPathFromStateHelper = options?.getPathFromState ?? getPathFromState;\n\n  const href =\n    typeof to === 'string'\n      ? to\n      : getPathFromStateHelper(\n          {\n            routes: [\n              {\n                name: to.screen,\n                // @ts-expect-error\n                params: to.params,\n                // @ts-expect-error\n                state: getStateFromParams(to.params),\n              },\n            ],\n          },\n          options?.config\n        );\n\n  return {\n    href,\n    accessibilityRole: 'link' as const,\n    onPress,\n  };\n}\n","import {\n  getActionFromState,\n  getStateFromPath,\n  NavigationContainerRefContext,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\n\nexport type To<\n  ParamList extends ReactNavigation.RootParamList = ReactNavigation.RootParamList,\n  RouteName extends keyof ParamList = keyof ParamList\n> =\n  | string\n  | (undefined extends ParamList[RouteName]\n      ? {\n          screen: Extract<RouteName, string>;\n          params?: ParamList[RouteName];\n        }\n      : {\n          screen: Extract<RouteName, string>;\n          params: ParamList[RouteName];\n        });\n\nexport default function useLinkTo<\n  ParamList extends ReactNavigation.RootParamList\n>() {\n  const navigation = React.useContext(NavigationContainerRefContext);\n  const linking = React.useContext(LinkingContext);\n\n  const linkTo = React.useCallback(\n    (to: To<ParamList>) => {\n      if (navigation === undefined) {\n        throw new Error(\n          \"Couldn't find a navigation object. Is your component inside NavigationContainer?\"\n        );\n      }\n\n      if (typeof to !== 'string') {\n        // @ts-expect-error: This is fine\n        navigation.navigate(to.screen, to.params);\n        return;\n      }\n\n      if (!to.startsWith('/')) {\n        throw new Error(`The path must start with '/' (${to}).`);\n      }\n\n      const { options } = linking;\n\n      const state = options?.getStateFromPath\n        ? options.getStateFromPath(to, options.config)\n        : getStateFromPath(to, options?.config);\n\n      if (state) {\n        const action = getActionFromState(state, options?.config);\n\n        if (action !== undefined) {\n          navigation.dispatch(action);\n        } else {\n          navigation.reset(state);\n        }\n      } else {\n        throw new Error('Failed to parse the path to a navigation state.');\n      }\n    },\n    [linking, navigation]\n  );\n\n  return linkTo;\n}\n","import {\n  getActionFromState as getActionFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport { Linking, Platform } from 'react-native';\n\nimport extractPathFromURL from './extractPathFromURL';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\ntype Options = LinkingOptions<ParamListBase> & {\n  independent?: boolean;\n};\n\nlet linkingHandlers: Symbol[] = [];\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    independent,\n    enabled = true,\n    prefixes,\n    filter,\n    config,\n    getInitialURL = () =>\n      Promise.race([\n        Linking.getInitialURL(),\n        new Promise<undefined>((resolve) =>\n          // Timeout in 150ms if `getInitialState` doesn't resolve\n          // Workaround for https://github.com/facebook/react-native/issues/25675\n          setTimeout(resolve, 150)\n        ),\n      ]),\n    subscribe = (listener) => {\n      const callback = ({ url }: { url: string }) => listener(url);\n\n      const subscription = Linking.addEventListener('url', callback) as\n        | { remove(): void }\n        | undefined;\n\n      // Storing this in a local variable stops Jest from complaining about import after teardown\n      const removeEventListener = Linking.removeEventListener?.bind(Linking);\n\n      return () => {\n        // https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7\n        if (subscription?.remove) {\n          subscription.remove();\n        } else {\n          removeEventListener?.('url', callback);\n        }\n      };\n    },\n    getStateFromPath = getStateFromPathDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options\n) {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return undefined;\n    }\n\n    if (independent) {\n      return undefined;\n    }\n\n    if (enabled !== false && linkingHandlers.length) {\n      console.error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",\n          '- Only a single instance of the root component is rendered',\n          Platform.OS === 'android'\n            ? \"- You have set 'android:launchMode=singleTask' in the '<activity />' section of the 'AndroidManifest.xml' file to avoid launching multiple instances\"\n            : '',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    }\n\n    const handler = Symbol();\n\n    if (enabled !== false) {\n      linkingHandlers.push(handler);\n    }\n\n    return () => {\n      const index = linkingHandlers.indexOf(handler);\n\n      if (index > -1) {\n        linkingHandlers.splice(index, 1);\n      }\n    };\n  }, [enabled, independent]);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const prefixesRef = React.useRef(prefixes);\n  const filterRef = React.useRef(filter);\n  const configRef = React.useRef(config);\n  const getInitialURLRef = React.useRef(getInitialURL);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    prefixesRef.current = prefixes;\n    filterRef.current = filter;\n    configRef.current = config;\n    getInitialURLRef.current = getInitialURL;\n    getStateFromPathRef.current = getStateFromPath;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const getStateFromURL = React.useCallback(\n    (url: string | null | undefined) => {\n      if (!url || (filterRef.current && !filterRef.current(url))) {\n        return undefined;\n      }\n\n      const path = extractPathFromURL(prefixesRef.current, url);\n\n      return path !== undefined\n        ? getStateFromPathRef.current(path, configRef.current)\n        : undefined;\n    },\n    []\n  );\n\n  const getInitialState = React.useCallback(() => {\n    let state: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const url = getInitialURLRef.current();\n\n      if (url != null && typeof url !== 'string') {\n        return url.then((url) => {\n          const state = getStateFromURL(url);\n\n          return state;\n        });\n      }\n\n      state = getStateFromURL(url);\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(state) : state);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n  }, [getStateFromURL]);\n\n  React.useEffect(() => {\n    const listener = (url: string) => {\n      if (!enabled) {\n        return;\n      }\n\n      const navigation = ref.current;\n      const state = navigation ? getStateFromURL(url) : undefined;\n\n      if (navigation && state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        const action = getActionFromStateRef.current(state, configRef.current);\n\n        if (action !== undefined) {\n          try {\n            navigation.dispatch(action);\n          } catch (e) {\n            // Ignore any errors from deep linking.\n            // This could happen in case of malformed links, navigation object not being initialized etc.\n            console.warn(\n              `An error occurred when trying to handle the link '${url}': ${\n                typeof e === 'object' && e != null && 'message' in e\n                  ? // @ts-expect-error: we're already checking for this\n                    e.message\n                  : e\n              }`\n            );\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      }\n    };\n\n    return subscribe(listener);\n  }, [enabled, getStateFromURL, ref, subscribe]);\n\n  return {\n    getInitialState,\n  };\n}\n","import { EventArg, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\n\ntype ScrollOptions = { x?: number; y?: number; animated?: boolean };\n\ntype ScrollableView =\n  | { scrollToTop(): void }\n  | { scrollTo(options: ScrollOptions): void }\n  | { scrollToOffset(options: { offset?: number; animated?: boolean }): void }\n  | { scrollResponderScrollTo(options: ScrollOptions): void };\n\ntype ScrollableWrapper =\n  | { getScrollResponder(): React.ReactNode }\n  | { getNode(): ScrollableView }\n  | ScrollableView;\n\nfunction getScrollableNode(ref: React.RefObject<ScrollableWrapper>) {\n  if (ref.current == null) {\n    return null;\n  }\n\n  if (\n    'scrollToTop' in ref.current ||\n    'scrollTo' in ref.current ||\n    'scrollToOffset' in ref.current ||\n    'scrollResponderScrollTo' in ref.current\n  ) {\n    // This is already a scrollable node.\n    return ref.current;\n  } else if ('getScrollResponder' in ref.current) {\n    // If the view is a wrapper like FlatList, SectionList etc.\n    // We need to use `getScrollResponder` to get access to the scroll responder\n    return ref.current.getScrollResponder();\n  } else if ('getNode' in ref.current) {\n    // When a `ScrollView` is wraped in `Animated.createAnimatedComponent`\n    // we need to use `getNode` to get the ref to the actual scrollview.\n    // Note that `getNode` is deprecated in newer versions of react-native\n    // this is why we check if we already have a scrollable node above.\n    return ref.current.getNode();\n  } else {\n    return ref.current;\n  }\n}\n\nexport default function useScrollToTop(\n  ref: React.RefObject<ScrollableWrapper>\n) {\n  const navigation = useNavigation();\n  const route = useRoute();\n\n  React.useEffect(() => {\n    let current = navigation;\n\n    // The screen might be inside another navigator such as stack nested in tabs\n    // We need to find the closest tab navigator and add the listener there\n    while (current && current.getState().type !== 'tab') {\n      current = current.getParent();\n    }\n\n    if (!current) {\n      return;\n    }\n\n    const unsubscribe = current.addListener(\n      // We don't wanna import tab types here to avoid extra deps\n      // in addition, there are multiple tab implementations\n      // @ts-expect-error\n      'tabPress',\n      (e: EventArg<'tabPress', true>) => {\n        // We should scroll to top only when the screen is focused\n        const isFocused = navigation.isFocused();\n\n        // In a nested stack navigator, tab press resets the stack to first screen\n        // So we should scroll to top only when we are on first screen\n        const isFirst =\n          navigation === current ||\n          navigation.getState().routes[0].key === route.key;\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          const scrollable = getScrollableNode(ref) as ScrollableWrapper;\n\n          if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n            if ('scrollToTop' in scrollable) {\n              scrollable.scrollToTop();\n            } else if ('scrollTo' in scrollable) {\n              scrollable.scrollTo({ x: 0, y: 0, animated: true });\n            } else if ('scrollToOffset' in scrollable) {\n              scrollable.scrollToOffset({ offset: 0, animated: true });\n            } else if ('scrollResponderScrollTo' in scrollable) {\n              scrollable.scrollResponderScrollTo({ y: 0, animated: true });\n            }\n          }\n        });\n      }\n    );\n\n    return unsubscribe;\n  }, [navigation, ref, route.key]);\n}\n","import * as React from 'react';\n\nexport default function useThenable<T>(create: () => PromiseLike<T>) {\n  const [promise] = React.useState(create);\n\n  let initialState: [boolean, T | undefined] = [false, undefined];\n\n  // Check if our thenable is synchronous\n  promise.then((result) => {\n    initialState = [true, result];\n  });\n\n  const [state, setState] = React.useState(initialState);\n  const [resolved] = state;\n\n  React.useEffect(() => {\n    let cancelled = false;\n\n    const resolve = async () => {\n      let result;\n\n      try {\n        result = await promise;\n      } finally {\n        if (!cancelled) {\n          setState([true, result]);\n        }\n      }\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n\n  return state;\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport type {\n  CommonNavigationAction,\n  NavigationState,\n  PartialState,\n} from './types';\n\n/**\n * Base router object that can be used when writing custom routers.\n * This provides few helper methods to handle common actions such as `RESET`.\n */\nconst BaseRouter = {\n  getStateForAction<State extends NavigationState>(\n    state: State,\n    action: CommonNavigationAction\n  ): State | PartialState<State> | null {\n    switch (action.type) {\n      case 'SET_PARAMS': {\n        const index = action.source\n          ? state.routes.findIndex((r) => r.key === action.source)\n          : state.index;\n\n        if (index === -1) {\n          return null;\n        }\n\n        return {\n          ...state,\n          routes: state.routes.map((r, i) =>\n            i === index\n              ? { ...r, params: { ...r.params, ...action.payload.params } }\n              : r\n          ),\n        };\n      }\n\n      case 'RESET': {\n        const nextState = action.payload as State | PartialState<State>;\n\n        if (\n          nextState.routes.length === 0 ||\n          nextState.routes.some(\n            (route: { name: string }) => !state.routeNames.includes(route.name)\n          )\n        ) {\n          return null;\n        }\n\n        if (nextState.stale === false) {\n          if (\n            state.routeNames.length !== nextState.routeNames.length ||\n            nextState.routeNames.some(\n              (name) => !state.routeNames.includes(name)\n            )\n          ) {\n            return null;\n          }\n\n          return {\n            ...nextState,\n            routes: nextState.routes.map((route) =>\n              route.key ? route : { ...route, key: `${route.name}-${nanoid()}` }\n            ),\n          };\n        }\n\n        return nextState;\n      }\n\n      default:\n        return null;\n    }\n  },\n\n  shouldActionChangeFocus(action: CommonNavigationAction) {\n    return action.type === 'NAVIGATE';\n  },\n};\n\nexport default BaseRouter;\n","import type { NavigationState, PartialState, Route } from './types';\n\ntype ResetState =\n  | PartialState<NavigationState>\n  | NavigationState\n  | (Omit<NavigationState, 'routes'> & {\n      routes: Omit<Route<string>, 'key'>[];\n    });\n\nexport type Action =\n  | {\n      type: 'GO_BACK';\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'NAVIGATE';\n      payload:\n        | {\n            key: string;\n            name?: undefined;\n            params?: object;\n            path?: string;\n            merge?: boolean;\n          }\n        | {\n            name: string;\n            key?: string;\n            params?: object;\n            path?: string;\n            merge?: boolean;\n          };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'RESET';\n      payload: ResetState | undefined;\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'SET_PARAMS';\n      payload: { params?: object };\n      source?: string;\n      target?: string;\n    };\n\nexport function goBack(): Action {\n  return { type: 'GO_BACK' };\n}\n\nexport function navigate(\n  options:\n    | { key: string; params?: object; path?: string; merge?: boolean }\n    | {\n        name: string;\n        key?: string;\n        params?: object;\n        path?: string;\n        merge?: boolean;\n      }\n): Action;\n// eslint-disable-next-line no-redeclare\nexport function navigate(name: string, params?: object): Action;\n// eslint-disable-next-line no-redeclare\nexport function navigate(...args: any): Action {\n  if (typeof args[0] === 'string') {\n    return { type: 'NAVIGATE', payload: { name: args[0], params: args[1] } };\n  } else {\n    const payload = args[0] || {};\n\n    if (!payload.hasOwnProperty('key') && !payload.hasOwnProperty('name')) {\n      throw new Error(\n        'You need to specify name or key when calling navigate with an object as the argument. See https://reactnavigation.org/docs/navigation-actions#navigate for usage.'\n      );\n    }\n\n    return { type: 'NAVIGATE', payload };\n  }\n}\n\nexport function reset(state: ResetState | undefined): Action {\n  return { type: 'RESET', payload: state };\n}\n\nexport function setParams(params: object): Action {\n  return { type: 'SET_PARAMS', payload: { params } };\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport TabRouter, {\n  TabActionHelpers,\n  TabActions,\n  TabActionType,\n  TabNavigationState,\n  TabRouterOptions,\n} from './TabRouter';\nimport type {\n  CommonNavigationAction,\n  ParamListBase,\n  PartialState,\n  Router,\n} from './types';\nexport type DrawerStatus = 'open' | 'closed';\n\nexport type DrawerActionType =\n  | TabActionType\n  | {\n      type: 'OPEN_DRAWER' | 'CLOSE_DRAWER' | 'TOGGLE_DRAWER';\n      source?: string;\n      target?: string;\n    };\n\nexport type DrawerRouterOptions = TabRouterOptions & {\n  defaultStatus?: DrawerStatus;\n};\n\nexport type DrawerNavigationState<ParamList extends ParamListBase> = Omit<\n  TabNavigationState<ParamList>,\n  'type' | 'history'\n> & {\n  /**\n   * Type of the router, in this case, it's drawer.\n   */\n  type: 'drawer';\n  /**\n   * Default status of the drawer.\n   */\n  default: DrawerStatus;\n  /**\n   * List of previously visited route keys and drawer open status.\n   */\n  history: (\n    | { type: 'route'; key: string }\n    | { type: 'drawer'; status: DrawerStatus }\n  )[];\n};\n\nexport type DrawerActionHelpers<ParamList extends ParamListBase> =\n  TabActionHelpers<ParamList> & {\n    /**\n     * Open the drawer sidebar.\n     */\n    openDrawer(): void;\n\n    /**\n     * Close the drawer sidebar.\n     */\n    closeDrawer(): void;\n\n    /**\n     * Open the drawer sidebar if closed, or close if opened.\n     */\n    toggleDrawer(): void;\n  };\n\nexport const DrawerActions = {\n  ...TabActions,\n  openDrawer(): DrawerActionType {\n    return { type: 'OPEN_DRAWER' };\n  },\n  closeDrawer(): DrawerActionType {\n    return { type: 'CLOSE_DRAWER' };\n  },\n  toggleDrawer(): DrawerActionType {\n    return { type: 'TOGGLE_DRAWER' };\n  },\n};\n\nexport default function DrawerRouter({\n  defaultStatus = 'closed',\n  ...rest\n}: DrawerRouterOptions): Router<\n  DrawerNavigationState<ParamListBase>,\n  DrawerActionType | CommonNavigationAction\n> {\n  const router = TabRouter(rest) as unknown as Router<\n    DrawerNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  >;\n\n  const isDrawerInHistory = (\n    state:\n      | DrawerNavigationState<ParamListBase>\n      | PartialState<DrawerNavigationState<ParamListBase>>\n  ) => Boolean(state.history?.some((it) => it.type === 'drawer'));\n\n  const addDrawerToHistory = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (isDrawerInHistory(state)) {\n      return state;\n    }\n\n    return {\n      ...state,\n      history: [\n        ...state.history,\n        {\n          type: 'drawer',\n          status: defaultStatus === 'open' ? 'closed' : 'open',\n        },\n      ],\n    };\n  };\n\n  const removeDrawerFromHistory = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (!isDrawerInHistory(state)) {\n      return state;\n    }\n\n    return {\n      ...state,\n      history: state.history.filter((it) => it.type !== 'drawer'),\n    };\n  };\n\n  const openDrawer = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (defaultStatus === 'open') {\n      return removeDrawerFromHistory(state);\n    }\n\n    return addDrawerToHistory(state);\n  };\n\n  const closeDrawer = (\n    state: DrawerNavigationState<ParamListBase>\n  ): DrawerNavigationState<ParamListBase> => {\n    if (defaultStatus === 'open') {\n      return addDrawerToHistory(state);\n    }\n\n    return removeDrawerFromHistory(state);\n  };\n\n  return {\n    ...router,\n\n    type: 'drawer',\n\n    getInitialState({ routeNames, routeParamList, routeGetIdList }) {\n      const state = router.getInitialState({\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n      });\n\n      return {\n        ...state,\n        default: defaultStatus,\n        stale: false,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getRehydratedState(\n      partialState,\n      { routeNames, routeParamList, routeGetIdList }\n    ) {\n      if (partialState.stale === false) {\n        return partialState;\n      }\n\n      let state = router.getRehydratedState(partialState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n      });\n\n      if (isDrawerInHistory(partialState)) {\n        // Re-sync the drawer entry in history to correct it if it was wrong\n        state = removeDrawerFromHistory(state);\n        state = addDrawerToHistory(state);\n      }\n\n      return {\n        ...state,\n        default: defaultStatus,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const result = router.getStateForRouteFocus(state, key);\n\n      return closeDrawer(result);\n    },\n\n    getStateForAction(state, action, options) {\n      switch (action.type) {\n        case 'OPEN_DRAWER':\n          return openDrawer(state);\n\n        case 'CLOSE_DRAWER':\n          return closeDrawer(state);\n\n        case 'TOGGLE_DRAWER':\n          if (isDrawerInHistory(state)) {\n            return removeDrawerFromHistory(state);\n          }\n\n          return addDrawerToHistory(state);\n\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          const result = router.getStateForAction(state, action, options);\n\n          if (result != null && result.index !== state.index) {\n            return closeDrawer(result as DrawerNavigationState<ParamListBase>);\n          }\n\n          return result;\n        }\n\n        case 'GO_BACK':\n          if (isDrawerInHistory(state)) {\n            return removeDrawerFromHistory(state);\n          }\n\n          return router.getStateForAction(state, action, options);\n\n        default:\n          return router.getStateForAction(state, action, options);\n      }\n    },\n\n    actionCreators: DrawerActions,\n  };\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  Route,\n  Router,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<ParamList extends ParamListBase> =\n  NavigationState<ParamList> & {\n    /**\n     * Type of the router, in this case, it's stack.\n     */\n    type: 'stack';\n  };\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = state.routes.filter(\n        (route) =>\n          routeNames.includes(route.name) &&\n          !routeKeyChanges.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route = id\n              ? state.routes.find(\n                  (route) =>\n                    route.name === action.payload.name &&\n                    id === getId?.({ params: route.params })\n                )\n              : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  routeParamList[action.payload.name] !== undefined\n                    ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params,\n                      }\n                    : action.payload.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key: `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) =>\n                  route.name === action.payload.name &&\n                  id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  path: action.payload.path,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge) {\n              params =\n                action.payload.params !== undefined ||\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params,\n                    }\n                  : route.params;\n            } else {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params ||\n                (action.payload.path && action.payload.path !== route.path)\n                  ? {\n                      ...route,\n                      path: action.payload.path ?? route.path,\n                      params,\n                    }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n","import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior =\n  | 'initialRoute'\n  | 'firstRoute'\n  | 'history'\n  | 'order'\n  | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState<ParamList extends ParamListBase> = Omit<\n  NavigationState<ParamList>,\n  'history'\n> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nexport type TabActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Jump to an existing tab.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  jumpTo<RouteName extends Extract<keyof ParamList, string>>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n  let initialRouteIndex;\n\n  switch (backBehavior) {\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key,\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(\n        (route) => route.name === initialRouteName\n      );\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key,\n        });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState<ParamListBase>,\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter((it) => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(\n      state.routes,\n      index,\n      backBehavior,\n      initialRouteName\n    );\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'firstRoute',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map((name) => ({\n        name,\n        key: `${name}-${nanoid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(\n        routes,\n        index,\n        backBehavior,\n        initialRouteName\n      );\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${nanoid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map((name) => {\n        const route = (\n          state as PartialState<TabNavigationState<ParamListBase>>\n        ).routes.find((r) => r.name === name);\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${nanoid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0),\n        routes.length - 1\n      );\n\n      const history =\n        state.history?.filter((it) => routes.find((r) => r.key === it.key)) ??\n        [];\n\n      return changeIndex(\n        {\n          stale: false,\n          type: 'tab',\n          key: `tab-${nanoid()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n        },\n        index,\n        backBehavior,\n        initialRouteName\n      );\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = routeNames.map(\n        (name) =>\n          state.routes.find(\n            (r) => r.name === name && !routeKeyChanges.includes(r.name)\n          ) || {\n            name,\n            key: `${name}-${nanoid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        (it) => it.type !== 'route' || routes.find((r) => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(\n          routes,\n          index,\n          backBehavior,\n          initialRouteName\n        );\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n\n    getStateForAction(state, action, { routeParamList }) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              (route) => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              (route) => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes: state.routes.map((route, i) => {\n                if (i !== index) {\n                  return route;\n                }\n\n                let params;\n\n                if (action.type === 'NAVIGATE' && action.payload.merge) {\n                  params =\n                    action.payload.params !== undefined ||\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...route.params,\n                          ...action.payload.params,\n                        }\n                      : route.params;\n                } else {\n                  params =\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params;\n                }\n\n                const path =\n                  action.type === 'NAVIGATE' && action.payload.path != null\n                    ? action.payload.path\n                    : route.path;\n\n                return params !== route.params || path !== route.path\n                  ? { ...route, path, params }\n                  : route;\n              }),\n            },\n            index,\n            backBehavior,\n            initialRouteName\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            (route) => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n","import * as CommonActions from './CommonActions';\n\nexport { CommonActions };\n\nexport { default as BaseRouter } from './BaseRouter';\nexport type {\n  DrawerActionHelpers,\n  DrawerActionType,\n  DrawerNavigationState,\n  DrawerRouterOptions,\n  DrawerStatus,\n} from './DrawerRouter';\nexport { DrawerActions, default as DrawerRouter } from './DrawerRouter';\nexport type {\n  StackActionHelpers,\n  StackActionType,\n  StackNavigationState,\n  StackRouterOptions,\n} from './StackRouter';\nexport { StackActions, default as StackRouter } from './StackRouter';\nexport type {\n  TabActionHelpers,\n  TabActionType,\n  TabNavigationState,\n  TabRouterOptions,\n} from './TabRouter';\nexport { TabActions, default as TabRouter } from './TabRouter';\nexport * from './types';\n","import type * as CommonActions from './CommonActions';\n\nexport type CommonNavigationAction = CommonActions.Action;\n\ntype NavigationRoute<\n  ParamList extends ParamListBase,\n  RouteName extends keyof ParamList\n> = Route<Extract<RouteName, string>, ParamList[RouteName]> & {\n  state?: NavigationState | PartialState<NavigationState>;\n};\n\nexport type NavigationState<ParamList extends ParamListBase = ParamListBase> =\n  Readonly<{\n    /**\n     * Unique key for the navigation state.\n     */\n    key: string;\n    /**\n     * Index of the currently focused route.\n     */\n    index: number;\n    /**\n     * List of valid route names as defined in the screen components.\n     */\n    routeNames: Extract<keyof ParamList, string>[];\n    /**\n     * Alternative entries for history.\n     */\n    history?: unknown[];\n    /**\n     * List of rendered routes.\n     */\n    routes: NavigationRoute<ParamList, keyof ParamList>[];\n    /**\n     * Custom type for the state, whether it's for tab, stack, drawer etc.\n     * During rehydration, the state will be discarded if type doesn't match with router type.\n     * It can also be used to detect the type of the navigator we're dealing with.\n     */\n    type: string;\n    /**\n     * Whether the navigation state has been rehydrated.\n     */\n    stale: false;\n  }>;\n\nexport type InitialState = Readonly<\n  Partial<Omit<NavigationState, 'stale' | 'routes'>> & {\n    routes: (Omit<Route<string>, 'key'> & { state?: InitialState })[];\n  }\n>;\n\nexport type PartialRoute<R extends Route<string>> = Omit<R, 'key'> & {\n  key?: string;\n  state?: PartialState<NavigationState>;\n};\n\nexport type PartialState<State extends NavigationState> = Partial<\n  Omit<State, 'stale' | 'routes'>\n> &\n  Readonly<{\n    stale?: true;\n    routes: PartialRoute<Route<State['routeNames'][number]>>[];\n  }>;\n\nexport type Route<\n  RouteName extends string,\n  Params extends object | undefined = object | undefined\n> = Readonly<{\n  /**\n   * Unique key for the route.\n   */\n  key: string;\n  /**\n   * User-provided name for the route.\n   */\n  name: RouteName;\n  /**\n   * Path associated with the route.\n   * Usually present when the screen was opened from a deep link.\n   */\n  path?: string;\n}> &\n  (undefined extends Params\n    ? Readonly<{\n        /**\n         * Params for this route\n         */\n        params?: Readonly<Params>;\n      }>\n    : Readonly<{\n        /**\n         * Params for this route\n         */\n        params: Readonly<Params>;\n      }>);\n\nexport type ParamListBase = Record<string, object | undefined>;\n\nexport type NavigationAction = Readonly<{\n  /**\n   * Type of the action (e.g. `NAVIGATE`)\n   */\n  type: string;\n  /**\n   * Additional data for the action\n   */\n  payload?: object;\n  /**\n   * Key of the route which dispatched this action.\n   */\n  source?: string;\n  /**\n   * Key of the navigator which should handle this action.\n   */\n  target?: string;\n}>;\n\nexport type ActionCreators<Action extends NavigationAction> = {\n  [key: string]: (...args: any) => Action;\n};\n\nexport type DefaultRouterOptions<RouteName extends string = string> = {\n  /**\n   * Name of the route to focus by on initial render.\n   * If not specified, usually the first route is used.\n   */\n  initialRouteName?: RouteName;\n};\n\nexport type RouterFactory<\n  State extends NavigationState,\n  Action extends NavigationAction,\n  RouterOptions extends DefaultRouterOptions\n> = (options: RouterOptions) => Router<State, Action>;\n\nexport type RouterConfigOptions = {\n  routeNames: string[];\n  routeParamList: ParamListBase;\n  routeGetIdList: Record<\n    string,\n    | ((options: { params?: Record<string, any> }) => string | undefined)\n    | undefined\n  >;\n};\n\nexport type Router<\n  State extends NavigationState,\n  Action extends NavigationAction\n> = {\n  /**\n   * Type of the router. Should match the `type` property in state.\n   * If the type doesn't match, the state will be discarded during rehydration.\n   */\n  type: State['type'];\n\n  /**\n   * Initialize the navigation state.\n   *\n   * @param options.routeNames List of valid route names as defined in the screen components.\n   * @param options.routeParamsList Object containing params for each route.\n   */\n  getInitialState(options: RouterConfigOptions): State;\n\n  /**\n   * Rehydrate the full navigation state from a given partial state.\n   *\n   * @param partialState Navigation state to rehydrate from.\n   * @param options.routeNames List of valid route names as defined in the screen components.\n   * @param options.routeParamsList Object containing params for each route.\n   */\n  getRehydratedState(\n    partialState: PartialState<State> | State,\n    options: RouterConfigOptions\n  ): State;\n\n  /**\n   * Take the current state and updated list of route names, and return a new state.\n   *\n   * @param state State object to update.\n   * @param options.routeNames New list of route names.\n   * @param options.routeParamsList Object containing params for each route.\n   */\n  getStateForRouteNamesChange(\n    state: State,\n    options: RouterConfigOptions & {\n      /**\n       * List of routes whose key has changed even if they still have the same name.\n       * This allows to remove screens declaratively.\n       */\n      routeKeyChanges: string[];\n    }\n  ): State;\n\n  /**\n   * Take the current state and key of a route, and return a new state with the route focused\n   *\n   * @param state State object to apply the action on.\n   * @param key Key of the route to focus.\n   */\n  getStateForRouteFocus(state: State, key: string): State;\n\n  /**\n   * Take the current state and action, and return a new state.\n   * If the action cannot be handled, return `null`.\n   *\n   * @param state State object to apply the action on.\n   * @param action Action object to apply.\n   * @param options.routeNames List of valid route names as defined in the screen components.\n   * @param options.routeParamsList Object containing params for each route.\n   */\n  getStateForAction(\n    state: State,\n    action: Action,\n    options: RouterConfigOptions\n  ): State | PartialState<State> | null;\n\n  /**\n   * Whether the action should also change focus in parent navigator\n   *\n   * @param action Action object to check.\n   */\n  shouldActionChangeFocus(action: NavigationAction): boolean;\n\n  /**\n   * Action creators for the router.\n   */\n  actionCreators?: ActionCreators<Action>;\n};\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar useIsomorphicLayoutEffect = typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook which returns the latest callback without changing the reference.\n */\nfunction useLatestCallback(callback) {\n    var ref = React.useRef(callback);\n    var latestCallback = React.useRef(function latestCallback() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // eslint-disable-next-line babel/no-invalid-this\n        return ref.current.apply(this, args);\n    }).current;\n    useIsomorphicLayoutEffect(function () {\n        ref.current = callback;\n    });\n    return latestCallback;\n}\nexports.default = useLatestCallback;\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nmodule.exports = { nanoid, customAlphabet }\n"],"names":["serializableWarnings","duplicateNameWarnings","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","React","forwardRef","ref","initialState","onStateChange","onUnhandledAction","independent","children","parent","useContext","NavigationStateContext","isDefault","Error","useSyncState","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","useChildListeners","listeners","addListener","useKeyedChildListeners","keyedListeners","addKeyedListener","dispatch","action","focus","console","error","NOT_INITIALIZED_ERROR","navigation","canGoBack","result","handled","resetRoot","target","root","CommonActions","reset","getRootState","getCurrentRoute","findFocusedRoute","emitter","useEventEmitter","useOptionsGetters","addOptionsGetter","getCurrentOptions","useMemo","Object","keys","reduce","acc","name","create","isFocused","getParent","stateRef","isReady","useImperativeHandle","onDispatchAction","noop","emit","type","data","stack","stackRef","lastEmittedOptionsRef","onOptionsChange","options","builderContext","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","hydratedState","process","env","NODE_ENV","serializableResult","checkSerializable","serializable","location","reason","path","pointer","params","i","length","curr","prev","test","JSON","stringify","message","includes","push","warn","duplicateRouteNamesResult","checkDuplicateRouteNames","locations","join","defaultOnUnhandledAction","payload","element","CurrentRenderContext","createContext","MULTIPLE_NAVIGATOR_ERROR","SingleNavigatorContext","EnsureSingleNavigator","value","register","currentKey","unregister","Group","_","NavigationBuilderContext","NavigationContainerRefContext","NavigationContext","NavigationHelpersContext","NavigationRouteContext","MISSING_CONTEXT_ERROR","PreventRemoveContext","transformPreventedRoutes","preventedRoutesMap","preventedRoutesToTransform","values","preventedRoutes","routeKey","preventRemove","PreventRemoveProvider","useState","nanoid","parentId","Map","setPreventedRoutesMap","preventRemoveContextValue","setParentPrevented","setPreventRemove","useLatestCallback","id","every","prevPrevented","get","nextPrevented","set","delete","isPrevented","some","SceneView","screen","routeState","clearOptions","getCurrentState","currentRoute","find","r","setCurrentState","child","ScreenComponent","getComponent","component","Screen","StaticContainer","props","memo","prevProps","nextProps","prevPropKeys","nextPropKeys","UnhandledActionContext","duplicates","getRouteNames","forEach","currentLocation","routeName","checkSerializableWithoutCircularReference","o","seen","prototype","toString","call","Array","isArray","String","has","add","childResult","Set","createNavigationContainerRef","methods","removeListener","event","callback","filter","cb","entries","callbacks","args","createNavigatorFactory","Navigator","arguments","index","fromEntries","k","v","hasOwnProperty","getActionFromState","normalizedConfig","createNormalizedConfigItem","slice","initialRouteName","config","screens","assign","initial","createNormalizedConfigs","getFocusedRouteNameFromRoute","CHILD_STATE","getActiveRoute","getPathFromState","validatePathConfig","configs","allParams","pattern","focusedParams","focusedRoute","currentOptions","nestedRouteNames","hasNext","currentParams","split","p","startsWith","getParamName","nextRoute","nestedConfig","endsWith","encodeURIComponent","param","query","queryString","sort","replace","joinPaths","paths","concat","Boolean","createConfigItem","parentPattern","exact","c","getStateFromPath","initialRoutes","parentScreens","remaining","segment","decodeURIComponent","createNestedStateObject","a","b","localeCompare","aParts","bParts","Math","max","aWildCard","bWildCard","intersects","it","match","matchAgainstConfigs","regex","RegExp","source","remainingPath","matchedParams","parse","routeConfig","initials","pop","escape","findParseConfigForRoute","flatConfig","findInitialRoute","sameParents","createStateObject","initialRoute","isEmpty","shift","nestedState","nestedStateIndex","parseQueryParams","parseConfig","isArrayEqual","isRecordEqual","aKeys","bKeys","PrivateValueStore","listener","removed","indexOf","splice","NavigationContent","render","useComponent","renderRef","useCurrentRender","descriptors","useDescriptors","screenOptions","defaultScreenOptions","onAction","onRouteFocus","router","setOptions","navigations","useNavigationCache","useRouteCache","optionsList","customOptions","mergedOptions","rest","listen","listenRef","canPreventDefault","items","t","self","lastIndexOf","defineProperty","enumerable","defaultPrevented","defineProperties","preventDefault","useFocusEffect","effect","useNavigation","cleanup","destroy","then","unsubscribeFocus","unsubscribeBlur","useFocusEvents","lastFocusedKeyRef","currentFocusedKey","lastFocusedKey","useFocusedListenersChildrenAdapter","focusedListeners","useIsFocused","setIsFocused","valueToReturn","useDebugValue","beforeRemove","isValidKey","getRouteConfigsFromChildren","groupKey","groupOptions","Children","toArray","isValidElement","navigationKey","Fragment","isValidElementType","useNavigationBuilder","createRouter","navigatorKey","useRegisterNavigator","screenListeners","routeConfigs","routeKeyList","routeParamList","initialParams","routeGetIdList","getId","isStateValid","isStateInitialized","currentState","stateCleanedUp","cleanUpState","initialRouteParamList","initialParamsFromParams","getInitialState","getRehydratedState","initializedState","isFirstStateInitialization","previousRouteKeyListRef","previousRouteKeyList","nextState","getStateForRouteNamesChange","routeKeyChanges","previousNestedParamsRef","previousParams","navigate","updatedState","getStateForAction","shouldUpdate","useScheduleUpdate","setTimeout","initializedStateRef","e","childListeners","useOnAction","actionListeners","beforeRemoveListeners","routerConfigOptions","useOnRouteFocus","useNavigationHelpers","useOnGetState","getStateListeners","cache","actions","actionCreators","previous","thunk","withStack","isStackSet","helpers","useNavigationContainerRef","navigatorId","parentNavigationHelpers","op","navigationHelpers","goBack","useNavigationState","selector","setResult","selectorRef","unsubscribe","onActionParent","onRouteFocusParent","addListenerParent","routerConfigOptionsRef","visitedNavigators","shouldPreventRemove","shouldFocus","shouldActionChangeFocus","useOnPreventRemove","childState","VISITED_ROUTE_KEYS","Symbol","currentRoutes","nextRoutes","nextRouteKeys","removedRoutes","reverse","visitedRouteKeys","beforeRemoveAction","sourceRouteKey","getStateForRouteFocus","optionsRef","optionsGettersFromChildRef","parentAddOptionsGetter","optionsChangeListener","hasChildren","getOptionsFromListener","optionsFromListener","getter","usePreventRemove","useRoute","usePreventRemoveContext","beforeRemoveListener","container","proxy","from","ScheduleUpdateContext","UNINTIALIZED_STATE","isSchedulingRef","isMountedRef","trackingState","setTrackingState","formatToList","validKeys","invalidKeys","Link","to","useLinkProps","onPress","createElement","Text","Platform","select","web","onClick","default","LinkingContext","displayName","global","REACT_NAVIGATION_DEVTOOLS","WeakMap","NavigationContainerInner","theme","DefaultTheme","linking","fallback","documentTitle","onReady","isLinkingEnabled","enabled","refContainer","useBackButton","useDocumentTitle","useLinking","prefixes","useThenable","isResolved","linkingContext","onReadyRef","NavigationContainer","ServerContainer","ServerContext","extractPathFromURL","url","prefix","protocol","host","escapeStringRegexp","prefixRegex","normalizedURL","DarkTheme","dark","colors","primary","background","card","text","border","notification","ThemeContext","ThemeProvider","useTheme","subscription","BackHandler","addEventListener","remove","getRootStateForNavigate","parentState","useLinkBuilder","buildLink","getStateFromParams","linkTo","useLinkTo","shouldHandle","OS","metaKey","altKey","ctrlKey","shiftKey","button","currentTarget","getPathFromStateHelper","href","accessibilityRole","linkingHandlers","getInitialURL","Promise","race","Linking","resolve","subscribe","removeEventListener","bind","getStateFromPathDefault","getActionFromStateDefault","trim","handler","enabledRef","prefixesRef","filterRef","configRef","getInitialURLRef","getStateFromPathRef","getActionFromStateRef","getStateFromURL","thenable","onfulfilled","catch","rootState","getScrollableNode","getScrollResponder","getNode","useScrollToTop","isFirst","requestAnimationFrame","scrollable","scrollToTop","scrollTo","x","y","animated","scrollToOffset","offset","scrollResponderScrollTo","promise","resolved","cancelled","BaseRouter","findIndex","setParams","DrawerActions","TabActions","openDrawer","closeDrawer","toggleDrawer","DrawerRouter","defaultStatus","TabRouter","isDrawerInHistory","history","addDrawerToHistory","status","removeDrawerFromHistory","StackActions","count","popToTop","StackRouter","min","merge","TYPE_ROUTE","jumpTo","getRouteHistory","backBehavior","initialRouteIndex","unshift","changeIndex","previousKey","hasSymbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_ASYNC_MODE_TYPE","REACT_CONCURRENT_MODE_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_RESPONDER_TYPE","REACT_SCOPE_TYPE","$$typeof","typeOf","object","$$typeofType","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","hasWarnedAboutDeprecatedIsAsyncMode","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","exports","module","require"],"sourceRoot":""}